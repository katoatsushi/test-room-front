[{"/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/applications/header.js":"1","/Users/katoatsushi/Desktop/room-app/room-frontend/src/rootReducer.ts":"2","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/create_admin_schedule.jsx":"3","/Users/katoatsushi/Desktop/room-app/room-frontend/src/interfaces.ts":"4","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/room_plus.jsx":"5","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/login.tsx":"6","/Users/katoatsushi/Desktop/room-app/room-frontend/src/Routes.tsx":"7","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/shifts/trainer_shifts.jsx":"8","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/shifts/create_shifts.jsx":"9","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/shifts/update_shifts.jsx":"10","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/appointments/appointment_new_func.js":"11","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/shifts/shift_new.jsx":"12","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_info/customer_birthday.jsx":"13","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/master_admins/create_admin.js":"14","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/records_history.jsx":"15","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/my_page.js":"16","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/weight_new.jsx":"17","/Users/katoatsushi/Desktop/room-app/room-frontend/src/index.tsx":"18","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/my_page.js":"19","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_evaluation_data.jsx":"20","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/my_page_weight_line_graph.jsx":"21","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/admin_menues.jsx":"22","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/admin_schedule_cehck.js":"23","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/create_trainer.js":"24","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/customer_all.jsx":"25","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/appointment_records/create_menues.js":"26","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/appointments/appointent_confirm.js":"27","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/appointments/select_store_fitness_func.js":"28","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/home.js":"29","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_individual_info/customer_interests.jsx":"30","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/master_admins/master_admin_top.js":"31","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/customers_session_records.jsx":"32","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/record/create_record.jsx":"33","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/record/record_show.jsx":"34","/Users/katoatsushi/Desktop/room-app/room-frontend/src/slices/customer_record.tsx":"35","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/confirmation.tsx":"36","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/record/record_confirm.jsx":"37","/Users/katoatsushi/Desktop/room-app/room-frontend/src/slices/admin.ts":"38","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/sign_up.js":"39","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_individual_info/customer_individual_info.jsx":"40","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/root.js":"41","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/check_trainer_menues.jsx":"42","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_info/create_customer_info.jsx":"43","/Users/katoatsushi/Desktop/room-app/room-frontend/src/slices/trainer.ts":"44","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_interests_edit.jsx":"45","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/my_page_interests_chips.jsx":"46","/Users/katoatsushi/Desktop/room-app/room-frontend/src/store.ts":"47","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/applications/footer.js":"48","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/appointments/select_date.js":"49","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/master_admins/create_companies.js":"50","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/appointment_records/new.js":"51","/Users/katoatsushi/Desktop/room-app/room-frontend/src/slices/customer.ts":"52","/Users/katoatsushi/Desktop/room-app/room-frontend/src/slices/master_admin.ts":"53","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/admin_top.jsx":"54","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/edit_profile/edit_my_profile.jsx":"55","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/record/set_times_weight.jsx":"56","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_individual_info/customer_condition.jsx":"57","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/inputFile.jsx":"58","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_info/customer_address.jsx":"59","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/shifts/text_field.jsx":"60","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/masked_text_field_for_trainer_shift.jsx":"61","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/customer_set_info_dialog.jsx":"62","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/edit_profile/input_name.jsx":"63","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/edit_profile/trainer_birthday.jsx":"64","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_individual_info/customer_jobs.jsx":"65","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/login.tsx":"66","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/master_admins/login.tsx":"67","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/login.tsx":"68","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/applications/sign_in.jsx":"69","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/evaluation.jsx":"70","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/login_snackbar.jsx":"71"},{"size":12591,"mtime":1617357361315,"results":"72","hashOfConfig":"73"},{"size":759,"mtime":1617286327772,"results":"74","hashOfConfig":"73"},{"size":12847,"mtime":1617448822639,"results":"75","hashOfConfig":"73"},{"size":3048,"mtime":1617353003599,"results":"76","hashOfConfig":"73"},{"size":7531,"mtime":1617440105347,"results":"77","hashOfConfig":"73"},{"size":7916,"mtime":1617504773497,"results":"78","hashOfConfig":"73"},{"size":6938,"mtime":1617408950220,"results":"79","hashOfConfig":"73"},{"size":12013,"mtime":1617528414560,"results":"80","hashOfConfig":"73"},{"size":11657,"mtime":1617518017123,"results":"81","hashOfConfig":"73"},{"size":14942,"mtime":1617521485853,"results":"82","hashOfConfig":"73"},{"size":5585,"mtime":1617451218246,"results":"83","hashOfConfig":"73"},{"size":3057,"mtime":1617517630920,"results":"84","hashOfConfig":"73"},{"size":3864,"mtime":1617315165770,"results":"85","hashOfConfig":"73"},{"size":5932,"mtime":1617505763095,"results":"86","hashOfConfig":"73"},{"size":2553,"mtime":1617529318727,"results":"87","hashOfConfig":"73"},{"size":5549,"mtime":1617422815273,"results":"88","hashOfConfig":"73"},{"size":5193,"mtime":1617342546646,"results":"89","hashOfConfig":"73"},{"size":2195,"mtime":1617314969364,"results":"90","hashOfConfig":"73"},{"size":16657,"mtime":1617532357429,"results":"91","hashOfConfig":"73"},{"size":5331,"mtime":1617368372194,"results":"92","hashOfConfig":"73"},{"size":1691,"mtime":1617356041437,"results":"93","hashOfConfig":"73"},{"size":3035,"mtime":1617448735227,"results":"94","hashOfConfig":"73"},{"size":8900,"mtime":1617348173570,"results":"95","hashOfConfig":"73"},{"size":10003,"mtime":1617506216410,"results":"96","hashOfConfig":"73"},{"size":7146,"mtime":1617342546646,"results":"97","hashOfConfig":"73"},{"size":7233,"mtime":1617315029830,"results":"98","hashOfConfig":"73"},{"size":7826,"mtime":1617448520759,"results":"99","hashOfConfig":"73"},{"size":5168,"mtime":1617451017273,"results":"100","hashOfConfig":"73"},{"size":5072,"mtime":1617356462594,"results":"101","hashOfConfig":"73"},{"size":4316,"mtime":1617315105866,"results":"102","hashOfConfig":"73"},{"size":4376,"mtime":1617505957935,"results":"103","hashOfConfig":"73"},{"size":8562,"mtime":1617413478803,"results":"104","hashOfConfig":"73"},{"size":5731,"mtime":1617453246534,"results":"105","hashOfConfig":"73"},{"size":7608,"mtime":1617342336424,"results":"106","hashOfConfig":"73"},{"size":1028,"mtime":1617409446676,"results":"107","hashOfConfig":"73"},{"size":6900,"mtime":1617315125898,"results":"108","hashOfConfig":"73"},{"size":8643,"mtime":1617454039327,"results":"109","hashOfConfig":"73"},{"size":1404,"mtime":1617280585806,"results":"110","hashOfConfig":"73"},{"size":10946,"mtime":1617503711689,"results":"111","hashOfConfig":"73"},{"size":5030,"mtime":1617358687884,"results":"112","hashOfConfig":"73"},{"size":1684,"mtime":1617530296111,"results":"113","hashOfConfig":"73"},{"size":1666,"mtime":1617314991449,"results":"114","hashOfConfig":"73"},{"size":9503,"mtime":1617358661944,"results":"115","hashOfConfig":"73"},{"size":1855,"mtime":1617340880102,"results":"116","hashOfConfig":"73"},{"size":3049,"mtime":1617352349885,"results":"117","hashOfConfig":"73"},{"size":545,"mtime":1617356024673,"results":"118","hashOfConfig":"73"},{"size":805,"mtime":1617286343734,"results":"119","hashOfConfig":"73"},{"size":7660,"mtime":1617530441360,"results":"120","hashOfConfig":"73"},{"size":1933,"mtime":1617449844545,"results":"121","hashOfConfig":"73"},{"size":5117,"mtime":1617342336424,"results":"122","hashOfConfig":"73"},{"size":2548,"mtime":1617346955402,"results":"123","hashOfConfig":"73"},{"size":2903,"mtime":1617530239105,"results":"124","hashOfConfig":"73"},{"size":1542,"mtime":1617340830975,"results":"125","hashOfConfig":"73"},{"size":1586,"mtime":1617314991403,"results":"126","hashOfConfig":"73"},{"size":9922,"mtime":1617315203995,"results":"127","hashOfConfig":"73"},{"size":5473,"mtime":1617453299869,"results":"128","hashOfConfig":"73"},{"size":2702,"mtime":1617315099790,"results":"129","hashOfConfig":"73"},{"size":1103,"mtime":1617315180257,"results":"130","hashOfConfig":"73"},{"size":3656,"mtime":1617315158469,"results":"131","hashOfConfig":"73"},{"size":4408,"mtime":1617315268729,"results":"132","hashOfConfig":"73"},{"size":1662,"mtime":1615113541515,"results":"133","hashOfConfig":"134"},{"size":6550,"mtime":1617529914397,"results":"135","hashOfConfig":"73"},{"size":3022,"mtime":1617315210227,"results":"136","hashOfConfig":"73"},{"size":3874,"mtime":1617315218526,"results":"137","hashOfConfig":"73"},{"size":2366,"mtime":1617337723384,"results":"138","hashOfConfig":"73"},{"size":9230,"mtime":1617529414324,"results":"139","hashOfConfig":"73"},{"size":7975,"mtime":1617504915345,"results":"140","hashOfConfig":"73"},{"size":6596,"mtime":1617337907113,"results":"141","hashOfConfig":"73"},{"size":1277,"mtime":1617504510226,"results":"142","hashOfConfig":"73"},{"size":7894,"mtime":1617448220605,"results":"143","hashOfConfig":"73"},{"size":1324,"mtime":1617439410648,"results":"144","hashOfConfig":"73"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},"1qstem9",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"151"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"151"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"148"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"148"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"148"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"148"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"148"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"148"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"148"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"148"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"148"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"148"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"151"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"148"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"148"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"148"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"148"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"148"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"148"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"148"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"148"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"148"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"148"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"148"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"148"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"148"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"148"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"148"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"151"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"148"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"148"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"148"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"148"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"148"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"148"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"148"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"148"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"148"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"148"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"148"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"148"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"148"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"148"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"148"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"148"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"148"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"148"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"148"},{"filePath":"319","messages":"320","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rouxe1",{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"148"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"148"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"148"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"148"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"151"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"151"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"151"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"148"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"148"},"/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/applications/header.js",["350","351"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Link from '@material-ui/core/Link';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport axios from 'axios'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { useHistory } from 'react-router-dom';\nimport { selectCurrentCustomer, selectCustomerHeaders, customerRemove, } from '../../slices/customer';\nimport { selectCurrentTrainer, selectTrainerHeaders, trainerRemove, } from '../../slices/trainer';\nimport { selectCurrentAdmin, selectAdminHeaders, adminRemove, } from '../../slices/admin';\nimport { selectCurrentMasterAdmin, selectMasterAdminHeaders, masterAdminRemove, } from '../../slices/master_admin';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport FaceIcon from '@material-ui/icons/Face';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    // position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    // height: 140, \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const currentCustomer = useSelector(selectCurrentCustomer);\n  const customer_headers = useSelector(selectCustomerHeaders);\n\n  const currentAdmin = useSelector(selectCurrentAdmin);\n  const admin_headers = useSelector(selectAdminHeaders);\n\n  const currentTrainer = useSelector(selectCurrentTrainer);\n  const trainer_headers = useSelector(selectTrainerHeaders);\n\n  const currentMasterAdmin = useSelector(selectCurrentMasterAdmin);\n  const master_admin_headers = useSelector(selectMasterAdminHeaders);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleCustomerSignOut = () => {\n    if (!customer_headers) return;\n    axios\n      .delete('/v1/customer_auth/sign_out', customer_headers)\n      .then(() => {\n        dispatch(customerRemove());\n        handleClose()\n        console.log(\"ログアウトしました\")\n        history.push('/');\n        window.location.reload()\n        setAnchorEl(null);\n      })\n      .catch((err) => {\n        dispatch(customerRemove());\n        console.log({err})\n      });\n  }\n  const handleAdminSignOut = () => {\n    if (!admin_headers) return;\n    axios\n      .delete('/v1/admin_auth/sign_out', admin_headers)\n      .then(() => {\n        dispatch(adminRemove());\n         handleClose()\n         history.push('/');\n         setAnchorEl(null);\n      })\n      .catch((err) => {\n        dispatch(adminRemove());\n      });\n  }\n  const handleTrainerSignOut = () => {\n    if (!trainer_headers) return;\n    console.log(\"実際にここからログアウトする\")\n    axios\n      .delete('/v1/trainer_auth/sign_out', trainer_headers)\n      .then((res) => {\n        console.log({res})\n        dispatch(trainerRemove());\n        handleClose()\n        history.push('/');\n        setAnchorEl(null);\n      })\n      .catch((err) => {\n        dispatch(trainerRemove());\n        console.log({err})\n      });\n  }\n  const handleMasterAdminSignOut = () => {\n    if (!master_admin_headers) return;\n    axios\n      .delete('/v1/master_admin_auth/sign_out', master_admin_headers)\n      .then(() => {\n        dispatch(masterAdminRemove());\n        handleClose()\n        history.push('/');\n        setAnchorEl(null);\n      })\n      .catch((err) => {\n        dispatch(masterAdminRemove());\n        console.log({err})\n      });\n  }\n\n  function MoveToMyPage(){\n    setAnchorEl(null);\n    history.push(`/customer/my_page/${currentCustomer.id}`)\n    window.location.reload()\n  }\n  function MoveToHome(){\n    setAnchorEl(null);\n    history.push(`/`)\n    window.location.reload()\n  }\n\n  function MoveToTrainerPage(){\n    setAnchorEl(null);\n    history.push(`/trainer/${currentTrainer.id}`)\n    window.location.reload()\n  }\n  function MoveToCheckTodaySchedule(){\n    setAnchorEl(null);\n    const today = new Date\n    var company_id = null\n    if(currentTrainer){\n      company_id = currentTrainer.company_id\n    }else if(currentAdmin){\n      company_id = currentAdmin.company_id\n    }\n    history.push(`/admin/company_id/${company_id}/year/${today.getFullYear()}/month/${today.getMonth() + 1}/day/${today.getDate()}`)\n    window.location.reload()\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{backgroundColor: '#4DA7F0'}}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link color=\"inherit\" href=\"/\">Room</Link>\n          </Typography>\n          {currentCustomer?.id ? (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle style={{fontSize: '1.3em'}}/>\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={MoveToHome}>ホームへ</MenuItem><hr/>\n                <MenuItem onClick={MoveToMyPage}>マイページ</MenuItem><hr/>\n                {/* <MenuItem onClick={handleClose}>プロフィールを編集する</MenuItem><hr/> */}\n                <MenuItem onClick={handleCustomerSignOut}>ログアウトする</MenuItem>\n              </Menu>\n            </div>\n            ) : currentTrainer?.id ? (\n              <>\n                <div>\n                  <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                  >\n                    <AssignmentIndIcon style={{fontSize: '1.3em'}}/>\n                  </IconButton>\n                  <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    open={open}\n                    onClose={handleClose}\n                  >\n                    <MenuItem onClick={MoveToHome}>ホームへ</MenuItem><hr/>\n                    <MenuItem onClick={MoveToCheckTodaySchedule}>本日の予約を確認する</MenuItem><hr/>\n                    <MenuItem onClick={MoveToTrainerPage}>マイページへ</MenuItem><hr/>\n                    <MenuItem onClick={handleTrainerSignOut}>ログアウトする</MenuItem>\n                    {/* <MenuItem onClick = {() => history.push(`/trainer/edit/me`)}>プロフィールの編集</MenuItem> */}\n                    \n                  </Menu>\n                </div>\n              </>\n            ): currentAdmin?.id ?(\n              <>\n                <div>\n                  <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                  >\n                    <span style={{fontSize: '0.7em'}}>管理者としてログイン中</span>\n                    <FaceIcon style={{fontSize: '1.3em'}}/>\n                  </IconButton>\n                  <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    open={open}\n                    onClose={handleClose}\n                  >\n                    <MenuItem onClick={MoveToHome}>ホームへ</MenuItem><hr/>\n                    <MenuItem onClick={MoveToCheckTodaySchedule}>本日の予約を確認する</MenuItem><hr/>\n                    <MenuItem onClick={handleAdminSignOut}>ログアウトする</MenuItem>\n                  </Menu>\n                </div>\n              </>\n            ): currentMasterAdmin?.id ? (\n              <>\n                <div>\n                  <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                  >\n                    <DashboardIcon style={{fontSize: '1.3em'}}/>\n                  </IconButton>\n                  <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    open={open}\n                    onClose={handleClose}\n                  >\n                    <MenuItem onClick={handleClose}>マイページへ</MenuItem><hr/>\n                    <MenuItem onClick={handleClose}>プロフィールを編集する</MenuItem><hr/>\n                    <MenuItem onClick={handleMasterAdminSignOut}>ログアウトする</MenuItem>\n                  </Menu>\n                </div>\n              </>\n            ):(\n              <>\n                <div>\n                  <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                  >\n                    <ExpandMoreIcon />\n                  </IconButton>\n                  <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    open={open}\n                    onClose={handleClose}\n                  >\n                    <MenuItem><Link color=\"inherit\" href=\"/admin/log_in\">管理者としてログイン</Link></MenuItem><hr/>\n                    <MenuItem><Link color=\"inherit\" href=\"/trainer/log_in\">トレーナーとしてログイン</Link></MenuItem><hr/>\n                    <MenuItem><Link color=\"inherit\" href=\"/master_admin/log_in\">マスタ管理者としてログイン</Link></MenuItem><hr/>\n                    <MenuItem><Link color=\"inherit\" href=\"/customer/log_in\">お客様としてログイン</Link></MenuItem><hr/>\n                    <MenuItem><Link color=\"inherit\" href=\"/customer/sign_up\">お客様新規登録</Link></MenuItem>\n                  </Menu>\n                </div>\n              </>\n            )}\n      \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header",[],"/Users/katoatsushi/Desktop/room-app/room-frontend/src/rootReducer.ts",[],[],"/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/create_admin_schedule.jsx",["352"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport {selectCurrentAdmin, selectAdminHeaders} from '../../slices/admin'\nimport { useSelector } from 'react-redux';\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport ja from \"date-fns/locale/ja\";\nimport ScheduleCheck from './admin_schedule_cehck'\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        width: 100,\n    },\n    resize:{\n        fontSize:50\n    },\n    dateField:{\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 300,  \n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n}));\n\n\nfunction TrialSession({setTrialValue}){\n    function handleName(e){\n        setTrialValue((prev) => ({...prev, name: e.target.value}))\n    }\n    function handleEmail(e){\n        setTrialValue((prev) => ({...prev, email: e.target.value}))\n    }\n    function handleTel(e){\n        setTrialValue((prev) => ({...prev, tel: e.target.value}))\n    }\n    function handleAddress(e){\n        setTrialValue((prev) => ({...prev, address: e.target.value}))\n    }\n    function handleDetails(e){\n        setTrialValue((prev) => ({...prev, details: e.target.value}))\n    }\n    return(\n        <>\n        <FormLabel component=\"legend\" style={{marginTop: 20}}>以下の項目を入力してください</FormLabel>\n        <Paper className=\"paper_box\">\n            <FormLabel component=\"legend\" style={{marginBottom: 5, paddingTop: 5}}>・お名前</FormLabel>\n            <TextField id=\"outlined-basic\"  onChange={handleName} style={{width: '100%'}} label=\"お名前を入力してください\" variant=\"outlined\" />\n            <FormLabel component=\"legend\" style={{marginBottom: 5, paddingTop: 5}}>・メールアドレス</FormLabel>\n            <TextField id=\"outlined-basic\" onChange={handleEmail} style={{width: '100%'}} label=\"メールアドレスを入力してください\" variant=\"outlined\" />\n            <FormLabel component=\"legend\" style={{marginBottom: 5, paddingTop: 5}}>・電話番号</FormLabel>\n            <TextField id=\"outlined-basic\" onChange={handleTel} style={{width: '100%'}} label=\"電話番号を入力してください\" variant=\"outlined\" />\n            <FormLabel component=\"legend\" style={{marginBottom: 5, paddingTop: 5}}>・住所</FormLabel>\n            <TextField id=\"outlined-basic\" onChange={handleAddress} style={{width: '100%'}} label=\"住所を入力してください\" variant=\"outlined\" />\n            <FormLabel component=\"legend\" style={{marginBottom: 5, paddingTop: 5}}>・お問い合わせ</FormLabel>\n            <TextField\n                id=\"outlined-multiline-static\"\n                label=\"お問い合わせ内容を入力してください\"\n                multiline\n                onChange={handleDetails}\n                rows={4}\n                style={{width: '100%'}}\n                variant=\"outlined\"\n            />\n        </Paper>\n        </>\n    )\n}\n\nexport default function CreateAdminSchedule(){\n    const history = useHistory();\n    const classes = useStyles();\n    const adminHeaders = useSelector(selectAdminHeaders);\n    const currentAdmin = useSelector(selectCurrentAdmin);\n    const today = new Date()\n    const [selectedDate, setSelectedDate] = React.useState(today);\n    const company_id = currentAdmin.company_id\n    const [dayInfo, setDayInfo] = useState({year: selectedDate.getFullYear(), month: selectedDate.getMonth() + 1, day: selectedDate.getDate()});\n    const [ok, setOk] = useState(false);\n    const [stores, setStores] = useState([]);\n    const [selectStore, setSelectStore] = useState();\n    const [timeStart, setTimeStart] = useState({hour: 7, min: 30})\n    const [timeFin, setTimeFin] = useState({hour: 7, min: 30})\n    const [check, setCheck] = React.useState('false');\n    const [trialValue, setTrialValue] = useState({name: \"\", address: \"\", tel: \"\", email: \"\", details: \"\"});\n    // console.log({trialValue})\n    function handleStartChange(e){\n        const hour_min = e.target.value.split(':') \n        setTimeStart({hour: Number(hour_min[0]), min: Number(hour_min[1])})\n    }\n    function handleFinChange(e){\n        const hour_min = e.target.value.split(':') \n        setTimeFin({hour: Number(hour_min[0]), min: Number(hour_min[1])})\n    }\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n        setDayInfo({year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()})\n    };\n    const handleCheckChange = (event) => {\n        setCheck(event.target.value);\n    };\n    function handleAdminScheduleSubmit() {\n        console.log({dayInfo})\n        console.log({timeStart})\n        console.log({selectStore})\n        const submit_url  = `/black_schedules`\n        axios.post( submit_url, {\n            dayInfo: dayInfo,\n            timeStart: timeStart,\n            timeFin: timeFin,\n            store_id: selectStore.value.store_id,\n            customer_service: check,\n            trial_session: trialValue\n        }, adminHeaders)\n        .then(function (response) {\n            console.log(response)\n            history.push(`/`)\n        })\n    }\n    useEffect(()=>{\n        const check_scedule_url = `/admin/company_id/${currentAdmin.company_id}/year/${today.getFullYear()}/month/${today.getMonth() + 1}/day/${today.getDate()}`\n        axios.get(check_scedule_url, adminHeaders)\n        .then(function(res) {\n            console.log({res}, \"確認だよん\")\n            setStores(res.data.today_schedules);\n        })\n        .catch(function(error) {\n          console.log({error})\n        });\n      },[selectedDate])\n\n    const stores_box = stores.length ?  \n    stores.map((store,index) =>\n        <MenuItem  value={store} key={index}>{ store.store_name }</MenuItem>\n    ): \n        <MenuItem />\n\n    function handleStoreChange(e){\n        setSelectStore(e.target.value)\n        setOk(true)\n    }\n\n    return(\n        <>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={4}>\n            <Grid container>\n                <Grid item sm={2}/>\n                <Grid item sm={9}>\n                <form className={classes.container} noValidate>\n                    <h5 style={{fontSize: 20}}>管理者のスケジュールを追加する</h5>\n                    <FormLabel component=\"legend\" style={{marginBottom: 10, paddingTop: 15}}>店舗を選択してください</FormLabel>\n                    <FormControl variant=\"outlined\" style={{ width: '70%', paddingBottom: 5}} className=\"select_style\">\n                    <InputLabel id=\"demo-store-select-outlined-label\" >店舗を選択</InputLabel>\n                        <Select\n                        labelId=\"demo-store-select-outlined-label\"\n                        id=\"demo-store-select-outlined\"\n                        label=\"store\"\n                        onChange={ handleStoreChange }\n                        style={{ backgroundColor: 'white'}}\n                        >\n                        { stores_box }\n                        </Select>\n                    </FormControl>\n                    <FormLabel component=\"legend\" style={{marginTop: 15}}>日時を選択してください</FormLabel>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ja}>\n                        <Grid container>\n                            <KeyboardDatePicker\n                                disableToolbar\n                                variant=\"inline\"\n                                format=\"yyyy/MM/dd\"\n                                margin=\"normal\"\n                                id=\"date-picker-inline\"\n                                label=\"日にちを選択してください\"\n                                value={selectedDate}\n                                onChange={handleDateChange}\n                                style={{backgroundColor: 'white', padding: 10}}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Grid>\n                    </MuiPickersUtilsProvider>\n                    <Grid container justifyContent=\"space-around\">\n                        <TextField\n                            id=\"time\"\n                            label=\"開始時刻\"\n                            autoFocus={true}\n                            type=\"time\"\n                            defaultValue=\"07:30\"\n                            className={classes.textField}\n                            style={{backgroundColor: 'white', padding: 10, marginRight: 20}}\n                            onChange={handleStartChange}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            inputProps={{\n                                step: 300, // 5 min\n                            }}\n                        />\n                        <TextField\n                            style={{backgroundColor: 'white', padding: 10}}\n                            id=\"time\"\n                            autoFocus={true}\n                            label=\"終了時刻\"\n                            type=\"time\"\n                            defaultValue=\"07:30\"\n                            onChange={handleFinChange}\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            inputProps={{\n                                step: 300, // 5 min\n                            }}\n                        />\n                    </Grid>\n                </form>\n                <Grid container justifyContent=\"space-around\" style={{marginTop: 15}}>\n                    <FormLabel component=\"legend\" style={{marginBottom: 10}}>スケジュールを選択してください</FormLabel>\n                    <FormControl component=\"fieldset\" style={{backgroundColor: 'white', padding: 10}}>\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={check} onChange={handleCheckChange}>\n                            <FormLabel component=\"legend\">体験トレーニングの予約ですか？</FormLabel>\n                            <FormControlLabel value=\"true\" control={<Radio />} label=\"はい\" />\n                            <FormControlLabel value=\"false\" control={<Radio />} label=\"いいえ\" />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                {check=='true'? (\n                    <>\n                    {/* 体験セッションの際の入力項目 */}\n                    <TrialSession setTrialValue={setTrialValue} />\n                    </>\n                    ) : (<></>)\n                }\n\n                <div style={{marginTop: 30}}>\n                {ok ? (\n                    <Button variant=\"contained\" color=\"secondary\" onClick={handleAdminScheduleSubmit}>\n                        スケジュールを登録する\n                    </Button>\n                ) : (\n                    <Button variant=\"contained\" disabled>\n                        スケジュールを登録する\n                    </Button>\n                )}\n                </div>\n                </Grid>\n            </Grid>\n            </Grid>{/* <Grid item xs={12} sm={4}> */}\n            <Grid item xs={12} sm={7}>\n                <Paper style={{textAlign: 'center', padding: 20, backgroundColor: '#DDDDDD'}}>\n                    {selectedDate.getFullYear()}/{selectedDate.getMonth() + 1}/{selectedDate.getDate()}のスケジュールを確認してください\n                </Paper>\n                <ScheduleCheck company_id={company_id} day={dayInfo} scroll={true}/>\n            </Grid>\n            <Grid item xs={12} sm={1} />\n        </Grid>\n        </>\n    );\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/interfaces.ts",[],[],"/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/room_plus.jsx",["353","354"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport axios from 'axios'\n\nfunction ShowAllSchedules(props){\n    const showVacancy = props.vacancy ?  \n    props.vacancy.map((obj) =>\n    <>\n        【{obj.store.store_name}】<br/>\n        { obj.schedule.map((sch) => \n        <>\n        {\n            (() => {\n                if (sch.vacancy_count==0) {\n                    return(<></>);\n                } else {\n                    return (\n                        <>{sch.times[0][0]}:{sch.times[0][1]}〜{sch.times[1][0]}:{sch.times[1][1]}<br/></>\n                    );\n                }\n            })()\n        }\n\n        </>) }\n    </>\n    ): <>現在予約可能なスケジュールありません</>   \n    return (\n        <div>\n            {showVacancy}\n        </div>\n    )\n}\n\nfunction SelectStore(props){\n    const stores_box = props.allStores.length ?  \n        props.allStores.map((store,store_index) =>\n            <MenuItem  value={store} key={store_index}>{ store.store_name }</MenuItem>\n        ): \n            <MenuItem />\n    function handlehange(e) {\n        const res = props.vacancy.filter((vac) => {\n            return vac.store.id === e.target.value.id;\n        });\n        props.setSelectVacancy((prev)=> (prev, res[0]))\n        props.setSelectStore((prev)=> (prev, e.target.value))\n        props.setSelectTime((prev)=> (prev, []))\n        props.setTimesOpen((prev)=> (prev, true))\n    }\n    return (\n        <div style={{textAlign: 'center'}}>\n            <FormControl variant=\"outlined\" style={{ width: '90%'}} className=\"select_style\">\n              <InputLabel id=\"demo-store-select-outlined-label\" >店舗を選んでください</InputLabel>\n                <Select\n                  labelId=\"demo-store-select-outlined-label\"\n                  id=\"demo-store-select-outlined\"\n                  label=\"store\"\n                  onChange={ handlehange }\n                  style={{ backgroundColor: 'white'}}\n                >\n                  { stores_box }\n                </Select>\n            </FormControl> <br/><br/>\n        </div>\n    )\n}\n\nfunction ShowSchedule(props){\n    function handleChenge(e){\n        props.setSelectTime((prev) => (prev, e));\n    }\n    const radio_buttons = props.selectVacancy.schedule ?  \n    props.selectVacancy.schedule.map((time) =>\n    <>\n        {\n            (() => {\n                if (time.vacancy_count==0) {\n                    return(\n                    <FormControlLabel \n                        control={<Radio />} \n                        disabled\n                        label= {time.times[0][0] + \"時\"+ time.times[0][1] + \"分\" + \" 〜 \" + time.times[1][0] + \"時\" + time.times[1][1] + \"分\"} \n                    />\n                    );\n                } else {\n                    return (\n                        <FormControlLabel \n                            value={ time.times[0][0] + \"時\"+ time.times[0][1] + \"分\" + \" 〜 \" + time.times[1][0] + \"時\" + time.times[1][1] + \"分\"}\n                            onClick={() => handleChenge(time.times)}\n                            control={<Radio />} \n                            label= {time.times[0][0] + \"時\"+ time.times[0][1] + \"分\" + \" 〜 \" + time.times[1][0] + \"時\" + time.times[1][1] + \"分\"} \n                        />\n                    );\n                }\n            })()\n        }\n\n    </>\n    ): <></>\n\n    function handleClose(){\n        props.setOpen((prev)=>(prev, false))\n    }\n    function handleSubmit() {\n        const url = `/evaluations`\n        axios.post( url, {\n            time: props.selectTime,\n          })\n          .then(function (response) {\n              console.log(response)\n          })\n          .catch(function (response) {\n            console.log(response.data);\n          })\n    }\n\n    return(\n        <>\n        {props.timesOpen?(\n        <div style={{textAlign: 'center'}}>\n            <FormLabel component=\"legend\">日時を選択してください</FormLabel>\n            <div className=\"chose_time\">\n                <FormControl component=\"fieldset\">\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\"> \n                        { radio_buttons }\n                    </RadioGroup>\n                </FormControl>\n            </div>\n            <Button variant=\"contained\" size='large' onClick={handleClose} color=\"primary\" href=\"/\">キャンセル</Button>\n            <Button variant=\"contained\" size='large' onClick={handleSubmit} color=\"secondary\" >予約する</Button>\n        </div>\n        ):(\n            <></>\n        )\n        }\n        </>\n\n    );\n}\n\nexport default function RoomPlusBox(){\n    const today = new Date\n    const [vacancy, setVacancy] = useState([]);\n    const [allStores, setAllStores] = useState([]);\n    const [selectStore, setSelectStore] = useState({});\n    const [selectVacancy, setSelectVacancy] = useState({});\n    const [selectTime, setSelectTime] = useState([]);\n    const [open ,setOpen] = useState(false);\n    const [timesOpen ,setTimesOpen] = useState(false);\n    const company_id = 1\n    const customer_menu_id = 1\n    const url = `/appointments/vacancy/${company_id}/${customer_menu_id}/${today.getFullYear()}/${today.getMonth() + 1}/${today.getDate()}`\n    useEffect(()=>{\n        axios.get(url)\n        .then(function(res) {\n            setVacancy(res.data.data);\n            setAllStores(res.data.stores);\n            console.log(res.data.data)\n        })\n        .catch(function(error) {\n            console.log({error})\n        });\n    },[])   \n    function handleOpen(){\n        setOpen(true);\n    }\n\n    console.log({selectTime})\n    return(\n        <>\n        {open?(\n            <>\n            <SelectStore setTimesOpen={setTimesOpen} vacancy={vacancy} allStores={allStores} setSelectTime={setSelectTime} setSelectStore={setSelectStore} setSelectVacancy={setSelectVacancy}/>\n            <ShowSchedule timesOpen={timesOpen} setOpen={setOpen} selectTime={selectTime} setSelectTime={setSelectTime} setSelectVacancy={setSelectVacancy} selectVacancy={selectVacancy}/>\n            </>\n        ):(\n            <>        \n            {vacancy? (<>\n                <div style={{fontSize: 20, textAlign: 'center'}}>本日の空き状況です</div>\n                <div style={{overflow: 'scroll', height: 120, backgroundColor: 'white', padding: 20}}>\n                    <ShowAllSchedules vacancy={vacancy}/>\n                </div>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleOpen} style={{marginLeft: '0 0 0 auto',  float: 'right'}}>\n                    Roomプラスを予約する\n                </Button>\n            </>):(<>\n                <div style={{fontSize: 20, textAlign: 'center'}}>本日の空きはありませんです</div>\n                <Button variant=\"contained\" color=\"primary\" disabled onClick={handleOpen} style={{marginLeft: '0 0 0 auto',  float: 'right'}}>\n                    Roomプラスを予約する\n                </Button>\n            </>)}\n            </>\n            )\n        }\n        </>\n    )\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/login.tsx",["355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373"],"/* eslint-disable react/prop-types */\nimport React , { useEffect, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { Controller, useForm, SubmitHandler } from 'react-hook-form';\nimport axios, { AxiosError } from 'axios';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { BrowserRouter as Router, Route, Switch, useParams, useHistory, useLocation, } from 'react-router-dom';\nimport clsx from 'clsx';\nimport {\n  ISignInFormValues,\n  ISignInSuccessAdminResponse,\n  IErrorResponse,\n  IServerMessages,\n} from '../../interfaces';\nimport { setHeaders, setCurrentAdmin } from '../../slices/admin';\nimport Paper from '@material-ui/core/Paper';\nimport errorMessages from '../../constants/errorMessages.json';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: '#4DA7F0',\n    '&:hover': {\n      backgroundColor: '#4DA7F0',\n    },\n  },\n  buttonProgress: {\n    color: '#4DA7F0',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function AdminLogIn() {\n    const url = `/v1/admin_auth/sign_in`\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { control, errors, handleSubmit } = useForm<ISignInFormValues>();\n    const [serverMessages, setServerMessages] = useState<IServerMessages>();\n    const [snackOpen, setSnackOpen] = React.useState(false);\n    const [errorMessage, setErrorMessage] = React.useState();\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n\n    const handleSnackbarClick = () => {\n      setSnackOpen(true);\n    };\n    const handleSnackbarClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n      setSnackOpen(false);\n    };\n    const onSubmit = (data: SubmitHandler<ISignInFormValues>) => {\n      console.log({data})\n      if (!loading) {\n        setSuccess(false);\n        setLoading(true);\n      }\n      axios\n      .post<ISignInSuccessAdminResponse>(url, data)\n      .then((res) => {\n        setSuccess(true);\n        setLoading(false);\n        console.log(\"admin\",{res})\n        dispatch(setCurrentAdmin(res.data.data));\n        dispatch(setHeaders(res.headers));\n        history.push('/');\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log({err})\n      });\n  };\n\n  return (\n    <>\n    <Box my={5}>\n      <Container maxWidth=\"xs\">\n        <Paper>\n        <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n          <Box p={2}>\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>\n              管理者ログイン\n            </Typography>\n            {/* <ServerAlert serverMessages={serverMessages} /> */}\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n              <Box mb={2}>\n                <Controller\n                  name=\"email\"\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: {\n                      value: true,\n                      message:\n                        errorMessages.email.text + errorMessages.required,\n                    },\n                    maxLength: {\n                      value: errorMessages.email.maxLength,\n                      message:\n                        errorMessages.email.text +\n                        errorMessages.is +\n                        String(errorMessages.email.maxLength) +\n                        errorMessages.maxLength,\n                    },\n                  }}\n                  render={({ ref, value, onChange }, { invalid }) => (\n                    <TextField\n                      variant=\"outlined\"\n                      label=\"メールアドレス\"\n                      error={invalid}\n                      // disabled={loading}\n                      fullWidth\n                      inputRef={ref}\n                      value={value as string}\n                      onChange={(e) => onChange(e.target.value)}\n                    />\n                  )}\n                />\n              </Box>\n              <Box mb={2}>\n                <Controller\n                  name=\"password\"\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: {\n                      value: true,\n                      message:\n                        errorMessages.password.text + errorMessages.required,\n                    },\n                    maxLength: {\n                      value: errorMessages.password.maxLength,\n                      message:\n                        errorMessages.password.text +\n                        errorMessages.is +\n                        String(errorMessages.password.maxLength) +\n                        errorMessages.maxLength,\n                    },\n                  }}\n                  render={({ ref, value, onChange }, { invalid }) => (\n                    <TextField\n                      type=\"password\"\n                      variant=\"outlined\"\n                      label=\"パスワード\"\n                      error={invalid}\n                      // disabled={loading}\n                      fullWidth\n                      inputRef={ref}\n                      value={value as string}\n                      onChange={(e) => onChange(e.target.value)}\n                    />\n                  )}\n                />\n              </Box>\n              <div className={classes.wrapper}>\n              <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  className={buttonClassname}\n                  disabled={loading || success}\n              >\n                ログインする\n              </Button>\n              {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n              </div>\n            </form>\n          </Box>\n        </div>\n        </Paper>\n      </Container>\n      {/* 追加 */}\n      <Snackbar  anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={snackOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\n        <Alert severity=\"error\" onClose={handleSnackbarClose}>{errorMessage}</Alert>\n      </Snackbar>\n      {/* 追加 */}\n    </Box>\n    </>\n  );\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/Routes.tsx",["374","375","376"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport './index.css';\nimport Root from './components/root';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SelectStoreFitness from './components/appointments/select_store_fitness_func';\nimport AppointmentNew from './components/appointments/appointment_new_func';\nimport SignUp from './components/customers/sign_up';\nimport LogIn from './components/customers/login';\nimport MasterAdminLogIn from './components/master_admins/login';\nimport TrainerLogIn from  './components/trainers/login';\nimport AdminTop from './components/admins/admin_top';\nimport AdminLogIn from  './components/admins/login';\nimport CreateTrainer from './components/admins/create_trainer';\nimport MasterAdminTop from './components/master_admins/master_admin_top';\nimport CreateAdmin from './components/master_admins/create_admin';\nimport CreateCompany from './components/master_admins/create_companies';\nimport CustomerHome from './components/customers/home';\nimport CustomerMyPage from './components/customers/my_page'\nimport AppointmentRecordNew from './components/appointment_records/new';\nimport AppointmentRecordMenusCreate from './components/appointment_records/create_menues';\nimport SelectDate from './components/appointments/select_date';\nimport AppointmentConfirm from './components/appointments/appointent_confirm';\nimport Confirmation from './components/customers/confirmation';\nimport CreateCustomerInfo from './components/customers/customer_info/create_customer_info';\nimport CustomerJobs from './components/customers/customer_individual_info/customer_jobs';\nimport CustomerInterests from './components/customers/customer_individual_info/customer_interests'\nimport CustomerConditions from './components/customers/customer_individual_info/customer_condition'\nimport CreateCustomerIndividualInfo from  './components/customers/customer_individual_info/customer_individual_info'\nimport { selectCurrentCustomer, selectCustomerHeaders, customerRemove, } from './slices/customer';\nimport WeightNew from './components/customers/weight_new';\nimport RecordsHistory from './components/customers/records_history'\nimport AllCustomers from './components/admins/customer_all'\nimport AdminMenues from './components/admins/admin_menues'\nimport CreateAdminSchedule from './components/admins/create_admin_schedule'\nimport ManageTrainerShift from './components/admins/shifts/trainer_shifts'\nimport EvaluationData from './components/customers/customer_evaluation_data';\nimport TrainerMyPage from './components/trainers/my_page'\nimport SessionRecordList from './components/trainers/customers_session_records'\nimport TrainerCreateRecord from './components/trainers/record/create_record'\nimport SetTimesWeight from './components/trainers/record/set_times_weight'\nimport RecordConfirm from './components/trainers/record/record_confirm'\nimport ShowRecord from './components/trainers/record/record_show'\nimport EditMyProfile from './components/trainers/edit_profile/edit_my_profile'\n\nconst Routes: React.FC = () => {\n  const currentCustomer = useSelector(selectCurrentCustomer);\n  return (\n    <BrowserRouter>\n    <Switch>\n        {currentCustomer?.id ? (\n            <Route exact path=\"/\" component={ Root } />\n        ) : (\n            <Route exact path=\"/\" component={ Root } />\n        )}\n        {/* <Route exact path=\"/\" component={ Root } /> */}\n        <Route exact path=\"/customer_info/new\" component={ CreateCustomerInfo } />\n        <Route exact path=\"/customer_info/jobs\" component={ CustomerJobs } />\n        <Route exact path=\"/customer_info/interests\" component={ CustomerInterests } />\n        <Route exact path=\"/customer_info/conditions\" component={ CustomerConditions } />\n        <Route exact path=\"/customer_info_indivi/new\" component={ CreateCustomerIndividualInfo } />\n        <Route exact path=\"/customer/:customer_id/calendar_new\" component={ SelectStoreFitness } />\n        <Route exact path=\"/customer/:customer_id/calendar_new/customer_menu/:customer_menu_id/store/:store_id\" component={ SelectDate } />\n        <Route exact path=\"/customer/:customer_id/appointments/new/:store_id/:customer_menu_id/:year/:month/:day\" component={AppointmentNew} />\n        <Route exact path=\"/customer/:customer_id/appointments/confirm/:store_id/:customer_menu_id/:year/:month/:day\" component={AppointmentConfirm} />\n        <Route exact path=\"/admin/company_id/:company_id/year/:year/month/:month/day/:day\" component={ AdminTop } />\n        <Route exact path=\"/customer/sign_up\" component={ SignUp } />\n        <Route exact path=\"/v1/customer_auth/:token\" component={ Confirmation } />\n        <Route exact path=\"/customer/log_in\" component={ LogIn } />\n        <Route exact path=\"/master_admin/log_in\" component={ MasterAdminLogIn } />\n        <Route exact path=\"/trainer/log_in\" component={ TrainerLogIn } />\n        <Route exact path=\"/admin/log_in\" component={ AdminLogIn } />\n        <Route exact path=\"/master_admin\" component={ MasterAdminTop } />            \n        <Route exact path=\"/:company_id/admin/sign_up\" component={ CreateAdmin } />  \n        <Route exact path=\"/trainer/sign_up\" component={ CreateTrainer } /> \n        <Route exact path=\"/company/new\" component={ CreateCompany } /> \n        <Route exact path=\"/customer/:id\" component={ CustomerHome } />\n        <Route exact path=\"/customer/my_page/:id\" component={ CustomerMyPage } />\n        <Route exact path=\"/customer/weight/new\" component={ WeightNew } />\n        <Route exact path=\"/customer/:customer_id/appointment/:appointment_id/new_record\" component={ AppointmentRecordNew } />\n        <Route exact path=\"/customer_record/:customer_record_id/new\" component={ AppointmentRecordMenusCreate  } />\n        <Route exact path=\"/customer_records/:id\" component={ RecordsHistory } />\n        <Route exact path=\"/customer_all\" component={ AllCustomers } />\n        <Route exact path=\"/admin_menues\" component={ AdminMenues } />\n        <Route exact path=\"/admin_schedule\" component={ CreateAdminSchedule } />\n        <Route exact path=\"/admin/trainer_shifts\" component={ ManageTrainerShift } />\n        <Route exact path=\"/customer_evaluation_data/:customer_id\" component={ EvaluationData } />\n        <Route exact path=\"/trainer/:id\" component={ TrainerMyPage } />\n        <Route exact path=\"/trainers/customer_session_records\" component={ SessionRecordList } />\n        <Route exact path=\"/trainers/:trainer_id/fitness/:fitness_id\" component={ TrainerCreateRecord } />\n        <Route exact path=\"/trainers/set/details\" component={ SetTimesWeight} />\n        <Route exact path=\"/trainers/record/confirm\" component={  RecordConfirm } />\n        <Route exact path=\"/record/:id\" component={ ShowRecord } />\n        <Route exact path=\"/trainer/edit/me\" component={ EditMyProfile } />\n  \n    </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/shifts/trainer_shifts.jsx",["377","378","379","380"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport {  makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport { selectCurrentAdmin } from '../../../slices/admin';\nimport { useSelector } from 'react-redux';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CreateTableCellEdit from './create_shifts'\nimport ShiftTableCellEdit from './update_shifts.jsx'\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    minWidth: 650\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    // width: 200,\n    marginLeft: 10,\n    marginRight: 10\n  },\n}));\n\nfunction ShiftTableCellShow({data}){\n    const classes = useStyles();\n\n    function setDate(obj){\n        const date = new Date(`${obj}`)\n        var min = null\n        var hour = null\n        date.getMinutes()==0?  min = \"00\": min = String(date.getMinutes())\n        min.length == 1? min = \"0\" + min: min\n        String(date.getHours()).length == 1? hour = \"0\" + String(date.getHours()): hour = String(date.getHours())\n        const newDate = `${hour}:` + `${min}`\n        return newDate\n    }\n\n    return(<>\n        <TableCell className=\"cell_box\" style={{backgroundColor: '#CCFFFF', marginTop: 'auto', marginBottom: 'auto', paddingRight: 5, paddingLeft: 5}}>\n            {data.shifts?(<>\n                {data.shifts.store?(<>\n                    <span style={{color: 'grey', fontSize: 8}}>{data.shifts.store.store_name}店</span>\n                </>):(<>\n                    <span style={{color: 'red', fontSize: 8}}>店舗未選択</span>\n                </>)}\n            </>):(<></>)}\n            <InputBase\n                id=\"time\"\n                type=\"time\"\n                disabled\n                value={setDate(data.shifts.start)}\n                className={classes.textField}\n                InputLabelProps={{ shrink: true, }}\n                inputProps={{ step: 300, }}\n                style={{display: 'inline-block'}}\n            /><hr/>\n            <InputBase\n                id=\"time\"\n                type=\"time\"\n                disabled\n                value={setDate(data.shifts.finish)}\n                className={classes.textField}\n                InputLabelProps={{ shrink: true, }}\n                inputProps={{ step: 300, }}\n                style={{display: 'inline-block'}}\n            />\n        </TableCell>\n    </>)\n}\n\nexport default function ManageTrainerShift(){\n    const classes = useStyles();\n    const currentAdmin = useSelector(selectCurrentAdmin);\n    const url = `/get_trainer_shifts`\n    const [trainerShifts, setTrainerShifts] = useState([]);\n    const [submitData, setSubmitData] = useState([]);\n    const [deleteData, setDeleteData] = useState([]);\n    const [stores, setStores] = useState([]);\n    const [days, setDays] = useState([]);\n    // eslint-disable-next-line no-unused-vars\n    const [checked, setChecked] = React.useState(false);\n    const [submitOpen, setSubmitOpen] = React.useState(false);\n    const [shiftEdit, setShiftEdit] = React.useState(false);\n    const [edit, setEdit] = React.useState(false);\n    const today = new Date()\n    const next_month = today.getMonth() + 2\n    const year = today.getFullYear();\n    const history = useHistory();\n\n    // eslint-disable-next-line no-unused-vars\n    const handleChange = (event) => {\n        setChecked(event.target.checked);\n    };\n    function handleSubmitButtonChange(){\n        setEdit(true);\n    }\n    function handleSubmitButtonClose(){\n        setEdit(false);\n    }\n\n    useEffect(()=>{\n        axios.get(url, {\n        params: {\n            year: year,\n            month: next_month,\n            company_id: currentAdmin.company_id\n        }})\n        .then(function (response) {\n            // console.log({response})\n            setTrainerShifts(response.data.data)\n            setDays(response.data.date_infos)\n            setSubmitData(response.data.submit_data)\n            setStores(response.data.stores)\n        })\n        .catch(function (response) {\n            console.log(\"error\", {response})\n        })\n    },[])\n\n    function submitDialogOpen(){\n        setSubmitOpen(true)\n    }\n    function handleClose(){\n        setSubmitOpen(false)\n    }\n    function handleSubmit(){\n        const submit_url = `/update_trainer_shift`\n        console.log({submitData})\n        axios.put(submit_url, {\n            data: submitData,\n            delete: deleteData\n        })\n        .then(function (response) {\n            console.log({response})\n            axios.get(url, {\n            params: {\n                year: year,\n                month: next_month,\n                company_id: currentAdmin.company_id\n            }})\n            .then(function (response) {\n                setTrainerShifts(response.data.data)\n                setDays(response.data.date_infos)\n                setSubmitData(response.data.submit_data)\n                setStores(response.data.stores)\n                // ダイアログ、ボタンを元に戻す\n                setEdit(false)\n                setShiftEdit(false)\n            })\n            .catch(function (response) {\n                console.log(\"error\", {response})\n            })\n        })\n        .catch(function (response) {\n            console.log(\"error\", {response})\n        })\n        // ダイアログを閉じる\n        setSubmitOpen(false)\n    }\n\n    return(\n        <>\n        <TableContainer component={Paper}>\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n                    <TableRow>\n                        <TableCell style={{textAlign: 'center'}}>\n                            {next_month}<br/>\n                            月\n                        </TableCell>\n                        {days.map((row, index) => (\n                            <TableCell key={index} style={{textAlign: 'center'}} component=\"th\" scope=\"row\" className=\"cell_box\">\n                                {row[0]}\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                    <TableRow>\n                        <TableCell/>\n                        {days.map((row, index) => (\n                            <TableCell key={index} style={{textAlign: 'center'}} component=\"th\" scope=\"row\" className=\"cell_box\">\n                                {row[1]}\n                            </TableCell>\n                        ))}\n                    </TableRow>\n            </TableHead>\n            <TableBody>\n            {trainerShifts?(<>\n            {trainerShifts.map((row) => (\n                <TableRow key={row.name}>\n                    <TableCell className=\"width_auto\">\n                        {row.trainer.first_name_kanji} {row.trainer.last_name_kanji}\n                    </TableCell>\n                    \n                    {row.data.map((r) => (\n                        <>\n                            {/* {r.shifts.length?( */}\n                            {r.shifts?(\n                                <>\n                                {edit? (<>\n                                    {/* 編集用 */}\n                                    <ShiftTableCellEdit data={r} stores={stores} setSubmitData={setSubmitData} submitData={submitData} \n                                        setTrainerShifts={setTrainerShifts} trainerShifts={trainerShifts}\n                                        setShiftEdit={setShiftEdit} setDeleteData={setDeleteData}\n                                    />\n                                </>) : (<>\n                                    {/* 閲覧用 */}\n                                    <ShiftTableCellShow data={r} />\n                                </>)}\n                                </>\n                            ):(<>\n                            {edit? (\n                                <>\n                                    {/* 新規作成用 */}\n                                    <CreateTableCellEdit data={r} stores={stores}  submitData={submitData} \n                                        setShiftEdit={setShiftEdit}\n                                    />\n                                </>\n                            ):(\n                                <>\n                                <TableCell className=\"cell_box\" style={{marginTop: 'auto', marginBottom: 'auto', paddingRight: 5, paddingLeft: 5}}>\n                                <InputBase\n                                    id=\"time\"\n                                    type=\"time\"\n                                    disabled\n                                    className={classes.textField}\n                                    InputLabelProps={{shrink: true,}}\n                                    inputProps={{step: 300, }}\n                                    // style={{display: 'inline-block', display: 'inline', color: 'blue'}}\n                                    style={{display: 'inline-block',color: 'blue'}}\n                                /><hr/>\n                                <InputBase\n                                    id=\"time\"\n                                    type=\"time\"\n                                    disabled\n                                    className={classes.textField}\n                                    InputLabelProps={{shrink: true,}}\n                                    inputProps={{step: 300, }}\n                                    // style={{display: 'inline-block', display: 'inline', color: 'blue'}}\n                                    style={{display: 'inline-block',color: 'blue'}}\n                                />\n                                </TableCell>\n                                </>\n                            )}\n                            </>)}\n\n                        </>\n                    ))}\n                    \n                </TableRow>\n            ))}\n            </>):(<></>)}\n            </TableBody>\n        </Table>\n        </TableContainer>\n        {edit? (<>\n            {shiftEdit? (\n                <Button variant=\"contained\" size=\"large\" color=\"secondary\" onClick={submitDialogOpen}>\n                    編集を完了する\n                </Button>\n            ): (\n            <Button variant=\"contained\" size=\"large\" color=\"secondary\" onClick={handleSubmitButtonClose}>\n                編集を終了する\n            </Button>\n            )}\n        </>):(\n            <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={handleSubmitButtonChange}>\n                編集する\n            </Button>\n        )}\n        <Dialog open={submitOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">シフト変更部分を保存する</DialogTitle>\n            <DialogContent>\n                シフト変更部分を保存します。このまま保存をするには「変更を送信」を、戻る場合は「キャンセルを押してください」\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={handleClose} variant=\"contained\">\n                キャンセル\n            </Button>\n            <Button onClick={handleSubmit} variant=\"contained\" color=\"secondary\">\n                変更を送信\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </>\n    );  \n}\n\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/shifts/create_shifts.jsx",["381","382"],"/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport {  makeStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TextField from '@material-ui/core/TextField';\nimport InputBase from '@material-ui/core/InputBase';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    minWidth: 650\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    // width: 200,\n    marginLeft: 10,\n    marginRight: 10\n  },\n}));\n\n\nexport default function CreateTableCellEdit({data, setSubmitData, stores, submitData, setShiftEdit}){\n// export default function CreateTableCellEdit({data, setSubmitNewData, setSubmitData, stores, submitData, setTrainerShifts, trainerShifts, setShiftEdit}){\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [checked, setChecked] = React.useState(false);\n    const [start, setStart] = React.useState([]);\n    const [finish, setFinish] = React.useState([]);\n    const [selectStore, setSelectStore] = React.useState();\n    const [inputCheck, setInputCheck] = React.useState({start: false, finish: false, store: false});\n\n    useEffect(()=>{\n        if(data.shifts){\n            setChecked(true)\n        }\n    },[])\n\n    const handleChange = (event) => {\n        console.log({data})\n        if(event.target.checked){\n            console.log({data},\"追加\")\n            setOpen(true);\n        }else{\n            console.log({data},\"削除\")\n        }\n        setChecked(event.target.checked);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function handleStartChange(e) {\n        setStart(e.target.value)\n        setInputCheck({start: true, finish: inputCheck.finish, store: inputCheck.store})\n    }\n    function handleFinishChange(e) {\n        setFinish(e.target.value)\n        setInputCheck({start: inputCheck.start, finish: true, store: inputCheck.store})\n    }\n    function handleStoreChange(e) {\n        console.log({e}) \n        setSelectStore(e.target.value);\n        setInputCheck({start: inputCheck.start, finish: inputCheck.finish, store: true})\n    }\n\n    const select_store = stores.length?\n    stores.map((s, index) =>\n        <MenuItem value={s} key={index} onChange={handleStoreChange}>{ s.store_name }</MenuItem>\n    ): \n        <MenuItem />\n\n    function handleEditChange(){\n        setOpen(true);\n        console.log({data})\n    }\n\n    function handleSubmitDataChange(){\n        // 存在するかさがす\n        const exist = submitData.find((d) => {\n            return (d.trainer_id === data.trainer_id && d.day == data.day);\n        });\n        const stimes = start.split(':');\n        var start_date = new Date(data.year, data.month - 1, data.day, Number(stimes[0]), Number(stimes[1]));\n        const ftimes = finish.split(':');\n        var finish_date = new Date(data.year, data.month - 1, data.day, Number(ftimes[0]), Number(ftimes[1]));\n        start_date  = `${start_date}`\n        finish_date = `${finish_date}`\n        const new_data_for_submit = {trainer_id: data.trainer_id, day: data.day, day_ja: data.day_ja, shifts: {start: start_date, finish: finish_date, trainer_id: data.trainer_id, store: selectStore}}\n        // data.shifts = {start: start, finish: finish, trainer_id: data.trainer_id, store: selectStore}\n        if (exist){\n            // すでに指定のオブジェクトが存在する場合\n            const updateShiftData = submitData.filter((sd) => {\n                if(sd.day == data.day && sd.trainer_id == data.trainer_id){\n                    return new_data_for_submit\n                }else{\n                    return sd\n                }\n            });\n            setSubmitData(updateShiftData)\n        }else{\n            // まだオブジェクトが存在しない場合\n            submitData.push(new_data_for_submit)\n        }\n        console.log({data},{submitData},{exist})\n        setOpen(false);\n        // data.shifts = {start: start, finish: finish, trainer_id: data.trainer_id, store_id: selectStore.id, store: selectStore}\n        // const updateTrainerShifts = trainerShifts.filter((shifts, index) => {\n        //     if (shifts.trainer.id == data.trainer_id){\n        //         const updateShiftData = shifts.data.filter((shiftd, index) => {\n        //             if(shiftd.day == data.day){\n        //                 // ここは変更後のデータを格納\n        //                 return data\n        //             }else{\n        //                 return shiftd\n        //             }\n        //         });\n        //         return {trainer: shifts.trainer, data: updateShiftData}\n        //     }else{\n        //         return shifts\n        //     }\n        // });\n        // // 大元のステートTrainerShiftsを変更部分を更新\n        // setTrainerShifts(updateTrainerShifts)\n        // シフトの変更をここで検出\n        setShiftEdit(true)\n    }\n\n    return(<>\n    {checked? (<>\n        <TableCell onClick={handleEditChange} className=\"cell_box\" style={{backgroundColor: '#FFDDFF', marginTop: 'auto', marginBottom: 'auto', paddingLeft: 0, paddingRight: 0}}>\n            <Checkbox\n                checked={checked}\n                onChange={handleChange}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n                style={{margin: 0, padding: 0}}\n            />\n            {/* {data.shift? (<>\n                <span style={{fontSize: 8}}>{ data.shift.store.store_name}</span>\n            </>):(<></>)} */}\n            {selectStore? (<>\n                <span style={{fontSize: 8}}>{selectStore.store_name}</span>\n            </>):(<></>)}\n            <div style={{marginLeft: 15, marginRight: 15, paddingTop: 10}}>\n            <InputBase\n                id=\"time\"\n                value={start}\n                className={classes.textField}\n                InputLabelProps={{ shrink: true, }}\n                inputProps={{ step: 300, }}\n                style={{display: 'inline-block'}}\n            /><hr/>\n            <InputBase\n                id=\"time\"\n                value={finish}\n                className={classes.textField}\n                InputLabelProps={{ shrink: true, }}\n                inputProps={{ step: 300, }}\n                style={{display: 'inline-block'}}\n            />\n            </div>\n        </TableCell>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">シフト詳細情報を入力してください</DialogTitle>\n            <DialogContent>\n                    {data.trainer.first_name_kanji} {data.trainer.last_name_kanji}さんの{data.day}日({data.day_ja})のシフトを追加\n                    <hr/>\n                <FormControl variant=\"outlined\" style={{ width: '90%',textAlign: 'left',backgroundColor: 'white'}} className=\"select_style\">\n                <InputLabel id=\"demo-store-select-outlined-label\" >店舗を選んでください。</InputLabel>\n                    <Select\n                    labelId=\"demo-store-select-outlined-label\"\n                    id=\"demo-store-select-outlined\"\n                    label=\"store\"\n                    onChange={ handleStoreChange }\n                    defaultValue={ selectStore }\n                    // value=\"ああああああああ\"\n                    >\n                    { select_store }\n                    </Select>\n                </FormControl><br/>\n                <br/>\n                <TextField\n                    id=\"time\"\n                    label=\"開始時刻\"\n                    type=\"time\"\n                    // defaultValue=\"07:30\"\n                    value={start}\n                    className={classes.textField}\n                    onChange={handleStartChange}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                    style={{marginRight: 20}}\n                    inputProps={{\n                        step: 1800, // 5 min\n                    }}\n                />\n                <TextField\n                    id=\"time\"\n                    label=\"終了時刻\"\n                    type=\"time\"\n                    // defaultValue=\"07:30\"\n                    value={finish}\n                    onChange={handleFinishChange}\n                    className={classes.textField}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                    inputProps={{\n                        step: 1800, // 5 min\n                    }}\n                />\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={handleClose} variant=\"contained\" color=\"secondary\">\n                キャンセル\n            </Button>\n\n            {\n                (() => {\n                    if (inputCheck.start && inputCheck.finish && inputCheck.store)\n                        return (\n                            <Button onClick={handleSubmitDataChange} variant=\"contained\" color=\"primary\">\n                                シフト追加\n                            </Button>\n                        )\n                    else\n                    return(\n                        <Button onClick={handleSubmitDataChange} variant=\"contained\" color=\"primary\" disabled>\n                            シフト追加\n                        </Button>\n                    )\n                })()\n            }\n            </DialogActions>\n        </Dialog>\n    </>):(<>\n        <TableCell onClick={handleEditChange} className=\"cell_box\" style={{backgroundColor: 'white', marginTop: 'auto', marginBottom: 'auto', paddingLeft: 0, paddingRight: 0}}>\n            {/* <TimeCell checked={checked} handleChange={handleChange} start={start} finish={finish} \n                    handleStartChange={handleStartChange} handleFinishChange={handleFinishChange} /> */}\n            <Checkbox\n                checked={checked}\n                onChange={handleChange}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n                style={{margin: 0, padding: 0}}\n            />\n            {data.shift? (<>\n                <span style={{fontSize: 8}}>{ data.shift.store.store_name}</span>\n            </>):(<></>)}\n            <div style={{marginLeft: 15, marginRight: 15, paddingTop: 10}}>\n            <InputBase\n                id=\"time\"\n                type=\"time\"\n                value={start}\n                className={classes.textField}\n                // onChange={handleStartChange}\n                InputLabelProps={{ shrink: true, }}\n                inputProps={{ step: 300, }}\n                style={{display: 'inline-block'}}\n            /><hr/>\n            <InputBase\n                id=\"time\"\n                type=\"time\"\n                value={finish}\n                className={classes.textField}\n                // onChange={handleFinishChange}\n                InputLabelProps={{ shrink: true, }}\n                inputProps={{ step: 300, }}\n                style={{display: 'inline-block'}}\n            />\n            </div>\n        </TableCell>\n    </>)}\n    </>)\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/shifts/update_shifts.jsx",["383","384","385"],"/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport {  makeStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TextField from '@material-ui/core/TextField';\nimport InputBase from '@material-ui/core/InputBase';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    minWidth: 650\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    // width: 200,\n    marginLeft: 10,\n    marginRight: 10\n  },\n}));\n\nfunction DisabledTimeCell({checked, handleChange}){\n    const classes = useStyles();\n    return (<>\n        {/* <TableCell className=\"cell_box\" style={{marginTop: 'auto', marginBottom: 'auto'}}> */}\n            <Checkbox\n                checked={checked}\n                onChange={handleChange}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n            />\n            <InputBase\n                id=\"time\"\n                type=\"time\"\n                disabled\n                className={classes.textField}\n                InputLabelProps={{ shrink: true, }}\n                inputProps={{ step: 300, }}\n                style={{display: 'inline-block'}}\n            /><hr/>\n            <InputBase\n                id=\"time\"\n                type=\"time\"\n                disabled\n                className={classes.textField}\n                InputLabelProps={{ shrink: true, }}\n                inputProps={{ step: 300, }}\n                style={{display: 'inline-block'}}\n            />\n        {/* </TableCell> */}\n    </>)\n}\n\n// 既存のシフト変更\n\nexport default function ShiftTableCellEdit({data, stores, setSubmitData, submitData, setTrainerShifts, trainerShifts, setShiftEdit, setDeleteData}){\n    const classes = useStyles();\n    const [selectStore, setSelectStore] = React.useState();\n    const [inputCheck, setInputCheck] = React.useState({start: false, finish: false, store: false});\n    const [open, setOpen] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n    const [start, setStart] = React.useState();\n    const [finish, setFinish] = React.useState(); \n\n    useEffect(()=>{\n        setStart(setDate(data.shifts.start))\n        setFinish(setDate(data.shifts.finish))\n        setInputCheck({start: true, finish: true, store: inputCheck.store})\n        //data.shifts.store\n        if(data){\n            if(data.shifts){\n                if(data.shifts.store){\n                    setSelectStore(data.shifts.store)\n                }\n            }\n        }\n    },[])\n    \n    const handleChange = (event) => {\n        console.log({data})\n        if(event.target.checked){\n            console.log({data},\"追加\")\n            setOpen(true);\n        }else{\n            console.log({data},\"削除\")\n            if (data.shifts.id){\n                setShiftEdit(true)\n                setDeleteData((prev) => ([...prev, data.shifts.id]))\n            }\n        }\n        setChecked(event.target.checked);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function handleStartChange(e) {\n        console.log(\"start\",e.target.value)\n        setStart(e.target.value)\n        setInputCheck({start: true, finish: inputCheck.finish, store: inputCheck.store})\n    }\n    function handleFinishChange(e) {\n        console.log(\"finish\",e.target.value)\n        setFinish(e.target.value)\n        setInputCheck({start: inputCheck.start, finish: true, store: inputCheck.store})\n    }\n    function handleStoreChange(e) {\n        console.log({e}) \n        setSelectStore(e.target.value);\n        setInputCheck({start: inputCheck.start, finish: inputCheck.finish, store: true})\n    }\n    const select_store = stores.length?\n    stores.map((s, index) =>\n        // <MenuItem value={s} key={index} onChange={handleStoreChange}>\n        <MenuItem value={s} key={index}>\n            { s.store_name }\n        </MenuItem>\n    ): \n        <MenuItem />\n\n    // const option_select_store = stores.length?\n    // stores.map((s, index) =>\n    //     <option key={index} value={s}>{ s.store_name }</option>\n    // ): \n    //     <option/>\n\n    function handleSubmitDataChange(){\n        // 存在するかさがす\n        console.log({data})\n        const stimes = start.split(':');\n        var start_date = new Date(data.year, data.month - 1, data.day, Number(stimes[0]), Number(stimes[1]));\n        const ftimes = finish.split(':');\n        var finish_date = new Date(data.year, data.month - 1, data.day, Number(ftimes[0]), Number(ftimes[1]));\n        start_date  = `${start_date}`\n        finish_date = `${finish_date}`\n        const new_data_for_submit = {trainer_id: data.trainer_id, day: data.day, day_ja: data.day_ja, \n                                    shifts: {id: data.shifts.id, start: start_date, finish: finish_date, trainer_id: data.trainer_id, store_id: selectStore.id, store: selectStore}}\n        data.shifts = {id: data.shifts.id, start: start, finish: finish, trainer_id: data.trainer_id,store_id: selectStore.id, store: selectStore}\n        // ここをfilterにすると上手く行かなかった\n        const updateShiftData = submitData.map((sd) => {\n            if(sd.day == data.day && sd.trainer_id == data.trainer_id){\n                return new_data_for_submit\n            }else{\n                return sd\n            }\n        });\n        setSubmitData(updateShiftData)\n\n        setOpen(false);\n        // 表示用のステート(TrainerShifts)の方も変更する\n        const updateTrainerShifts = trainerShifts.filter((shifts) => {\n            if (shifts.trainer.id == data.trainer_id){\n                const updateShiftData = shifts.data.filter((shiftd) => {\n                    if(shiftd.day == data.day){\n                        // ここは変更後のデータを格納\n                        return data\n                    }else{\n                        return shiftd\n                    }\n                });\n                return {trainer: shifts.trainer, data: updateShiftData}\n            }else{\n                return shifts\n            }\n        });\n        setTrainerShifts(updateTrainerShifts)\n        // シフトの変更をここで検出\n        setShiftEdit(true)\n    }\n\n    function handleEditChange(){\n        console.log({data})\n        setOpen(true);\n    }\n    function setDate(obj){\n        const date = new Date(`${obj}`)\n        var min = null\n        var hour = null\n        date.getMinutes()==0?  min = \"00\": min = String(date.getMinutes())\n        min.length == 1? min = \"0\" + min: min\n        String(date.getHours()).length == 1? hour = \"0\" + String(date.getHours()): hour = String(date.getHours())\n        const newDate = `${hour}:` + `${min}`\n        return newDate\n    }\n\n    return(<>\n        {checked? (<>\n        {open? (\n            <TableCell onClick={handleEditChange} className=\"cell_box\" style={{backgroundColor: '#64e8e8', marginTop: 'auto', marginBottom: 'auto', paddingLeft: 0, paddingRight: 0}}>\n                <Checkbox\n                    checked={checked}\n                    onChange={handleChange}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                    style={{margin: 0, padding: 0}}\n                />\n                {data.shifts?(<>\n                    {data.shifts.store?(<>\n                        <span style={{color: 'grey', fontSize: 10}}>{data.shifts.store.store_name}店</span>\n                    </>):(<>\n                        <span style={{color: 'red', fontSize: 8}}>店舗未選択</span>\n                    </>)}\n                </>):(<></>)}\n                <div style={{marginLeft: 15, marginRight: 15, paddingTop: 10, width: 80}}>\n                    <InputBase\n                        id=\"time\"\n                        value={start}\n                        className={classes.textField}\n                        InputLabelProps={{ shrink: true, }}\n                        inputProps={{ step: 300, }}\n                        style={{display: 'inline-block'}}\n                    /><hr/>\n                    <InputBase\n                        id=\"time\"\n                        value={finish}\n                        className={classes.textField}\n                        InputLabelProps={{ shrink: true, }}\n                        inputProps={{ step: 300, }}\n                        style={{display: 'inline-block'}}\n                    />\n                </div>\n            </TableCell>   \n        ):(\n            <TableCell onClick={handleEditChange} className=\"cell_box\" style={{backgroundColor: '#CCFFFF', marginTop: 'auto', marginBottom: 'auto', paddingLeft: 0, paddingRight: 0}}>\n                <Checkbox\n                    checked={checked}\n                    onChange={handleChange}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                    style={{margin: 0, padding: 0}}\n                />\n                {data.shifts?(<>\n                    {data.shifts.store?(<>\n                        <span style={{color: 'grey', fontSize: 10}}>{data.shifts.store.store_name}店</span>\n                    </>):(<>\n                        <span style={{color: 'red', fontSize: 8}}>店舗未選択</span>\n                    </>)}\n                </>):(<></>)}\n                <div style={{marginLeft: 15, marginRight: 15, paddingTop: 10, width: 80}}>\n                    <InputBase\n                        id=\"time\"\n                        value={start}\n                        className={classes.textField}\n                        InputLabelProps={{ shrink: true, }}\n                        inputProps={{ step: 300, }}\n                        style={{display: 'inline-block'}}\n                    /><hr/>\n                    <InputBase\n                        id=\"time\"\n                        value={finish}\n                        className={classes.textField}\n                        InputLabelProps={{ shrink: true, }}\n                        inputProps={{ step: 300, }}\n                        style={{display: 'inline-block'}}\n                    />\n                </div>\n            </TableCell>\n        )}\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">シフト詳細情報を入力してください</DialogTitle>\n                <DialogContent>\n                        {data.trainer.first_name_kanji} {data.trainer.last_name_kanji}さんの{data.day}日({data.day_ja})のシフトを追加\n                        <hr/>\n                    <FormControl variant=\"outlined\" style={{ width: '90%',textAlign: 'left',backgroundColor: 'white'}} className=\"select_style\">\n                    <InputLabel id=\"demo-store-select-outlined-label\" >店舗を選んでください。</InputLabel>\n                        <Select\n                            labelId=\"demo-store-select-outlined-label\"\n                            id=\"demo-store-select-outlined\"\n                            label=\"store\"\n                            onChange={ handleStoreChange }\n                            defaultValue={ data.shifts.store }\n                        >\n                            { select_store }\n                        </Select>\n                    </FormControl><br/>\n\n                    {/* <FormControl variant=\"outlined\" style={{ width: '90%',textAlign: 'left',backgroundColor: 'white', marginBottom: 20}} className=\"select_style\">\n                        <InputLabel id=\"demo-store-select-outlined-label\" >店舗を選んでください。</InputLabel>\n                        <NativeSelect\n                            onChange={ handleStoreChange }\n                            defaultValue={ data.shifts.store }\n                        >\n                            { option_select_store }\n                        </NativeSelect>\n                    </FormControl><br/> */}\n\n\n                    <br/>\n                    <TextField\n                        id=\"time\"\n                        label=\"開始時刻\"\n                        type=\"time\"\n                        // defaultValue=\"07:30\"\n                        value={start}\n                        className={classes.textField}\n                        onChange={handleStartChange}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        style={{marginRight: 20}}\n                        inputProps={{\n                            step: 1800, // 5 min\n                        }}\n                    />\n                    <TextField\n                        id=\"time\"\n                        label=\"終了時刻\"\n                        type=\"time\"\n                        // defaultValue=\"07:30\"\n                        value={finish}\n                        onChange={handleFinishChange}\n                        className={classes.textField}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        inputProps={{\n                            step: 1800, // 5 min\n                        }}\n                    />\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleClose} variant=\"contained\" color=\"secondary\">\n                    キャンセル\n                </Button>\n\n                {\n                    (() => {\n                        if (inputCheck.start && inputCheck.finish && inputCheck.store)\n                            return (\n                                <Button onClick={handleSubmitDataChange} variant=\"contained\" color=\"primary\">\n                                    シフト追加\n                                </Button>\n                            )\n                        else\n                        return(\n                            <Button onClick={handleSubmitDataChange} variant=\"contained\" color=\"primary\" disabled>\n                                シフト追加\n                            </Button>\n                        )\n                    })()\n                }\n                </DialogActions>\n            </Dialog>\n        </>): (<>\n            <TableCell className=\"cell_box\" style={{backgroundColor: '#DDDDDD' ,marginTop: 'auto', marginBottom: 'auto'}}>\n                <DisabledTimeCell checked={checked} handleChange={handleChange} />\n            </TableCell>\n        </>)}\n    </>)\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/appointments/appointment_new_func.js",["386","387","388","389"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button' \nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport axios from 'axios'\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: '#4DA7F0',\n    '&:hover': {\n      backgroundColor: '#4DA7F0',\n    },\n  },\n  buttonProgress: {\n    color: '#4DA7F0',\n    top: '80%',\n    left: '80%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 30,\n    marginBottom: 10,\n  },\n}));\n\nconst AppointmentNew = (props) => {\n    console.log(\"AppointmentNew\", {props})\n    const classes = useStyles();\n    const [appointments, setAppointments] = useState([]);\n    const [ appoDate, setAppoDate ] = useState();\n    const [value, setValue] = useState('');\n    const [timeValue, setTimeValue] = useState([]);\n    const history = useHistory();\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const [ radioCheck, setRadioCheck ] = useState(false);\n    const params = props.match.params\n    const url = `/appointments/new/${params.store_id}/${params.customer_menu_id}/${params.year}/${params.month}/${params.day}`\n\n    useEffect(()=>{\n        if (!loading) {\n          setSuccess(false);\n          setLoading(true);\n        }\n       axios.get(url)\n        .then(function(res) {\n            setSuccess(true);\n            setLoading(false);\n            setAppointments(res.data);\n        })\n        .catch(function(error) {\n            setLoading(false);\n            console.log({error})\n        });\n    },[])\n\n    function handleTimeSelect(e){\n        setTimeValue(e);\n        setRadioCheck(true)\n    }\n    const radio_buttons = appointments.map((time,index) =>\n        <React.Fragment key={index}>\n            {!(time[1] == 0) && (\n                <FormControlLabel \n                    value={time[0][0]}\n                    onClick={() => handleTimeSelect(time)}\n                    control={<Radio />} \n                    label= {time[2][0][0]+ \"時\"+ time[2][0][1] + \"分\" + \" 〜 \" + time[2][1][0] + \"時\" + time[2][1][1] + \"分\"} \n                />\n            )}\n            {(time[1] == 0) && (\n                <FormControlLabel \n                    value=\"disabled\" disabled control={<Radio />} \n                    label={time[2][0][0]+ \"時\"+ time[2][0][1] + \"分\" +  \" 〜 \" + time[2][1][0] + \"時\" + time[2][1][1] + \"分\"}  \n                />\n            )}\n        </React.Fragment>\n    );\n\n    function handleAppointmentChange(e) { \n        setAppoDate(e.target.value)\n    }  \n  \n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n    function handleClick(){\n        history.push({\n            pathname: `/customer/${props.match.params.customer_id}/appointments/confirm/${props.match.params.store_id}/${props.match.params.customer_menu_id}/${props.match.params.year}/${props.match.params.month}/${props.match.params.day}`,\n            state: { \n                store: props.location.state.store, customer_menu: props.location.state.customer_menu,\n                time_default: timeValue[0][0], time_array: timeValue[2], free_box: value,}\n        })\n    }\n    \n    return (\n        <>\n            <div style={{textAlign: 'center'}}>\n            <br/>\n                <FormLabel component=\"legend\">日時を選択してください</FormLabel>\n                <div className=\"chose_time\">\n                    <FormControl component=\"fieldset\">\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={ handleAppointmentChange }> \n                            { radio_buttons }\n                        </RadioGroup>\n                        {loading?(<>\n                            <CircularProgress size={50} className={classes.buttonProgress} />\n                            <div>\n                                空いているスケジュールを取得中です\n                            </div>\n                        </>):(<></>)}\n                    </FormControl>\n                </div>\n                <TextField\n                  id=\"outlined-multiline-static\"\n                  label=\"備考\"\n                  onChange={handleChange}\n                  multiline\n                  style={{width: '80%', backgroundColor: 'white'}}\n                  rows={4}\n                  variant=\"outlined\"\n                /><br/><br/>\n                <Button variant=\"contained\" size='large' style={{marginRight: 10}} color=\"primary\" href=\"/\">キャンセル</Button>\n                {radioCheck? (<>\n                    <Button variant=\"contained\" size='large' color=\"secondary\" onClick={handleClick} >予約する</Button>                \n                </>) : (<>\n                    <Button variant=\"contained\" size='large' color=\"secondary\" disabled >予約する</Button>\n                </>)\n\n                }\n            </div>\n            {/* </form> */}\n        </>\n    )\n}\n\nexport default AppointmentNew;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/shifts/shift_new.jsx",["390","391"],"/* eslint-disable react/prop-types */\nimport React, {  useState } from 'react';\nimport axios from 'axios'\nimport FormattedInputs from './text_field'\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { selectCurrentTrainer, selectTrainerHeaders } from '../../../slices/trainer';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nexport default function ShiftNew(props){\n    const history = useHistory();\n    const currentTrainer = useSelector(selectCurrentTrainer);\n    const trainer_headers = useSelector(selectTrainerHeaders);\n    var dt = new Date(props.year, props.month);\n    var items = [];\n    const last_day = new Date(dt.getFullYear(), dt.getMonth() + 2, 0)\n    const the_last_day = last_day.getDate()\n    const stateInit = {}\n\n    function DateInit(){\n        for (let i=1; i<the_last_day+1 ; i++) {\n            items.push(i);\n            stateInit[i] = {start: null, end: null}\n        }\n        return {items, stateInit};\n    }\n\n    const dateInits =  DateInit()\n    // STATE\n    const [shift, setShift] = useState(dateInits.stateInit);\n    const [button, setButton] = useState(false);\n\n\n    function handleSubmit(){\n        console.log(last_day.getMonth() + 1,\"月\")\n        const url = `/trainer/shift/create/year/${last_day.getFullYear()}/month/${last_day.getMonth()}/`\n        //TODO::下に直す\n        // const url = `/trainer/shift/create/year/${last_day.getFullYear()}/month/${last_day.getMonth() + 1}/`\n        console.log({shift})\n        axios.post( url, {\n            trainer_shift: shift\n        }, trainer_headers)\n        .then(function (response) {\n            console.log('成功', {response})\n            history.push(`/trainer/${currentTrainer.id}`);\n        })\n        .catch(function (response) {\n            console.log('失敗',{response})\n            console.log(response.data);\n        })\n    }\n    return(\n        <>\n        {/* <div style={{textAlign: 'center', fontSize: '1.7em'}}>{last_day.getMonth() + 1}月シフト希望提出</div> */}\n        <div style={{textAlign: 'center', fontSize: '1.7em'}}>{last_day.getMonth()}月シフト希望提出</div>\n        <div style={{overflow: 'scroll', height: 400,backgroundColor: 'white', marginTop: 15}}>\n        {/* <div style={{margin: 50}}></div> */}\n        <Grid container spacing={3}>\n           {dateInits.items.map((date, index) => (\n                <>\n                    <FormattedInputs key={index} setButton={setButton} date={date} shift={shift} setShift={setShift}/>\n                </>\n            ))}\n        </Grid>\n        </div>\n        <div style={{marginBottom: 20}}></div>\n\n        {button? (\n            <>\n            <Button variant=\"contained\" style={{width: '100%'}} color=\"secondary\" onClick={handleSubmit}>\n                シフトを送信\n            </Button>\n            </>\n        ):(\n            <Button variant=\"contained\" style={{width: '100%'}} disabled>\n                シフトを送信\n            </Button>\n        )}\n        </>\n    )\n}\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_info/customer_birthday.jsx",["392","393"],"/* eslint-disable react/prop-types */\nimport React, { useEffect} from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nexport default function BirthDay(props) {\n  const [year, setYear] = React.useState(1990);\n  const [month, setMonth] = React.useState(6);\n  const [day, setDay] = React.useState(1);\n  const [yearOpen, setYearOpen] = React.useState(false);\n  const [monthOpen, setMonthOpen] = React.useState(false);\n  const [dayOpen, setDayOpen] = React.useState(false);\n\n  useEffect(()=>{\n    const date = new Date(year, month - 1, day).toLocaleString({ timeZone: 'Asia/Tokyo' });\n    props.setCustomerInfo((prev) => ({...prev, birthday: date}))\n  },[year, month, day])\n\n  const handleYearChange = (event) => {\n    setYear(event.target.value);\n  };\n  const handleYearClose = () => {\n    setYearOpen(false);\n  };\n  const handleYearOpen = () => {\n    setYearOpen(true);\n  };\n  const handleMonthChange = (event) => {\n    setMonth(event.target.value);\n  };\n  const handleMonthClose = () => {\n    setMonthOpen(false);\n  };\n  const handleMonthOpen = () => {\n    setMonthOpen(true);\n  };\n    const handleDayChange = (event) => {\n    setDay(event.target.value);\n  };\n  const handleDayClose = () => {\n    setDayOpen(false);\n  };\n  const handleDayOpen = () => {\n    setDayOpen(true);\n  };\n\n\n  const today =  new Date\n  const old_year =  today.getFullYear() - 100\n  const years = [...Array(100)].map((_, i) => i + old_year)\n  const months = [...Array(12)].map((_, i) => i + 1)\n  const month_a = [1,3,5,7,8,10,12]\n  let days = [...Array(31)].map((_, i) => i + 1)\n  if(month_a.indexOf(month) != -1){\n    days = [...Array(31)].map((_, i) => i + 1)\n  }else if(month == 2&&year%4 == 0){\n    days = [...Array(28)].map((_, i) => i + 1)\n  }else{\n    days = [...Array(30)].map((_, i) => i + 1)\n  }\n\n  const years_box =  years.map((year,index) =>\n    <MenuItem key={index} value={year}>{year}</MenuItem>\n  );\n  const months_box =  months.map((month,index) =>\n    <MenuItem key={index} value={month}>{month}</MenuItem>\n  );\n  const days_box = days.map((day,index) =>\n    <MenuItem key={index} value={day}>{day}</MenuItem>\n  );\n  return (\n    <div style={{margin: 'auto 0', textAlign: 'center'}}>\n    <div className=\"customer_info_tag\">生年月日を教えてください</div>\n      <FormControl>\n        <InputLabel id=\"demo-controlled-open-select-label\">年</InputLabel>\n        <Select\n          defaultValue = { 1990 }\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={yearOpen}\n          onClose={handleYearClose}\n          onOpen={handleYearOpen}\n          // value={year}\n          onChange={handleYearChange}\n        >\n          { years_box }\n        </Select>\n      </FormControl>\n      <FormControl>\n        <InputLabel id=\"demo-controlled-open-select-label\">月</InputLabel>\n        <Select\n          defaultValue = { 6 }\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={monthOpen}\n          onClose={handleMonthClose}\n          onOpen={handleMonthOpen}\n          // value={month}\n          onChange={handleMonthChange}\n        >\n          { months_box }\n        </Select>\n      </FormControl>\n      <FormControl>\n        <InputLabel id=\"demo-controlled-open-select-label\">日</InputLabel>\n        <Select\n          defaultValue = { 15 }\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={dayOpen}\n          onClose={handleDayClose}\n          onOpen={handleDayOpen}\n          value={day}\n          onChange={handleDayChange}\n        >\n          { days_box }\n        </Select>\n      </FormControl>\n    </div>\n  );\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/master_admins/create_admin.js",["394","395","396","397","398","399"],"/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport axios from 'axios'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { selectCurrentMasterAdmin, selectMasterAdminHeaders, masterAdminRemove, } from '../../slices/master_admin';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: '#4DA7F0',\n    '&:hover': {\n      backgroundColor: '#4DA7F0',\n    },\n  },\n  submitButtonSuccess: {\n    backgroundColor: 'silver',\n    '&:hover': {\n      backgroundColor: 'silver',\n    },\n  },\n  fabProgress: {\n    color: '#4DA7F0',\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: '#4DA7F0',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction CreateAdmin(props) {\n    const params = props.match.params\n    const url = `/companies/${ params.company_id }/v1/admin_auth`\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password_confirmation, setPasswordConfirmation] = useState(\"\");\n    const history = useHistory();\n    const { handleSubmit } = useForm();\n    const master_admin_headers = useSelector(selectMasterAdminHeaders);\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n\n    function onSubmit() {\n        if (!loading) {\n          setSuccess(false);\n          setLoading(true);\n        }\n        var header_tokens = {}\n        axios.post( url, \n            {\n              email: email,\n              password: password,\n              password_confirmation: password_confirmation\n            },\n            master_admin_headers\n        )\n        .then(function (response) {\n          setSuccess(true);\n          setLoading(false);\n          console.log(response);\n          if (response.status==200) {\n              console.log(response.data);\n              history.push(`/master_admin`)\n          } else {\n              console.log(response);\n          }\n        }).catch(function (response) {\n          setLoading(false);\n          console.log({response})\n      })\n    }\n    const handleEMailChange = (e) => {\n        setEmail(e.target.value);\n    };\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    };\n    const handlePasswordConfirmationChange = (e) => {\n        setPasswordConfirmation(e.target.value);\n    };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          管理者新規登録\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"email\"\n                label=\"メールアドレスを入力してください\"\n                name=\"email\"\n                onChange={ handleEMailChange }\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"password\"\n                label=\"パスワードを入力してください\"\n                type=\"password\"\n                id=\"password\"\n                onChange={handlePasswordChange}\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"password\"\n                label=\"(確認)再度パスワードを入力してください\"\n                type=\"password\"\n                id=\"password\"\n                onChange={handlePasswordConfirmationChange}\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n\n          </Grid>\n\n          <div className={classes.wrapper}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              className={buttonClassname}\n              disabled={loading || success}\n            >\n              新規登録する\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          </div>\n\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default CreateAdmin;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/records_history.jsx",["400","401"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport { selectCustomerHeaders } from '../../slices/customer';\nimport { useSelector } from 'react-redux';\n\nfunction SetTime(time){\n    const d = new Date(time)\n    // d.getFullYear()\n    // d.getDate()\n    // d.getMonth() + 1\n    // d.getHours()\n    // d.getMinutes()\n    const newTime = String(d.getFullYear()) + \"年\" + String(d.getDate()) + \"月\" + String(d.getMonth() + 1) + \"日　 \"  + String(d.getHours()) + \":\"  + String(d.getMinutes()) + \"~\"\n    return newTime\n}\nfunction ShowRecords({record}) {\n    return (\n        <Paper className=\"border_light records_paper\">\n        <Grid container spacing={2} style={{height: '80%'}}>\n            <Grid item xs={10}>\n            <div style={{fontWeight: 700, color: '#555555'}}>\n                { record.fitness_name }<br/>\n                { SetTime(record.appointment_time) }\n                {/* { record.appointment_date[0] + '/' + record.appointment_date[1] + '/' + record.appointment_date[2] }\n                &nbsp;&nbsp;\n                { record.appointment_start[0] + ':' + record.appointment_start[1] } 〜 \n                { record.appointment_finish[0] + ':' + record.appointment_finish[1] } */}\n            </div>\n            {/* { record.session_menus.map((menu, index) => <span key={index}> {menu} </span>) } */}\n            </Grid>\n        </Grid>\n        </Paper>\n    );\n}\nexport default function RecordsHistory(props) {\n    console.log({props})\n    const url = `/customer_page/my_past/records`\n    const customer_headers = useSelector(selectCustomerHeaders);\n    const [finishRecords, setFinishRecords] = useState([]);\n\n    useEffect(()=>{\n        axios.get(url, customer_headers)\n        .then(function(res) {\n            console.log({res})\n            setFinishRecords(res.data.customer_records);\n        })\n        .catch(function(error) {\n            console.log({error})\n        });\n    },[])\n    \n    return(\n        <>  \n            <div style={{marginTop: 20}}>過去のセッションログ</div>\n            {/* <div className=\"month_split\">1月</div> */}\n            {finishRecords? finishRecords.map((record, index) => <ShowRecords key={index} record={record}/>) : <></> }\n            {/* <div className=\"month_split\">2月</div>\n            {finishRecords? finishRecords.map((record, index) => <ShowRecords key={index} record={record}/>) : <></> } */}\n        </>\n    );\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/my_page.js",["402","403","404"],"/* eslint-disable react/prop-types */\nimport React, {useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport {selectCurrentTrainer, selectTrainerHeaders, setCurrentTrainerInfo, selectCurrentTrainerInfos} from '../../slices/trainer'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport axios from 'axios';\nimport InputFile from '../inputFile'\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function TrainerMyPage(props) {\n  const classes = useStyles();\n  const currentTrainer = useSelector(selectCurrentTrainer);\n  const trainerHeaders = useSelector(selectTrainerHeaders);\n  const currentTrainerInfo = useSelector(selectCurrentTrainerInfos);\n  const dispatch = useDispatch();\n  const [avatarOpen, setAvatarOpen] = React.useState(false);\n  const handleClickAvatarOpen = () => {\n    setAvatarOpen(true);\n  };\n  const handleAvatarClose = () => {\n    setAvatarOpen(false);\n  };\n\n  const [preview, setPreview] = useState('');\n  const [avatarData, setAvatarData] = useState({});\n  function handleAvatarSubmit(){\n      const formData = new FormData();\n      const url = `/trainer/update_avatar`\n      console.log({trainerHeaders})\n      formData.append(\"avatar\", avatarData);\n      axios.put(url, formData, trainerHeaders)\n      .then(res => {\n          console.log({res})\n          setAvatarOpen(false);\n          dispatch(setCurrentTrainerInfo(res.data.data));\n      })\n      .catch(error => {\n          console.log({error})\n      });\n\n  }\n  function UpdateAvatar({setPreview, setAvatarData}) {\n    const handleChangeFile = (e) => {\n      const { files } = e.target;\n      setPreview((prev) => (prev, window.URL.createObjectURL(files[0])));\n      setAvatarData((prev) => (prev, e.target.files[0]));\n    };\n    return (\n      <>\n        {preview?  <>プロフィール画像を変更しますか？</> :\n          <>ライブラリから選択してください</>}\n        <img src={preview} width={'100%'}/>\n        <InputFile\n          type='file'\n          accept='image/*'\n          {...props}\n          onChange={ handleChangeFile }\n        />\n      </>\n    )\n  }\n\n  return (\n    <>\n    <div className={classes.root}>\n      <Paper elevation={3} variant=\"outlined\" square>\n      <Grid container >\n        <Grid item xs={1}/>\n        <Grid item xs={3} style={{textAlign: 'center', marginTop: 'auto',marginBottom: 'auto'}}>\n          {\n            (() => {\n              if (currentTrainer) {\n                if (currentTrainer.id == props.match.params.id){\n                  return(\n                    <> \n                    {currentTrainerInfo?.avatar_url ? (\n                      <Avatar style={{width: '3.0em',height: '3.0em', marginLeft: 'auto', marginRight: 'auto'}} alt=\"Remy Sharp\" src={currentTrainerInfo.avatar_url || \"\"} />\n                    ) : (\n                      <AccountCircleIcon style={{fontSize: '3.2em', color: 'grey'}} />\n                      // <AccountCircleIcon style={{fontSize: '3.2em', color: 'grey'}} onClick={handleClickAvatarOpen}/>\n                    )\n                    }\n                    {/* <AccountCircleIcon style={{fontSize: '3.2em', color: 'grey'}} onClick={handleClickAvatarOpen}/> */}\n                    {/* <div style={{fontSize: '0.5em'}} onClick={handleClickAvatarOpen}>プロフィールを変更</div> */}\n                    </>\n                  );\n                }\n              } else {\n                return (<AccountCircleIcon style={{fontSize: '3em', color: 'grey'}}/>);\n              }\n            })()\n          }\n            <Dialog\n              open={avatarOpen}\n              keepMounted\n              onClose={handleAvatarClose}\n              aria-labelledby=\"alert-dialog-slide-title\"\n              aria-describedby=\"alert-dialog-slide-description\"\n            >\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                  <UpdateAvatar setPreview={setPreview} setAvatarData={setAvatarData}/>\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleAvatarClose} color=\"primary\">\n                  キャンセル\n                </Button>\n                <Button onClick={handleAvatarSubmit} color=\"primary\">\n                  保存\n                </Button>\n              </DialogActions>\n            </Dialog>\n        </Grid>\n        <Grid item xs={1}/>\n        <Grid item xs={7} style={{paddingTop: 10}}>\n          <div style={{fontSize: '1.3em', fontWeight: '700'}}>\n            {/* {currentCustomer.first_name}{currentCustomer.last_name} */}\n            {/* { thisCustomer.first_name }{ thisCustomer.last_name } */}\n          </div>\n          <div style={{fontSize: '1.0em', color: '#959393', fontWeight: 600}}>\n\n          男性/20歳<br/>\n          2020年２月13日 入会<br/>\n          </div>\n        </Grid>\n      </Grid>\n    </Paper>\n    </div>\n\n    </>\n  );\n}\n\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/weight_new.jsx",["405"],"/* eslint-disable react/prop-types */\nimport React , { useEffect } from 'react';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentCustomer , selectCustomerHeaders } from '../../slices/customer';\nimport {BrowserRouter as useHistory} from 'react-router-dom';\nimport axios from 'axios'\n\nconst BootstrapButton = withStyles({\n  root: {\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: 16,\n    padding: '6px 25px',\n    border: '1px solid',\n    lineHeight: 1.5,\n    backgroundColor: '#4DA7F0',\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      backgroundColor: '#0069d9',\n      borderColor: '#0062cc',\n      boxShadow: 'none',\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n    },\n  },\n})(Button);\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\nexport default function WeightNew(){\n    const [weight, setWeight] = React.useState()\n    const [weightHistory, setWeightHistory] = React.useState([])\n    const currentCustomer = useSelector(selectCurrentCustomer);\n    const customerHeaders = useSelector(selectCustomerHeaders);\n    const classes = useStyles();\n    const url = `/customer_weights`\n    const history = useHistory();\n    const data = null\n\n    useEffect(async()=>{\n\n        axios.get(url, customerHeaders)\n        .then(function(res) {\n            console.log({res})\n            setWeightHistory(res.data)\n            // data = JSON.parse(res.data);\n            // console.log({data})\n        })\n        .catch(function(error) {\n            console.log({error})\n        });\n        \n    },[])\n    console.log({weightHistory})\n    // const showWeightTransition = weightHistory.map((customer_menu, index) =>\n    //     <div value={customer_menu.id} key={index} >{ customer_menu.name }</div>\n    // );\n    function handleWeightChange(e){\n        setWeight(e.target.value);\n    }\n\n    function handleSubmit(){\n        axios.post( url, \n            {weight: weight},\n            customerHeaders\n        )\n        .then(function (response) {\n            setWeight();\n            console.log('成功',{response})\n            history.push(`/customer/my_page/${currentCustomer.id}`);\n        })\n        .catch(function (response) {\n            console.log(\"error\", {response})\n        })\n    }\n\n    const renderLineChart = data?\n        (\n        <LineChart width={600} height={300} data={data} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\n            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n        </LineChart>\n        ):\n        <></>\n\n    return(\n            <>\n            <Paper elevation={3} variant=\"outlined\" square>\n            <Grid container style={{marginBottom: 10}}>\n                <Grid item xs={2}/>\n                <Grid item xs={10} style={{marginBottom: 10}}>\n                    <div className=\"customer_info_tag\">現在の体重を教えてください</div>\n                    <Input\n                        id=\"standard-adornment-weight\"\n                        value={weight}\n                        onChange={handleWeightChange}\n                        style={{textAlign: 'center'}}\n                        type=\"number\"\n                        endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n                        aria-describedby=\"standard-weight-helper-text\"\n                        inputProps={{\n                        'aria-label': 'weight',\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} style={{textAlign: 'right', marginRight: 30}}>\n                {\n                    weight?\n                    (<BootstrapButton variant=\"contained\" onClick={handleSubmit} color=\"primary\" disableRipple className={classes.margin}>\n                        更新する\n                    </BootstrapButton>)\n                    :\n                    (<BootstrapButton variant=\"contained\" disabled color=\"primary\" disableRipple className={classes.margin}>\n                        更新する\n                    </BootstrapButton>)\n                }\n                </Grid>\n            </Grid>\n            </Paper>\n            <div style={{paddingTop: 30}}/>\n            <Paper elevation={3} variant=\"outlined\" square style={{textAlign: 'center', padding: 10, fontSize: '1em', fontWeight: 600}}>\n                履歴\n            </Paper>\n            { renderLineChart }\n            </>\n    )\n}\n\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/index.tsx",["406","407","408"],"/* eslint-disable react/prop-types */\nimport React from 'react';\n/* eslint-disable react/prop-types */\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport Routes from './Routes';\nimport { createStore, applyMiddleware } from 'redux'\nimport Header from './components/applications/header';\nimport Footer from './components/applications/footer';\nimport { store, persistor } from './store';\nimport 'fontsource-roboto';\nimport axios from 'axios';\nconst enhancer = process.env.NODE_ENV === 'development' ? composeWithDevTools(applyMiddleware(thunk)) : applyMiddleware(thunk)\n\nswitch (process.env.NODE_ENV) {\n  case 'development':\n    axios.defaults.baseURL = 'http://localhost:3000';\n    break;\n  case 'production':\n    // EC2のグローバルIPアドレス\n    // // httpsで通信\n    // axios.defaults.baseURL = 'https://3.142.183.228';\n    // httpsではなく、httpで通信\n    // axios.defaults.baseURL = 'http://3.142.183.228';\n    // 参考http://blackwhite.sakura.ne.jp/wp/2017/10/06/https%E3%81%A8http%E3%81%AE%E6%B7%B7%E5%90%88%E3%82%B5%E3%82%A4%E3%83%88%E3%81%A7%E5%A4%96%E9%83%A8%E3%83%AA%E3%83%B3%E3%82%AF%E3%81%8C%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%81%E3%81%AA%E3%81%84%E5%A0%B4/\n    // axios.defaults.baseURL = 'http://loadbalancertest-408302291.us-east-2.elb.amazonaws.com/';\n    axios.defaults.baseURL = 'https://room-backend-sample.herokuapp.com/'\n    break;\n  default:\n    axios.defaults.baseURL = 'http://localhost:3000';\n}\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        {/* <ThemeProvider theme={theme}> */}\n          <Router>\n            <Header />\n            <Routes />\n            <div style={{margin: 100}}></div>\n            <Footer />\n          </Router>\n        {/* </ThemeProvider> */}\n      </PersistGate>\n    </Provider>\n  </>,\n  document.getElementById('root')\n);\n// registerServiceWorker();","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/my_page.js",["409","410","411","412"],"/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_evaluation_data.jsx",["413","414","415","416"],"/* eslint-disable react/prop-types */\nimport React , { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Bar } from 'react-chartjs-2';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chart from \"react-google-charts\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction BarChart({avaTrainer}) {\n  const graphData= {\n    // labels: [['2019年', '1月'],['2019年', '2月'],],\n    labels: avaTrainer.name,\n    datasets: [\n      // 表示するデータセット\n      {\n        data: avaTrainer.score,\n        backgroundColor: 'rgba(30, 144, 255, 0.5)',\n        borderColor: 'rgba(54, 162, 235, 1)',\n        label: avaTrainer.details,\n        borderWidth: 2,\n      },\n    ],\n  };\n    const graphOption = {\n    scales: {\n      xAxes: [ // x軸設定\n        {\n          scaleLabel: { // 軸ラベル設定\n            display: true,\n            labelString: 'トレーナー名',\n          },\n        },\n      ],\n      yAxes: [ // y軸設定\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'スコア平均点',\n        },\n        ticks: { // 軸目盛設定\n            beginAtZero: true,\n            max: 5,\n            // eslint-disable-next-line no-unused-vars\n            callback: function (value, index, values) {\n              return `${value}`;\n            },\n          },\n        },\n      ],\n    },\n  };\n\n\n  return (\n    <div className=\"App\">\n       <Bar data={graphData} options={graphOption} />\n    </div>\n  );\n}\n\n\nexport default function EvaluationData(props) {\n    const classes = useStyles();\n    const url = `/check_evaluation/${props.customer_id}`\n    const [avaTrainer, setAvaTrainer] = React.useState({details: null,name: [], score: []});\n    const [fitnessTrainerData, setFitnessTrainerData] = React.useState([]);\n    const [selectFitnessTrainerData, setSelectFitnessTrainerData] = React.useState({details: null,name: [], score: []});\n    const [pieChartData, setPieChartData] = React.useState([]);\n    useEffect(()=>{\n        axios.get(url)\n        .then(function(res) {\n            console.log({res})\n            setAvaTrainer({details: res.data.average.trainer[0], name: res.data.average.trainer[1], score: res.data.average.trainer[2]})\n            setFitnessTrainerData(res.data.average.all)\n            setPieChartData(res.data.count.all)\n        })\n        .catch(function(error) {\n          console.log({error})\n        });\n    },[])\n\n    function handleFitnessChange(e) {\n        if (e.target.value == \"reset\"){\n            setSelectFitnessTrainerData({details: null,name: [], score: []})\n        }else{\n            setSelectFitnessTrainerData({details: e.target.value[0],name: e.target.value[2], score: e.target.value[3]})\n        }\n    }\n\n    const select_fitness = fitnessTrainerData.length ?  \n    fitnessTrainerData.map((tag, index) =>\n        <MenuItem value={tag} key={index}>{ tag[1].name}</MenuItem>\n    ):\n        <MenuItem />\n\n    console.log({pieChartData})\n    return (\n    <div>\n        {/* <div style={{width: '70%', backgroundColor: 'white'}}> */} \n        <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>\n            <FormControl variant=\"outlined\" className=\"select_style\">\n                <InputLabel id=\"demo-store-select-outlined-label\" >メニューを選択してください</InputLabel>\n                    <Select\n                        labelId=\"demo-store-select-outlined-label\"\n                        id=\"demo-store-select-outlined\"\n                        label=\"store\"\n                        style={{backgroundColor: 'white'}}\n                        onChange={ handleFitnessChange }\n                    >\n                     <MenuItem value=\"reset\">全体</MenuItem>\n                    { select_fitness }\n                </Select>\n            </FormControl>\n            {selectFitnessTrainerData?.details? (\n                <BarChart avaTrainer={selectFitnessTrainerData}/>\n            ):(\n                <BarChart avaTrainer={avaTrainer}/>\n            )}\n          </Paper>\n        </Grid>\n        </Grid>\n        {/* </div> */}\n        <Grid container spacing={3}>\n        \n        {pieChartData?(\n            <>\n            {pieChartData.map((chartData,index) => (\n                <Grid key={index} item xs={12} sm={4}> \n                    <Chart\n                      width={'100%'}\n                      height={'300px'}\n                      chartType=\"PieChart\"\n                      loader={<div>Loading Chart</div>}\n                      data={chartData[2]}\n                      options={{\n                          title: `${chartData[0]}`,\n                      }}\n                      rootProps={{ 'data-testid': '1' }}\n                    />\n                </Grid>\n            ))}\n            </>\n        ):(\n            <></>\n        )}\n        </Grid>\n    </div>\n    );\n}\n\n\n\n\n\n\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/my_page_weight_line_graph.jsx",["417"],"/* eslint-disable react/prop-types */\nimport React, {  useState, useEffect } from \"react\"\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer ,CartesianGrid} from \"recharts\"\nimport { selectCustomerHeaders} from '../../slices/customer'\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\n\nexport default function LineGraph(){\n    const [weightHistory, setWeightHistory] = useState([]);\n    const headers = useSelector(selectCustomerHeaders);\n    const url = `/customer_weights`\n\n    useEffect(()=>{\n        axios.get(url, headers)\n        .then(function(response) {\n            setWeightHistory(response.data);\n        })\n        .catch(function(error) {\n          console.log({error})\n        });\n    },[])\n\n     return (\n         <>\n        {weightHistory.length?  (\n            <>\n                <ResponsiveContainer\n                width=\"96%\"\n                height=\"40%\"\n                minWidth={100}\n                minHeight={200}\n                style={{textAlign: 'left'}}\n                >\n                {/* <LineChart data={data}> */}\n                <LineChart data={weightHistory}>\n                    <CartesianGrid stroke=\"#eee\" strokeDasharray=\"10 10\" />\n                    <XAxis dataKey=\"name\" />\n                    {/* <YAxis  domain={['dataMin', 'dataMax']} ticks={[77,78,79,80,81,82]} /> */}\n                    <YAxis domain={['dataMin', 'dataMax']} />\n                    <Line dataKey=\"uv\" stroke=\"#8884d8\" />\n                    <Line dataKey=\"pv\" stroke=\"#82ca9d\" />\n                </LineChart>\n                </ResponsiveContainer>\n            </>\n        ) : (\n            <>\n            </>\n        )}\n        </>\n    );      \n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/admin_menues.jsx",["418"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: 10,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function AdminMenues(){\n    // const url = `/get/all_customers`\n    // const serch_url = `/serch/customers`\n    // const [allCustomers, setAllCustomers] = useState([]);\n    // const [searchCustomers, setSearchCustomers] = useState([]);\n    const classes = useStyles();\n\n    // useEffect(()=>{\n    //     axios.get(url)\n    //     .then(function(res) {\n    //         setAllCustomers(res.data.all_customers);\n    //     })\n    //     .catch(function(error) {\n    //       console.log({error})\n    //     });\n    // },[])\n\n    return(\n        <>\n        <div className={classes.root}>\n            <Grid container spacing={1}>\n                <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                  <Link href=\"/trainer/sign_up\" style={{textAlign: 'center'}}>\n                    トレーナーを登録する\n                  </Link><br/>\n                  新規のトレーナーを発行します\n                </Paper>\n                </Grid>\n\n                {/* <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Link href=\"/trainer/sign_up\" style={{textAlign: 'center'}}>\n                      セッションメニューを追加する\n                    </Link><br/>\n                    セッションメニューを新しく追加できます\n                  </Paper>\n                </Grid> */}\n{/* \n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Link href=\"/trainer/sign_up\" style={{textAlign: 'center'}}>\n                      店舗を追加する\n                    </Link><br/>\n                    既存の店舗の部屋数もこちらから変更できます\n                  </Paper>\n                </Grid> */}\n\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Link href=\"/admin_schedule\" style={{textAlign: 'center'}}>\n                      スケジュールを追加する\n                    </Link><br/>\n                    スケジュールを追加する\n                  </Paper>\n                </Grid>\n\n\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Link href=\"/admin/trainer_shifts\" style={{textAlign: 'center'}}>\n                      トレーナーシフト管理\n                    </Link><br/>\n                      今月のトレーナーのシフトを管理する\n                  </Paper>\n                </Grid>\n            </Grid>\n        </div>\n        </>\n    );  \n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/admin_schedule_cehck.js",["419","420","421","422"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, green } from '@material-ui/core/colors';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  square: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  rounded: {\n    color: '#fff',\n    backgroundColor: green[500],\n  },\n}));\n\nexport default function ScheduleCheck({company_id,  day, scroll}) {\n    const classes = useStyles();\n    const history = useHistory();\n    const [storeAppointments, setStoreAppointments] = useState([]);\n    const [thisStoreAppointments, setThisStoreAppointments] = useState();\n    var url = `/admin/company_id/${company_id}/year/${day.year}/month/${day.month}/day/${day.day}`\n    \n    useEffect(()=>{\n        axios.get(url)\n        .then(function(res) {\n            setStoreAppointments(res.data.today_schedules);\n            if (res.data.today_schedules.length){\n              // 初期値を設定\n              console.log({res})\n              setThisStoreAppointments(res.data.today_schedules[0].value);\n            }\n        })\n        .catch(function(error) {\n          console.log({error})\n        });\n    },[day])\n\n    function handlehange(e) {\n        setThisStoreAppointments(e.target.value.value);\n    }\n\n    const StyledTableCell = withStyles((theme) => ({\n        head: {\n            backgroundColor: '#4DA7F0',\n            color: theme.palette.common.white,\n            fontWeight: 600\n        },\n        body: {\n            fontSize: 20,\n            padding: 5,\n        },\n    }))(TableCell);\n    \n    const StyledTableRow = withStyles(() => ({\n        root: {\n            '&:nth-of-type(odd)': {\n            },\n        },\n    }))(TableRow);\n\n    const stores_box = storeAppointments.length ?  \n    storeAppointments.map((store,store_index) =>\n        <MenuItem  value={store} key={store_index}>{ store.store_name }</MenuItem>\n    ): \n        <MenuItem />\n\n    const render_rooms = thisStoreAppointments ?  \n       thisStoreAppointments.store_rooms_num_for_js.map((room, index) =>\n            <StyledTableCell align=\"center\" key={index} >{ room }</StyledTableCell>\n        )\n    : \n        <MenuItem />\n\n    const render_appoints = thisStoreAppointments?  \n       thisStoreAppointments.schedules.map((schedule, index) =>\n       <>\n          <StyledTableRow key={index}>\n            <StyledTableCell key={index} align=\"center\" style={{fontSize: '1.0em', backgroundColor: '#DDFFFF'}}>\n              {schedule[0][0][0] + \":\" + schedule[0][0][1]}<br/>\n                |<br/>\n              {schedule[0][1][0] + \":\" + schedule[0][1][1]}\n            </StyledTableCell>\n            { ScheduleDetails(schedule[1], schedule[0]) }\n          </StyledTableRow>\n        </>\n        )\n    : \n        <MenuItem />\n\n    function handleClickOpen(res,time) {\n      const next_url = `/customer/${ res.customer_id }/appointment/${ res.id }/new_record`\n      // customer_session_record.jsxで使われている\n      // var url_use_in_customer_session_record = `/trainers/${currentTrainer.id}/fitness/${record.fitness_id}`\n      history.push({ pathname: next_url, state: { response: res, time: time }});\n    }\n\n\n    function ScheduleDetails(res,time) {\n      function FillBlankRepeat() {\n        var items = [];\n        for (var i = 0;  i < thisStoreAppointments.store_rooms_num - res.length;  i++  ) {\n            items.push(i);\n        }\n        return {items};\n      }\n      const repeat_materials = FillBlankRepeat()\n       return (\n          <>\n            {res.map((r,index) => (\n              <>\n              {\n                (() => {\n                  if (r.customer_id) {\n                    return(<>\n                      <StyledTableCell key={index} align=\"center\" style={{fontSize: '0.9em',border: '1px solid', borderColor: '#DDDDDD'}}>\n                        <Grid container spacing={3}>\n                          <Grid item xs={3} sm={2}>\n                          {r.avatar_url? (\n                            <Avatar variant=\"rounded\" style={{marginLeft: 'auto'}} src={r.avatar_url} className={classes.rounded}/>\n                          ):(\n                            <Avatar variant=\"rounded\" style={{marginLeft: 'auto'}} className={classes.rounded}/>\n                          )}\n                          </Grid>\n                          <Grid item xs={9} sm={9} style={{textAlign: 'left'}}>\n                            {r.first_name_kana} {r.last_name_kana}<br/>\n                            {r.first_name_kanji} {r.last_name_kanji}様/\n                            {r.fitness_name}\n                          </Grid>\n                        </Grid>\n                      </StyledTableCell>\n                    </>);\n                  } else {\n                    if (r.name) {\n                      return (\n                        <StyledTableCell key={index} align=\"center\" style={{fontSize: '0.9em', backgroundColor: '#FF97C2',border: '1px solid', borderColor: '#DDDDDD'}}>\n                          お名前:{r.name}<br/>\n                          メールアドレス:{r.email}\n                        </StyledTableCell>\n                      )\n                    } else {\n                      return (\n                        <StyledTableCell key={index} align=\"center\" style={{fontSize: '0.9em', backgroundColor: '#FFBEDA',border: '1px solid', borderColor: '#DDDDDD'}}/>\n                      )\n                    }\n                  }\n                })()\n              }\n              </>\n            ))}\n            {repeat_materials.items.map((mate, index) => (\n              <StyledTableCell key={index} style={{backgroundColor: 'white', border: '1px solid', borderColor: '#DDDDDD'}}/>\n            ))}\n          </>\n       )\n    }\n    return (\n        <>\n        <br/>\n          <div style={{textAlign: 'center'}}>\n            <FormControl variant=\"outlined\" style={{ width: '90%'}} className=\"select_style\">\n              <InputLabel id=\"demo-store-select-outlined-label\" >店舗を選んでください</InputLabel>\n                <Select\n                  labelId=\"demo-store-select-outlined-label\"\n                  id=\"demo-store-select-outlined\"\n                  label=\"store\"\n                  onChange={ handlehange }\n                  // defaultValue={thisStoreAppointments ?  thisStoreAppointments.store_name : null}\n                  style={{ backgroundColor: 'white'}}\n                >\n                  { stores_box }\n                </Select>\n            </FormControl> <br/><br/>\n          </div>\n          {scroll?(\n            <div style={{height: 500, overflow: 'auto'}}>\n              <TableContainer component={Paper} className=\"inline_block\">\n                  <Table aria-label=\"customized table\" className=\"inline_block\">\n                      <TableHead>\n                          <TableRow>\n                              <StyledTableCell align=\"center\">時間</StyledTableCell>\n                              { render_rooms } \n                          </TableRow>\n                      </TableHead>\n                     \n                      <TableBody>\n                          { render_appoints } \n                      </TableBody>\n                  </Table>\n              </TableContainer>\n            </div>\n          ) : (\n            <div>\n              <TableContainer component={Paper} className=\"inline_block\">\n                  <Table aria-label=\"customized table\" className=\"inline_block\">\n                      <TableHead>\n                          <TableRow>\n                              <StyledTableCell align=\"center\">時間</StyledTableCell>\n                              { render_rooms } \n                          </TableRow>\n                      </TableHead>\n                      <TableBody>\n                          { render_appoints } \n                      </TableBody>\n                  </Table>\n              </TableContainer>\n            </div>\n          )}\n        </>\n    )\n}\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/create_trainer.js",["423"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport {  makeStyles } from '@material-ui/core/styles';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { useSelector} from 'react-redux';\nimport { selectCurrentAdmin, selectAdminHeaders } from '../../slices/admin';\nimport CheckTrainerMenues from './check_trainer_menues'\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: '#4DA7F0',\n    '&:hover': {\n      backgroundColor: '#4DA7F0',\n    },\n  },\n  submitButtonSuccess: {\n    backgroundColor: 'silver',\n    '&:hover': {\n      backgroundColor: 'silver',\n    },\n  },\n  fabProgress: {\n    color: '#4DA7F0',\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: '#4DA7F0',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nfunction CreateTrainer() {\n    const classes = useStyles();\n    const currentAdmin = useSelector(selectCurrentAdmin);\n    const admin_headers = useSelector(selectAdminHeaders);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password_confirmation, setPasswordConfirmation] = useState(\"\");\n    const [trainerMenues, setTrainerMenues] = useState([]);\n    const history = useHistory();\n    const { handleSubmit } = useForm();\n    const getFitnesses = `/fitnesses`\n    const [allFitnesses, setAllFitnesses] = useState([]);\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const [name, setName] = useState({first_name_kanji: \"\", last_name_kanji: \"\", first_name_kana: \"\",last_name_kana: \"\"});\n\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n    useEffect(()=>{\n       axios.get(getFitnesses, admin_headers)\n        .then(function(res) {\n            if (res.data.status==200) {\n                setAllFitnesses(res.data.fitnesses);\n            }\n        })\n        .catch(function(error) {\n          console.log({error})\n        });\n    },[])\n\n    function onSubmit() {\n        if (!loading) {\n          setSuccess(false);\n          setLoading(true);\n        }\n        const url = `/companies/${ currentAdmin.company_id }/v1/trainer_auth`\n        axios.post( url,\n            // トレーナーの登録\n            {\n              first_name_kana: name.first_name_kana,\n              last_name_kana: name.last_name_kana,\n              first_name_kanji: name.first_name_kanji,\n              last_name_kanji: name.last_name_kanji,\n              email: email,\n              password: password,\n              password_confirmation: password_confirmation,\n              company_id: currentAdmin.company_id\n            },\n            admin_headers\n        )\n        .then(function (response) {\n            // fitnessとの関連付け\n            const fitness_url = `/set_fitnesses`\n            console.log({response})\n            axios.post( fitness_url,\n                {\n                  trainer: response.data,\n                  fitness_data: trainerMenues\n                },\n                admin_headers\n            )\n            .then(function (response) {\n                setSuccess(true);\n                setLoading(false);\n                console.log({response})\n                history.push(`/`)\n            }).catch(function (response) {\n              setLoading(false);\n              console.log({response})\n            })\n        }).catch(function (response) {\n            setLoading(false);\n            console.log({response})\n        })\n    }\n    const handleEMailChange = (e) => {\n        setEmail(e.target.value);\n    };\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    };\n    const handlePasswordConfirmationChange = (e) => {\n        setPasswordConfirmation(e.target.value);\n    };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          トレーナーを新規登録する\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <InputLabel id=\"demo-store-select-outlined-label\" >セッションスキルを選択してください(複数可)</InputLabel>\n            <Grid item xs={12}>\n              <CheckTrainerMenues setTrainerMenues={setTrainerMenues} trainerMenues={trainerMenues} allFitnesses={allFitnesses}/>\n            </Grid>\n\n            <Grid item xs={6} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"firstnamekanji\"\n                onChange={(e) => setName((prev) => ({...prev, first_name_kanji: e.target.value}))}\n                label=\"姓\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"lastNamekanji\"\n                label=\"名\"\n                onChange={(e) => setName((prev) => ({...prev, last_name_kanji: e.target.value}))}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"firstnamekana\"\n                onChange={(e) => setName((prev) => ({...prev, first_name_kana: e.target.value}))}\n                label=\"せい(かな)\"\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"lastName\"\n                label=\"めい(かな)\"\n                onChange={(e) => setName((prev) => ({...prev, last_name_kana: e.target.value}))}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n\n            <InputLabel id=\"demo-store-select-outlined-label\" >メールアドレス・パスワードを入力してください</InputLabel>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                // required\n                fullWidth\n                id=\"email\"\n                label=\"メールアドレスを入力してください\"\n                name=\"email\"\n                onChange={ handleEMailChange }\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n                variant=\"outlined\"\n                // required\n                fullWidth\n                name=\"password\"\n                label=\"パスワードを入力してください\"\n                type=\"password\"\n                id=\"password\"\n                onChange={handlePasswordChange}\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n                variant=\"outlined\"\n                // required\n                fullWidth\n                name=\"password\"\n                label=\"(確認)再度パスワードを入力してください\"\n                type=\"password\"\n                id=\"password\"\n                onChange={handlePasswordConfirmationChange}\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n\n          </Grid>\n          {name.first_name_kanji && name.last_name_kanji  && name.first_name_kana  && name.last_name_kana && \n            email && password && password_confirmation &&\n            password == password_confirmation? (<>\n              <div className={classes.wrapper}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  className={buttonClassname}\n                  disabled={loading || success}\n                >\n                  新規登録する\n                </Button>\n                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n              </div>\n            </>) : (<>\n            <div className={classes.wrapper}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                fullWidth\n                className={buttonClassname}\n                disabled\n              >\n                新規登録する\n              </Button>\n              {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </div>\n            </>)}\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default CreateTrainer;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/customer_all.jsx",["424"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState} from 'react';\nimport axios from 'axios'\nimport Paper from '@material-ui/core/Paper';\nimport {selectCurrentAdmin, selectAdminHeaders} from '../../slices/admin'\nimport {selectCurrentTrainer, selectTrainerHeaders} from '../../slices/trainer'\nimport { useSelector } from 'react-redux';\nimport {BrowserRouter as useHistory} from 'react-router-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CustomerSetInfoDialog from './customer_set_info_dialog'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: 10,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    wordWrap: 'break-word',\n  },\n  table: {\n    minWidth: 700,\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction TrainerBooking({customer}){\n    const [open, setOpen] = React.useState(false);\n    const history = useHistory();\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    function handleHref(){\n      history.push(`/customer/${customer.id}/calendar_new`);\n      setOpen(false);\n    }\n  return(\n    <>\n      {customer.paid ? (\n      <>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              有料会員\n              {customer.room_plus ? <div style={{fontSize: 15}}>プラス</div> : <></>}\n              &nbsp;{customer.numbers_of_contractnt}回/月\n          </Button>\n      </>\n      ) : (\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\n          無料会員\n      </Button>\n      )} \n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{customer.first_name_kanji}{customer.last_name_kanji} 様の予約を行いますか？</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            このまま進むをクリックすると{customer.first_name_kanji}{customer.last_name_kanji} 様の予約を行うことができます。\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            キャンセル\n          </Button>\n          <Button onClick={handleHref} color=\"primary\" autoFocus>\n            このまま進む\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nfunction CustomerCell({customer, index, setAllCustomers}){\n  const classes = useStyles();\n  const currentAdmin = useSelector(selectCurrentAdmin);\n  const currentTrainer = useSelector(selectCurrentTrainer);\n  return(\n    <>\n      <StyledTableRow key={index}>\n        <StyledTableCell align=\"left\">\n          {customer.avatar_url? (\n              <Avatar variant=\"rounded\" style={{marginLeft: 'auto'}} src={customer.avatar_url} className={classes.rounded}/>\n            ):(\n              <Avatar variant=\"rounded\" style={{marginLeft: 'auto'}} className={classes.rounded}/>\n          )}\n        </StyledTableCell>\n        <StyledTableCell component=\"th\" scope=\"row\" >\n          <Button color=\"primary\" href={`/customer/my_page/${customer.id}`}>\n              {customer.first_name_kana} {customer.last_name_kana}<br/>\n              {customer.first_name_kanji} {customer.last_name_kanji}\n          </Button>\n        </StyledTableCell>\n        <StyledTableCell align=\"left\">{customer.email}</StyledTableCell>\n        <StyledTableCell align=\"left\">{customer.address}</StyledTableCell>\n        <StyledTableCell align=\"left\">\n          通常:{customer.phone_number}<br/>\n          緊急:{customer.emergency_phone_number}\n        </StyledTableCell>\n        <StyledTableCell align=\"left\">\n               {\n                  (() => {\n                    if (currentAdmin) {\n                        return(<CustomerSetInfoDialog customer={customer} setAllCustomers={setAllCustomers}/>);\n                    } else if(currentTrainer) {\n                      return (<TrainerBooking customer={customer}/>);\n                    }\n                  })()\n                }\n        </StyledTableCell>\n      </StyledTableRow>\n    </>\n  );\n}\n\nexport default function AllCustomers(){\n    const classes = useStyles();\n    const url = `/get/all_customers`\n    const [allCustomers, setAllCustomers] = useState([]);\n    const adminHeaders = useSelector(selectAdminHeaders);\n    const trainerHeaders = useSelector(selectTrainerHeaders);\n\n    useEffect(()=>{\n\n      if(adminHeaders){\n       axios.get(url, adminHeaders)\n        .then(function(res) {\n            setAllCustomers(res.data.all_customers);\n        })\n        .catch(function(error) {\n          console.log({error})\n        });\n      }else if(trainerHeaders){\n       axios.get(url, trainerHeaders)\n        .then(function(res) {\n            setAllCustomers(res.data.all_customers);\n        })\n        .catch(function(error) {\n          console.log({error})\n        });\n      }\n    },[])\n  console.log({allCustomers})\n    return(\n        <>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell>お名前</StyledTableCell>\n                  <StyledTableCell align=\"left\">メールアドレス</StyledTableCell>\n                  <StyledTableCell align=\"left\">住所</StyledTableCell>\n                  <StyledTableCell align=\"left\">電話番号</StyledTableCell>\n                  <StyledTableCell align=\"left\">会員情報</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                { allCustomers.map((customer, index) => <CustomerCell key={index} customer={customer} setAllCustomers={setAllCustomers}/>) }\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </>\n    );  \n}\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/appointment_records/create_menues.js",["425","426"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios'\nimport { BrowserRouter as  useHistory} from 'react-router-dom';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: '90%',\n    margin: '0 auto',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst AppointmentRecordMenusCreate = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [fitnessMenues, setFitnessMenues] = useState([]);\n    const [fitnessMenuesFirstID, setFitnessMenuesFirstID] = useState([]);\n    const [fitnessMenuesSecond, setFitnessMenuesSecond] = useState([]);\n    const [fitnessMenuesThird, setFitnessMenuesThird] = useState([]);\n    const [getFitnessMenuesThird, setGetFitnessMenuesThird] = useState([]);\n    const [time, setTime] = useState();\n    const [setNum, setSetNum] = useState();\n    const [detail, setDetail] = useState(\"\");\n    const { handleSubmit } = useForm();\n    const url = `/customer_record/${props.match.params.customer_record_id}/new`\n    useEffect(()=>{\n       axios.get(url)\n        .then(function(res) {\n            setFitnessMenues(res.data.fitness_menues);\n        })\n        .catch(function(error) {\n          console.log({error})\n        });\n    },[])\n    function onSubmit() {\n        const submit_url = `/customer/${props.match.params.customer_record_id}/fitness/${fitnessMenuesFirstID}/fitness_third/${getFitnessMenuesThird.id}/session/create`\n        axios.post( submit_url, {\n            time: time,\n            set_num: setNum,\n            detail: detail,\n        })\n        .then(function (response) {\n            console.log('response is')\n            console.log(response)\n            history.push(`/`)\n        })\n    }\n    function handleSecondChange(e) {\n        if(e.target.value.second){\n            setFitnessMenuesFirstID(e.target.value.id);\n            setFitnessMenuesSecond(e.target.value.second);\n        }\n    }\n    function handleThirdChange(e) {\n        if(e.target.value.third){\n            setFitnessMenuesThird(e.target.value.third);\n        }\n    }\n    function handleTimeChange(e) {\n        setTime(e.target.value);\n    }\n    function handleSetNumChange(e) {\n        setSetNum(e.target.value);\n    }\n    function handleDetailChange(e) {\n        setDetail(e.target.value);\n    }\n    function handleGetThirdMenu(e){\n        setGetFitnessMenuesThird(e.target.value);\n    }\n    \n    \n    const select_fitness_menu = fitnessMenues.length?\n    fitnessMenues.map((menu, index) =>\n        <MenuItem value={menu} key={index}>{ menu.name }</MenuItem>\n    ): \n        <MenuItem />\n    const select_fitness_second_menu = fitnessMenuesSecond.length?\n    fitnessMenuesSecond.map((menu, index) =>\n        <MenuItem  value={menu} key={index}>{ menu.name }</MenuItem>\n    ): \n        <MenuItem />\n    const select_fitness_third_menu = fitnessMenuesThird.length?\n    fitnessMenuesThird.map((menu, index) =>\n        <MenuItem  value={menu} key={index}>{ menu.name }</MenuItem>\n    ): \n        <MenuItem />\n    \n    return (\n    <>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        <br/>\n        <div style={{textAlign: 'center'}}>\n            <FormControl variant=\"outlined\" style={{ width: '90%',textAlign: 'left',backgroundColor: 'white'}} className=\"select_style\">\n              <InputLabel id=\"demo-store-select-outlined-label\" >メニューを選んでください。</InputLabel>\n                <Select\n                  labelId=\"demo-store-select-outlined-label\"\n                  id=\"demo-store-select-outlined\"\n                  label=\"store\"\n                  onChange={ handleSecondChange }\n                >\n                  { select_fitness_menu }\n                </Select>\n            </FormControl> <br/>\n        </div>\n        <br/>\n        <div style={{textAlign: 'center'}}>\n            <FormControl variant=\"outlined\" style={{ width: '90%',textAlign: 'left',backgroundColor: 'white'}} className=\"select_style\">\n              <InputLabel id=\"demo-store-select-outlined-label\" >メニュー2を選んでください。</InputLabel>\n                <Select\n                  labelId=\"demo-store-select-outlined-label\"\n                  id=\"demo-store-select-outlined\"\n                  label=\"store\"\n                  onChange={ handleThirdChange }\n                >\n                  <MenuItem value=\"メニューを選んでください。\"><em>未選択</em></MenuItem>\n                  { select_fitness_second_menu }\n                </Select>\n            </FormControl> <br/>\n        </div>\n        <br/>\n        <div style={{textAlign: 'center'}}>\n            <FormControl variant=\"outlined\" style={{ width: '90%',textAlign: 'left',backgroundColor: 'white'}} className=\"select_style\">\n              <InputLabel id=\"demo-store-select-outlined-label\" >メニュー3を選んでください。</InputLabel>\n                <Select\n                  labelId=\"demo-store-select-outlined-label\"\n                  id=\"demo-store-select-outlined\"\n                  label=\"store\"\n                  onChange={ handleGetThirdMenu }\n                >\n                  <MenuItem value=\"メニューを選んでください。\"><em>未選択</em></MenuItem>\n                  { select_fitness_third_menu }\n                </Select>\n            </FormControl> <br/>\n        </div>\n        <div style={{textAlign: 'center'}}>\n            <TextField id=\"filled-basic\" \n                style={{width: '90%', margin: 10, backgroundColor: 'white'}}  \n                label=\"回数を入力してください\" \n                onChange={handleTimeChange}\n                type=\"number\"\n                variant=\"filled\" />\n\n            <TextField id=\"filled-basic\" \n                style={{width: '90%', margin: 10, backgroundColor: 'white'}}  \n                label=\"セット数を入力してください\"\n                onChange={handleSetNumChange} \n                type=\"number\"\n                variant=\"filled\" />\n            <TextField\n                id=\"outlined-multiline-static\"\n                style={{width: '90%', margin: 10,backgroundColor: 'white'}} \n                label=\"備考/フィードバック\"\n                multiline\n                onChange={handleDetailChange} \n                rows={4}\n                variant=\"outlined\"\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{width: '90%', margin: 10}} \n                className={classes.submit}\n            >\n            フィードバックを送る\n          </Button>\n        </div>\n        </form>\n    </>\n  );\n}\n\nexport default AppointmentRecordMenusCreate;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/appointments/appointent_confirm.js",["427","428","429"],"/* eslint-disable react/prop-types */\nimport React, {  useState } from 'react';\nimport Button from '@material-ui/core/Button' \nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '90%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 80,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n    marginLeft: 30,\n    marginRight: 30,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: '#4DA7F0',\n    '&:hover': {\n      backgroundColor: '#4DA7F0',\n    },\n  },\n  buttonProgress: {\n    color: '#4DA7F0',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst AppointmentConfirm = (props) => {\n    console.log(\"AppointmentConfirm\", {props})\n    const classes = useStyles();\n    const time_strings = props.location.state.time_default\n    const time_array_start = props.location.state.time_array[0]\n    const time_array_finish = props.location.state.time_array[1]\n    const [check, setCheck] = useState(false);\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n\n    function handleCheckOk() {\n        const params = props.match.params\n        const create_url = `/customer/${props.match.params.customer_id}/appointments/new/${params.store_id}/${params.customer_menu_id}/${params.year}/${params.month}/${params.day}`\n        console.log({time_strings})\n        const submitTime = new Date(time_strings)\n        const hour = submitTime.getHours()\n        const min = submitTime.getMinutes()\n        console.log({hour},{min})\n        if (!loading) {\n            setSuccess(false);\n            setLoading(true);\n        }\n        axios.post( create_url, {\n            // appointment_time: time_strings,\n            hour: hour,\n            min: min,\n            free_box: props.location.state.free_box,\n          })\n          .then(function (response) {\n            console.log({response})\n            setSuccess(true);\n            setLoading(false);\n            setCheck(true);\n          }).catch(function (response) {\n            setLoading(false);\n            console.log(response);\n        })\n    }\n\n    // useEffect(async()=>{\n    //   const url = `/customer_menu_serch/${props.match.params.customer_menu_id}`\n    //    axios.get(url)\n    //     .then(function(res) {\n    //         setCustomerMenu(res.data.customer_menu);\n    //     })\n    //     .catch(function(error) {\n    //       console.log({error})\n    //     });\n    // },[])\n\n    return (\n        <>\n            <div>\n            <br/>\n                {check && (\n                    <Card className=\"apo_success\" >\n                    <div style={{textAlign: 'center', marginTop: 10 }}>\n                        <CheckCircleIcon style={{color: '#005FFF', fontSize: 30}}/>\n                    </div>\n                    <CardContent>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            <span style={{fontSize: '1.2em',color: '#959393',fontWeight: '900'}}>予約が確定しました!</span>\n                        </Typography>\n                        <Typography className={classes.title}>\n                            <span style={{fontSize: '1.0em',color: '#959393',fontWeight: '900'}}>内容</span>\n                            <div style={{fontSize: '1.3em',color: '#959393',fontWeight: '500'}}>\n                               &nbsp; 【{props.location.state.store}店】  {props.location.state.customer_menu}\n                            </div>\n                            <hr/>\n                        </Typography>\n                        <Typography className={classes.title} color=\"textSecondary\">\n                            <span style={{fontSize: '1.0em',color: '#959393',fontWeight: '900'}}>日時</span>\n                            <div style={{fontSize: '1.3em',color: '#959393',fontWeight: '500'}}>\n                                &nbsp;{props.match.params.month}月{props.match.params.day}日&nbsp;\n                                {time_array_start[0] + \":\" + time_array_start[1]}\n                                〜\n                                {time_array_finish[0] + \":\" + time_array_finish[1]}\n                            </div><hr/>\n                        </Typography>\n                    </CardContent>\n                    <div style={{ textAlign: 'center', marginBottom: 20}}>\n                        <Button size=\"large\" href='/' style={{backgroundColor: '#4DA7F0', color: 'white', fontWeight: '700', width: '80%'}}>\n                            ホームに戻る\n                        </Button>\n                    </div>\n                    </Card>\n                )}\n                {!check && (\n                    <Card className={classes.root} variant=\"outlined\">\n                    <CardContent>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            <span style={{fontSize: '1.2em',color: '#959393',fontWeight: '900'}}>予約を確定しますか？</span>\n                        </Typography>\n                        <Typography className={classes.title}>\n                            <span style={{fontSize: '1.0em',color: '#959393',fontWeight: '900'}}>内容</span>\n                            <div style={{fontSize: '1.3em',color: '#959393',fontWeight: '500'}}>\n                                &nbsp; 【{props.location.state.store}店】 {props.location.state.customer_menu}\n                            </div>\n                            <hr/>\n                        </Typography>\n                        <Typography className={classes.title} color=\"textSecondary\">\n                            <span style={{fontSize: '1.0em',color: '#959393',fontWeight: '900'}}>日時</span>\n                            <div style={{fontSize: '1.3em',color: '#959393',fontWeight: '500'}}>\n                                &nbsp;{props.match.params.month}月{props.match.params.day}日&nbsp;\n                                {time_array_start[0] + \":\" + time_array_start[1]}\n                                〜\n                                {time_array_finish[0] + \":\" + time_array_finish[1]}\n                            </div><hr/>\n                        </Typography>\n                    </CardContent>\n                    <div style={{ textAlign: 'center'}}>\n                        <Button size=\"large\" style={{width: '40%',margin: 10,backgroundColor: '#F1F1F1', color: '#959393', fontWeight: '700'}}>\n                            キャンセル\n                        </Button>\n                        <Button size=\"large\" onClick={handleCheckOk} \n                            style={{width: '40%' ,margin: 10,backgroundColor: '#4DA7F0', color: 'white', fontWeight: '700'}}\n                            disabled={loading || success}\n                        >\n                            確定する\n                        </Button>\n                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                    </div>\n                    </Card>\n                )}\n            </div>\n        </>\n    )\n}\n\nexport default AppointmentConfirm;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/appointments/select_store_fitness_func.js",["430","431"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from 'react-redux';\nimport { selectCustomerHeaders} from '../../slices/customer'\nimport { selectTrainerHeaders} from '../../slices/trainer'\n\nconst SelectStoreFitness = (props) => {\n    console.log(\"SelectStoreFitness\", {props})\n    const customerHeader = useSelector(selectCustomerHeaders);\n    const trainerHeader = useSelector(selectTrainerHeaders);\n    const [customer_menu, setCustomerMenu] = useState([]);\n    const [store, setStore] = useState([]);\n    const [selectCustomerMenu, setSelectCustomerMenu] = useState();\n    const [selectStore, setSelectStore] = useState();\n    const history = useHistory();\n    const [storeCheck, setStoreCheck] = useState(false);\n    const [fitnessCheck, setFitnessCheck] = useState(false);\n\n    useEffect(()=>{\n        const url = `/calendar`\n        var header = null\n        if(customerHeader){\n            header = customerHeader\n        }else if(trainerHeader){\n            header = trainerHeader\n        }\n        axios.get(url, header)\n        .then(function(res) {\n            setCustomerMenu(res.data.fitnesses);\n            setStore(res.data.store);\n        })\n        .catch(function(error) {\n            console.log({error})\n        });\n    },[])\n\n    function handleCustomerMenuChange(e) { \n        setSelectCustomerMenu(e.target.value)\n        setFitnessCheck(true)\n        // console.log({check})\n    }\n    function handleStoreChange(e) {  \n        setSelectStore(e.target.value)\n        setStoreCheck(true)\n        // console.log({check})\n    }\n\n    const onSubmit = (data) => console.log(data);\n    const { handleSubmit } = useForm();\n\n    const stores_box = store.length ?\n    store.map((store,store_index) =>\n        <MenuItem value={store} key={store_index}>{ store.store_name }</MenuItem>\n    ):\n        <MenuItem/>\n\n    const customer_menu_box = customer_menu.length ?\n    customer_menu.map((customer_menu,customer_menu_index) =>\n        <MenuItem value={customer_menu} key={customer_menu_index} >{ customer_menu.name }</MenuItem>\n    ):\n        <MenuItem/>\n\n    return (\n        <>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        <Grid container alignItems=\"center\" justify=\"center\">\n        <Grid item xs={9}>\n            <div className=\"customer_info_tag\">店舗を選択して下さい</div>\n            <FormControl variant=\"outlined\" className=\"select_style\">\n                <InputLabel id=\"demo-store-select-outlined-label\" >店舗</InputLabel>\n                    <Select\n                        labelId=\"demo-store-select-outlined-label\"\n                        id=\"demo-store-select-outlined\"\n                        label=\"store\"\n                        style={{backgroundColor: 'white'}}\n                        onChange={ handleStoreChange }\n                    >\n                    {stores_box}\n                </Select>\n            </FormControl>\n            <div className=\"customer_info_tag\">メニューを選択して下さい</div>\n            <FormControl variant=\"outlined\" className=\"select_style\">\n                <InputLabel id=\"demo-fitness-select-outlined-label\">メニュー</InputLabel>\n                    <Select\n                        labelId=\"demo-fitness-select-outlined-label\"\n                        id=\"demo-fitness-select-outlined\"\n                        label=\"fitness\"\n                        style={{backgroundColor: 'white'}}\n                        onChange = {  handleCustomerMenuChange }\n                    >\n                    {  customer_menu_box }\n                </Select>\n            </FormControl>\n            {storeCheck&&fitnessCheck? (<>\n                <Button \n                    variant=\"contained\" \n                    size='large' \n                    color=\"secondary\"\n                    style={{width: '100%', marginTop: 100}} \n                    onClick = {() => \n                        history.push({\n                            pathname: [`/customer/${props.match.params.customer_id}/calendar_new/customer_menu/${selectCustomerMenu.id}/store/${selectStore.id}`],\n                            state: { store: selectStore.store_name, customer_menu: selectCustomerMenu.name}\n                        })}\n                >\n                    時間を選ぶ\n                </Button>\n            </>):(<>\n                <Button \n                    variant=\"contained\" \n                    size='large' \n                    style={{width: '100%', marginTop: 100}} \n                    disabled\n                >\n                    時間を選ぶ\n                </Button>\n            </>)}\n        </Grid>   \n        </Grid>\n        </form>\n    </>\n    );\n  };\n  \nexport default SelectStoreFitness;\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/home.js",["432","433"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios'\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    display: 'inline-block',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n paper: {\n    padding: 5,\n    textAlign: 'center',\n  },\n});\n\n\n\nfunction ShowApo({apo, apos, setApos}) {\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  async function handleCancelClose(e) {\n      const url = `/appointment/${e.id}`\n      try {\n          await axios.delete(url);\n          const newApos = apos.filter((apo) => {\n              return apo !== e;\n          });\n          setApos(newApos)\n          setOpen(false);\n      } catch (err) {\n          console.log(\"error:\", err.response.data.errors)\n      }\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  return(<>\n      <Paper className=\"border_light apos_paper\">\n      <Grid container spacing={2} style={{height: '80%'}}>\n        <Grid item xs={10}>\n        <div style={{fontWeight: 700, color: '#555555'}}>\n          { apo.date[0] + '/' + apo.date[1] + '/' + apo.date[2] }\n          &nbsp;&nbsp;\n          { apo.start[0] + ':' + apo.start[1] } 〜 \n          { apo.finish[0] + ':' + apo.finish[1] }\n        </div>\n        { apo.menu }のご予約{ apo.id }\n          </Grid>\n          <Grid item xs={2}>\n            <IconButton aria-label=\"display more actions\" edge=\"end\" color=\"inherit\">\n              <MoreIcon onClick={handleClickOpen} />\n            </IconButton>\n          </Grid>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              { apo.date[0] + '年' + apo.date[1] + '月' + apo.date[2] + '日' }<br/>\n              { apo.start[0] + ':' + apo.start[1] } 〜 { apo.finish[0] + ':' + apo.finish[1] }\n              の{ apo.menu }の予約をキャンセルしますか？\n            </DialogTitle>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                戻る\n              </Button>\n              <Button onClick={() => handleCancelClose(apo)} color=\"secondary\" autoFocus>\n                キャンセルする\n              </Button>\n            </DialogActions>\n          </Dialog>\n      </Grid>\n      </Paper>\n  </>);\n}\n\n\nexport default function CustomerHome(props) {\n    const id =  props.props.match.params.id\n    const url = `/customer_page/${id}`\n    const [apos, setApos] = useState([]);\n    const classes = useStyles();\n\n    useEffect(()=>{\n        axios.get(url)\n        .then(function(res) {\n            // setCustomer(res.data.customer);\n            // setRecords(res.data.customer_records);\n            setApos(res.data.appointments);\n        })\n        .catch(function(error) {\n          console.log({error})\n        });\n    },[])\n    \n\n  function SliceApos(){\n    if(apos){\n      if(apos.length > 2){\n        const aposOnComing = apos.slice(0, 2)\n        const nextApos = apos.slice(2)\n        return(\n          <>\n          {aposOnComing.map((apo, index) => <ShowApo key={index} apo={apo} apos={apos} setApos={setApos}/>)}\n          <Accordion style={{width: '95%', marginLeft: 'auto', marginRight: 'auto'}}>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography className={classes.heading}>もっと見る</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography>\n                { nextApos.map((apo, index) => <ShowApo key={index} apo={apo} apos={apos} setApos={setApos}/>) }\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n          </>\n        )\n      }else{\n        return(\n          <>\n            {apos.map((apo, index) => <ShowApo key={index} apo={apo} apos={apos} setApos={setApos}/>)}\n          </>\n        );\n      }\n    }\n  }\n  return (\n      <>\n        { SliceApos() }\n      </>\n  );\n}\n\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_individual_info/customer_interests.jsx",["434","435","436","437","438"],"/* eslint-disable react/prop-types */\nimport React , { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '20%',\n    color: '#555555',\n    backgroundColor: 'white',\n    textAlign: 'center',\n  },\n  checked: {\n    marginRight: theme.spacing(1),\n    backgroundColor: 'silver',\n  },\n  chip: {\n    justifyContent: 'center',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nfunction SetChip({interest, setInterestIDs, interestIDs, clickedInterests, setUpdateInterestsIDs}) {\n    const [value, setValue] = React.useState(false)\n    useEffect(()=>{\n        if (clickedInterests){\n            const index = clickedInterests.findIndex(item => item.name === interest.name)\n            if (index != -1){\n                setValue(true);\n            }\n        }\n    },[])\n\n    function handleValueChange(){\n        // TODO::IDの削除追加\n        if(value){\n            //削除\n            const deletedIDs = interestIDs.filter((ID) => {\n                return ID != interest.id;\n            });\n            setInterestIDs(deletedIDs)\n            if (setUpdateInterestsIDs){\n                // eslint-disable-next-line no-unused-vars\n                setUpdateInterestsIDs((prev) => deletedIDs)\n            }\n        }else{\n            // 追加\n            console.log({interest})\n            console.log({interestIDs})\n            const newIDs =  interestIDs.splice(-1, 0, interest.id);\n            console.log({newIDs})\n            setInterestIDs((prev) => [...prev, ...newIDs])\n            if (setUpdateInterestsIDs){\n                // eslint-disable-next-line no-unused-vars\n                setUpdateInterestsIDs((prev) => interestIDs)\n            }\n        }\n        setValue(!value);\n    }\n    return(\n        <>\n        {\n            value?\n            (<Chip\n                key={interest.id}\n                label={ interest.name }\n                clickable\n                color=\"primary\"\n                onClick={ handleValueChange }\n            />)\n            :\n            (<Chip\n                key={interest.id}\n                label={ interest.name }\n                clickable\n                color=\"primary\"\n                variant=\"outlined\"\n                style={{backgroundColor: 'white'}}\n                onClick={ handleValueChange }\n            />)\n        }\n        </>\n    );\n}\n\nexport default function CustomerInterests(props) {\n    const url = '/customer_info/intarests_new'\n    const [allInterests, setAllInterests] = React.useState([])\n    const classes = useStyles();\n    // マイページから変更する際\n    let interests_array = []\n    if (props.interests){\n        // eslint-disable-next-line no-unused-vars\n        var index = props.interests.map(function( item ) {\n            interests_array.push(item.id)            \n        });\n    }\n    const [interestIDs, setInterestIDs] = React.useState(interests_array)\n\n    useEffect(()=>{\n        axios.get(url)\n        .then(function(res) {\n            setAllInterests(res.data.intarests)\n        })\n        .catch(function(error) {\n            console.log({error})\n        });\n\n        if(props.setCustomerStatus){\n            props.setCustomerStatus((prev) => ({...prev, interests: interestIDs}))\n        }\n     },[interestIDs])\n\n    const select_interests = allInterests.length ?  \n        allInterests.map((interest,index) =>\n        <>\n        {props?.interests? \n            <SetChip key={index} interest={interest} setInterestIDs={setInterestIDs} interestIDs={interestIDs} clickedInterests={props.interests} setUpdateInterestsIDs={props.setUpdateInterestsIDs} />\n            :\n            <SetChip key={index} interest={interest} setInterestIDs={setInterestIDs} interestIDs={interestIDs}/>\n        }\n        </>\n    )\n    : \n        <></>\n\n    return (\n        <>\n        <Grid container alignItems=\"center\" justify=\"center\">\n        <Grid item xs={11}>\n            <div className=\"customer_info_tag\">関心のある分野を選んでください</div>\n            <div className={classes.chip}>\n             { select_interests }\n            </div>\n        </Grid>   \n        </Grid>\n        </>\n    );\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/master_admins/master_admin_top.js",["439","440"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\n\nconst MasterAdminTop = () => {\n    const history = useHistory();\n    const [companies, setCompanies] = useState([]);\n    useEffect(()=>{\n        const url = `/companies`\n\n        axios.get(url)\n        .then(function(res) {\n            setCompanies(res.data);\n        })\n        .catch(function(error) {\n            console.log({error})\n        });\n        \n    },[])\n    console.log(companies)\n\n    const StyledTableCell = withStyles((theme) => ({\n        head: {\n            backgroundColor: theme.palette.common.black,\n            color: theme.palette.common.white,\n        },\n        body: {\n            fontSize: 14,\n        },\n    }))(TableCell);\n    \n    const StyledTableRow = withStyles((theme) => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n        },\n    }))(TableRow);\n\n   \n    console.log(companies)\n    const readCompanies = companies.length ?  \n        companies.map((company , index) =>\n            <StyledTableRow key={ index } >\n                {/* <StyledTableCell align=\"center\">{company[0].id}</StyledTableCell> */}\n                <StyledTableCell align=\"center\">\n                    {/* 会社名をクリックすると会社詳細ページに飛ぶ */}\n                    {/* <Link to={`/company/${company[0].id}`}>  */}\n                            { company[0].name }\n                    {/* </Link> */}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\"> { company[0].address }</StyledTableCell>\n                <StyledTableCell align=\"center\"> { company[0].tel }</StyledTableCell>\n                <StyledTableCell align=\"center\">\n                    { readAdmins(company[1]) }\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                    {/* <Button variant=\"outlined\" color=\"primary\">\n                        <Link to={`/company/${company[0].id}`}>  { company[0].name } </Link>\n                    </Button> */}\n                <Button \n                    variant=\"contained\" \n                    size='large' \n                    color=\"secondary\" \n                    onClick={() => history.push(`/${ company[0].id }/admin/sign_up`)}\n                >\n                   { company[0].name }の管理者を追加\n                </Button>\n\n                </StyledTableCell>\n            </StyledTableRow>\n        )\n    : \n        <></>\n    function readAdmins(admins){\n        return admins.map((admin) =>\n            <>\n                【{ admin.email }】\n            </>\n        );\n    }\n\n    return (\n        <>\n            <TableContainer>\n                <Table aria-label=\"customized table\">\n                <TableHead>\n                    <TableRow>\n                        {/* <StyledTableCell align=\"center\">ID</StyledTableCell> */}\n                        <StyledTableCell align=\"center\">会社名</StyledTableCell>\n                        <StyledTableCell align=\"center\">住所</StyledTableCell>\n                        <StyledTableCell align=\"center\">電話番号</StyledTableCell>\n                        <StyledTableCell align=\"center\">管理者</StyledTableCell>\n                        <StyledTableCell align=\"center\">管理者登録</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    { readCompanies }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            会社を新規発行<br/>\n            <Fab  color=\"secondary\" aria-label=\"add\" href=\"/company/new\"><AddIcon /></Fab>  \n        </>\n    );\n};\n  \nexport default MasterAdminTop;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/customers_session_records.jsx",["441","442"],"/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport axios from 'axios'\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentTrainer, selectTrainerHeaders } from '../../slices/trainer';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { useHistory } from 'react-router-dom';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n}));\n\n\nexport default function SessionRecordList() {\n    const classes = useStyles();\n    const currentTrainer = useSelector(selectCurrentTrainer);\n    const trainerHeaders = useSelector(selectTrainerHeaders);\n    const [thisStoreRecord, setThisStoreRecord] = React.useState([]);\n    const [records, setRecords] = React.useState([]);\n    const [radioStatus, setRadioStatus] = React.useState(\"\");\n    const [currentRecords, setCurrentRecords] = React.useState();\n    const history = useHistory();\n\n    const url = `/trainer/get/customer_records`\n\n    useEffect(()=>{\n\n        axios.get(url, trainerHeaders)\n        .then(function(res) {\n            setRecords(res.data.data);\n        })\n        .catch(function(error) {\n            console.log({error})\n        });\n        \n    },[])\n\n    function handleStoreChange(e) {\n        console.log({e})\n        // setCurrentRecords(e.target.value.data)\n        setThisStoreRecord(e.target.value)\n        if (radioStatus){\n            console.log(\"中身あり！\")\n            if(radioStatus == \"not_finish\"){\n                setCurrentRecords(e.target.value.not_finish_data)\n            }else if(radioStatus == \"finish\"){\n                setCurrentRecords(e.target.value.finish_data)\n            }else if(radioStatus == \"all\"){\n                setCurrentRecords(e.target.value.all_data)\n            }\n        }else{\n            console.log(\"中身なし！\")\n            setCurrentRecords(e.target.value.all_data)\n        }\n    }\n\n    function showDate(time){\n        const date = new Date(`${time}`);\n        return(<>\n            {date.getMonth() + 1}月{date.getDate()}日<br/>\n            {date.getHours()}:{date.getMinutes()}〜\n        </>)\n    }\n    function handleRadioChange(e){\n        if(e.target.value == \"not_finish\"){\n            setCurrentRecords(thisStoreRecord.not_finish_data)\n        }else if(e.target.value == \"finish\"){\n            setCurrentRecords(thisStoreRecord.finish_data)\n        }else if(e.target.value == \"all\"){\n            setCurrentRecords(thisStoreRecord.all_data)\n        }\n        setRadioStatus(e.target.value)\n    }\n    const selectStore = records?  \n       records.map((r, index) =>\n        <MenuItem key={index} value={r} onChange={handleStoreChange}>{r.store.store_name}</MenuItem>\n        )\n    : \n        <MenuItem />\n    \n    function SeeLog(log){\n        console.log({log})\n    }\n    return(\n        <>\n        <FormControl component=\"fieldset\" style={{margin: '2%',padding: 10, width: '90%' , backgroundColor: '#EEEEEE',border: 1, borderColor: '#888888'}}>\n            ステータスで絞り込む<br/>\n            <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" onChange={handleRadioChange}>\n                    &nbsp;\n                    <FormControlLabel value=\"not_finish\" control={<Radio color=\"primary\" style={{backgroundColor: 'white', padding: 0}} />} label=\"未発行\" />&nbsp;\n                    <FormControlLabel value=\"finish\" control={<Radio color=\"primary\" style={{backgroundColor: 'white', padding: 0}}/>} label=\"発行済み\" />&nbsp;\n                    <FormControlLabel value=\"all\" control={<Radio color=\"primary\" style={{backgroundColor: 'white', padding: 0}}/>} label=\"全て\" />\n            </RadioGroup>\n            <br/>\n            <FormControl className={classes.margin}>\n                {/* <InputLabel id=\"demo-customized-select-label\">店舗</InputLabel> */}\n                 店舗を選択する<br/>\n                <Select\n                    labelId=\"demo-customized-select-label\"\n                    id=\"demo-customized-select\"\n                    onChange={handleStoreChange}\n                    input={<BootstrapInput />}\n                >\n                {selectStore}\n                </Select>\n            </FormControl>\n        </FormControl>\n\n        <div style={{margin: 5}}>\n        <Paper variant=\"outlined\">\n            <Grid container spacing={3} style={{fontWeight: 500}}>\n                <Grid item xs={3} >\n                    <span style={{marginLeft: 5}}>顧客名</span>\n                </Grid>\n                <Grid item xs={3}>\n                    日時\n                </Grid>\n                <Grid item xs={3}>\n                    メニュー\n                </Grid>\n                <Grid item xs={3}>\n                </Grid>\n            </Grid>\n        </Paper>\n        {currentRecords? (<>\n            {currentRecords.map((record, index) => (\n                <Paper variant=\"outlined\" key={index} style={{ marginTop: 10, marginBottom: 10}}>\n                    <Grid container spacing={3} style={{fontWeight: 500,overflowWrap: 'break-word'}}>\n                        <Grid item xs={3} style={{marginTop: 'auto', marginBottom: 'auto'}}>\n                                <span style={{fontSize: 15, marginLeft: 10}}>\n                                    {record.first_name_kanji}{record.last_name_kanji}\n                                </span>\n                        </Grid>\n                        <Grid item xs={3} style={{marginTop: 'auto',marginBottom: 'auto'}}>\n                            <span style={{fontSize: 12}}>{ showDate(record.appointment_time) }</span>\n                        </Grid>\n                        <Grid item xs={3} style={{marginTop: 'auto',marginBottom: 'auto'}}>\n                             <span style={{fontSize: 12}}>{record.fitness_name}</span>\n                        </Grid>\n                        {record.finish==1?(\n                            <Grid item xs={3} style={{paddingLeft: 0, marginTop: 'auto',marginBottom: 'auto'}}>\n                                <div className=\"box_show\" onClick = {() => history.push(`/record/${record.id}`)}>\n                                    詳細\n                                </div>\n                            </Grid>\n                        ) : (\n                            <Grid item xs={3} style={{paddingLeft: 0, marginTop: 'auto',marginBottom: 'auto', width: '100%'}}>\n                                <div className=\"box_2\" \n                                    onClick = {() => \n                                    history.push({\n                                        pathname: [`/trainers/${currentTrainer.id}/fitness/${record.fitness_id}`],\n                                        data: record\n                                    })}\n                                >\n                                    カルテを発行\n                                </div>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Paper>\n            ))}\n        </>) : (<>\n            <div className=\"info_box\">\n                ※ 店舗を選択してください\n            </div>\n        </>)}\n        </div>\n        </>\n    )\n}\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/record/create_record.jsx",["443","444","445","446","447"],"/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios'\nimport { selectTrainerHeaders } from '../../../slices/trainer';\nimport { useSelector } from 'react-redux';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    // display: 'flex',\n    // alignItems: 'center',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: '#4DA7F0',\n    '&:hover': {\n      backgroundColor: '#4DA7F0',\n    },\n  },\n  buttonProgress: {\n    color: '#4DA7F0',\n    display: 'block',\n    top: '50%',\n    left: '50%',\n    marginTop: 32,\n    textAlign: 'center',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n}));\n\nfunction CheckBoxChip({data, setSelectMenues, selectMenues}){\n    function handleChange(e){\n        // TODO\n        if(e.target.checked){\n            //追加\n            selectMenues.push(data);\n            setSelectMenues((prev)=> selectMenues)\n        }else{\n            //削除\n            const deletedDatas = selectMenues.filter((menu) => {\n                return menu.id != data.id;\n            });\n            setSelectMenues((prev) =>  deletedDatas)\n        }\n    }\n    return(\n        <FormControlLabel\n            control={<Checkbox onChange={handleChange} name=\"gilad\" />}\n            label={data.name}\n        />\n    )\n}\n\n\nexport default function TrainerCreateRecord(props) {\n    const trainerHeaders = useSelector(selectTrainerHeaders);\n    const [fitnessData, setFitnessData] = React.useState([]);\n    const [selectMenues, setSelectMenues] = React.useState([]);\n    const classes = useStyles();\n    const history = useHistory();\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n    const url = `/get/res_second/fitness/${props.match.params.fitness_id}`\n\n    useEffect(()=>{\n        if (!loading) {\n            setSuccess(false);\n            setLoading(true);\n        }\n        axios.get(url, trainerHeaders)\n        .then(function(res) {\n            setSuccess(true);\n            setLoading(false);\n            setFitnessData(res.data.data)\n        })\n        .catch(function(error) {\n            setLoading(false);\n            console.log({error})\n        });\n\n    },[])\n\n    \n\n    return (<>\n        <div className={classes.root}>\n            <Paper variant=\"outlined\" style={{padding: 5, margin: 10, textAlign: 'center'}}>\n                カルテを発行する\n            </Paper>\n           <Paper variant=\"outlined\"style={{padding: 20, margin: 10}}>\n            <span className=\"karute_text\">内容を選んでください</span>\n             {loading && <CircularProgress size={40} className={classes.buttonProgress} />}\n            {fitnessData.map((data, index) => (\n                <Accordion key={index} style={{marginTop: 5}}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                        style={{backgroundColor: '#4DA7F0'}}\n                    >\n                    <Typography className={classes.heading} style={{color: 'white', fontWeight: 600}}>\n                        {data.second.name}\n                    </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                    <Typography>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormGroup>\n                            {data.third.map((d, dindex) => (<>\n                                <CheckBoxChip key={dindex} data={d} setSelectMenues={setSelectMenues} selectMenues={selectMenues}/>\n                            </>))}\n                                </FormGroup>\n                            </FormControl>\n                        </Typography>\n                    </AccordionDetails>\n                </Accordion>\n            ))}\n            <div style={{textAlign: 'right', marginLeft: 'auto'}}>\n                <Button variant=\"contained\" color=\"primary\" \n                    style={{marginTop: 20 , color: 'white', fontWeight: '500', width: '100%',marginLeft: 'auto', marginRight: 'auto'}}\n                    onClick = {() => \n                        history.push({\n                            pathname: [`/trainers/set/details`],\n                            record: props.location.data,\n                            data: selectMenues\n                    })}\n                >\n                    次へ\n                </Button>\n            </div>\n            </Paper>\n        </div>\n    </>)\n}\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/record/record_show.jsx",["448","449"],"/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport axios from 'axios'\nimport { selectTrainerHeaders } from '../../../slices/trainer';\nimport { useSelector } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nexport default function ShowRecord(props) {\n    console.log({props})\n    const record_id = props.match.params.id\n    const history = useHistory();\n    const trainerHeaders = useSelector(selectTrainerHeaders);\n    const url = `/show/record/${record_id}`\n    const [customer, setCustomer] = React.useState();\n    const [apo, setApo] = React.useState();\n    // const [record, setRecord] = React.useState();\n    const [recordMenues, setRecordMenues] = React.useState([]);\n    const [open, setOpen] = React.useState(false);\n    const message = \"\"\n    function showDate(time){\n        const date = new Date(`${time}`);\n        return(<>\n            {date.getMonth() + 1}月{date.getDate()}日<br/>\n            {date.getHours()}:{date.getMinutes()}〜\n        </>)\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    useEffect(()=>{\n\n        axios.get(url, trainerHeaders)\n        .then(function(res) {\n            console.log({res})\n            setCustomer(res.data.customer)\n            setApo(res.data.apo)\n            // setRecord(res.data.record)\n            setRecordMenues(res.data.records_menues)\n        })\n        .catch(function(error) {\n            console.log({error})\n        });\n        \n    },[])\n\n    function handleDelete(){\n        const delete_url =  `/delete/record/${record_id}`\n        axios.delete(delete_url, trainerHeaders)\n        .then(res => {         \n            console.log(res.data.message)\n            setOpen(false);\n            history.push(`/trainers/customer_session_records`);   \n        })\n        .catch(function (response) {\n            console.log(\"error\", {response})\n        })\n    }\n    return(<>  \n        <div>\n           <Paper variant=\"outlined\"style={{padding: 10, margin: 5}}>\n\n            <Paper variant=\"outlined\" style={{padding: 5,backgroundColor: '#b2d2f8',  margin: 0, textAlign: 'left', fontSize: '0.7em'}}>\n                <Grid container style={{fontWeight: 500}}>\n                    <Grid item xs={4} >\n                        顧客名\n                    </Grid>\n                    <Grid item xs={4}>\n                        日時\n                    </Grid>\n                    <Grid item xs={4}>\n                        メニュー\n                    </Grid>\n                </Grid>\n            </Paper>\n\n            <Paper variant=\"outlined\" style={{ marginTop: 10, marginBottom: 10, paddingLeft: 5}}>\n                <Grid container  style={{fontWeight: 500,overflowWrap: 'break-word'}}>\n                    <Grid item xs={4} style={{marginTop: 'auto', marginBottom: 'auto'}}>\n                            {customer?(<>{customer.first_name_kanji}{customer.last_name_kanji}様</>):(<></>)}\n                    </Grid>\n                    <Grid item xs={4} style={{marginTop: 'auto'}}>\n                        {apo?(<>{ showDate(apo.appointment_time) }</>):(<></>)}\n                    </Grid>\n                    <Grid item xs={4} style={{marginTop: 'auto',marginBottom: 'auto'}}>\n                        {apo?(<>{apo.fitness_name}</>):(<></>)}\n                    </Grid>\n                </Grid>\n            </Paper>\n\n            <Paper variant=\"outlined\" style={{padding: 5,backgroundColor: '#b2d2f8',  margin: 0, textAlign: 'left', fontSize: '0.7em'}}>\n                <Grid container style={{fontWeight: 500}}>\n                    <Grid item xs={5} >\n                        内容\n                    </Grid>\n                    <Grid item xs={3}>\n                        カテゴリー\n                    </Grid>\n                    <Grid item xs={2}>\n                        総回数\n                    </Grid>\n                    <Grid item xs={2}>\n                        重量\n                    </Grid>\n                </Grid>\n            </Paper>\n            {recordMenues?(<>\n                {recordMenues.map((menu, index) => (<>\n                  <Grid container key={index} style={{fontWeight: 500, marginBottom: 10, marginTop: 3, fontSize: 12}}>\n                    <Grid item xs={5} style={{justifyContent: 'center'}}>\n                        {menu.fitness_third_name}\n                    </Grid>\n                    <Grid item xs={3}>\n                        <span style={{fontSize: 10}}>【{menu.fitness_name}】</span>\n                    </Grid>\n                    <Grid item xs={2}>\n                        {menu.time}回\n                    </Grid>\n                    <Grid item xs={2}>\n                        {menu.weight}Kg\n                    </Grid>\n                </Grid>\n                    <hr/>\n                </>))}\n            </>):(<></>)}\n\n            <Paper variant=\"outlined\" style={{padding: 5,backgroundColor: '#b2d2f8',  margin: 0, textAlign: 'left', fontSize: '0.7em', fontWeight: 500}}>\n                コメント\n            </Paper>\n\n            <TextField\n                id=\"outlined-multiline-static\"\n                multiline\n                disabled\n                style={{width: '100%', color: '#4DA7F0', marginTop: 10}}\n                rows={4}\n                defaultValue={message}\n                variant=\"outlined\"\n            />\n            <Grid container spacing={3} style={{paddingTop: 10, marginTop: 50}}>\n                <Grid item xs={6}>\n                    <div className=\"button_cancel\" onClick = {() => history.push(`/trainers/customer_session_records`)}>\n                        一覧に戻る\n                    </div>\n                </Grid>\n                <Grid item xs={6}>\n                    <div className=\"button_submit\" style={{backgroundColor: 'red'}} onClick={handleClickOpen}>\n                        削除する\n                    </div>\n                </Grid>\n            </Grid>\n            </Paper>\n\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogContent style={{height: 'auto'}}>\n            <div style={{fontSize: 17, fontWeight: 600, textAlign: 'center', marginTop: 30, marginBottom: 20 }}>カルテを削除しますか？</div>\n            <DialogContentText id=\"alert-dialog-description\">\n                削除したカルテは復元することができません。\n                このままカルテの削除に進む場合は「削除」をクリックしてください\n            </DialogContentText>\n            <hr/>\n            <Grid container spacing={3} style={{paddingTop: 10}}>\n                <Grid item xs={6}>\n                    <div className=\"button_cancel\" onClick={handleClose}>\n                        戻る\n                    </div>\n                </Grid>\n                <Grid item xs={6}>\n                    <div className=\"button_submit\" onClick={handleDelete} style={{backgroundColor: 'red'}}>\n                        削除\n                    </div>\n                </Grid>\n            </Grid>\n            </DialogContent>\n        </Dialog>\n        </div>\n    </>)\n}\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/slices/customer_record.tsx",[],"/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/confirmation.tsx",["450","451","452","453","454","455","456","457","458","459","460"],"/* eslint-disable react/prop-types */\nimport React , { useEffect, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { Controller, useForm, SubmitHandler } from 'react-hook-form';\nimport axios, { AxiosError } from 'axios';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { BrowserRouter as Router, Route, Switch, useParams, useHistory, useLocation, } from 'react-router-dom';\nimport {\n  ISignInFormValues,\n  ISignInSuccessResponse,\n  IErrorResponse,\n  IServerMessages,\n} from '../../interfaces';\nimport { setHeaders, setCurrentCustomer } from '../../slices/customer';\nimport Paper from '@material-ui/core/Paper';\nimport errorMessages from '../../constants/errorMessages.json';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Confirmation(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { control, errors, handleSubmit } = useForm<ISignInFormValues>();\n    const [serverMessages, setServerMessages] = useState<IServerMessages>();\n\n    const onSubmit = (data: SubmitHandler<ISignInFormValues>) => {\n        const confirmation_response = props.location.search\n        const confirmations = confirmation_response.split('&');\n        const confirmation_token = confirmations[1].split('=');\n        const confirmation_token_values = confirmation_token[1]\n        const confirm_url = `/customer_confirm_ok`\n        const sign_in_url = `/v1/customer_auth/sign_in`\n        axios.post(confirm_url, {token: confirmation_token_values})\n        .then((res) => {\n            axios.post<ISignInSuccessResponse>(sign_in_url, data)\n            .then((res) => {\n                console.log({res})\n                dispatch(setCurrentCustomer(res.data.data));\n                dispatch(setHeaders(res.headers));\n                history.push('/customer_info/new');\n            })\n            .catch((err: AxiosError<IErrorResponse>) => {\n                setServerMessages({\n                severity: 'error',\n                alerts: err.response?.data.errors || [],\n                });\n            });\n        })\n        .catch((err: AxiosError<IErrorResponse>) => {\n            console.log({err})\n            setServerMessages({\n            severity: 'error',\n            alerts: err.response?.data.errors || [],\n            });\n        });\n  };\n\n  return (\n    <>\n    <Box my={5}>\n      <Container maxWidth=\"xs\">\n        <Paper>\n        <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n          <Box p={2}>\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>\n              認証を完了させる\n            </Typography>\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n              <Box mb={2}>\n                <Controller\n                  name=\"email\"\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: {\n                      value: true,\n                      message:\n                        errorMessages.email.text + errorMessages.required,\n                    },\n                    maxLength: {\n                      value: errorMessages.email.maxLength,\n                      message:\n                        errorMessages.email.text +\n                        errorMessages.is +\n                        String(errorMessages.email.maxLength) +\n                        errorMessages.maxLength,\n                    },\n                  }}\n                  render={({ ref, value, onChange }, { invalid }) => (\n                    <TextField\n                      variant=\"outlined\"\n                      label=\"メールアドレス\"\n                      error={invalid}\n                      fullWidth\n                      inputRef={ref}\n                      value={value as string}\n                      onChange={(e) => onChange(e.target.value)}\n                    />\n                  )}\n                />\n              </Box>\n              <Box mb={2}>\n                <Controller\n                  name=\"password\"\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: {\n                      value: true,\n                      message:\n                        errorMessages.password.text + errorMessages.required,\n                    },\n                    maxLength: {\n                      value: errorMessages.password.maxLength,\n                      message:\n                        errorMessages.password.text +\n                        errorMessages.is +\n                        String(errorMessages.password.maxLength) +\n                        errorMessages.maxLength,\n                    },\n                  }}\n                  render={({ ref, value, onChange }, { invalid }) => (\n                    <TextField\n                      type=\"password\"\n                      variant=\"outlined\"\n                      label=\"パスワード\"\n                      error={invalid}\n                      fullWidth\n                      inputRef={ref}\n                      value={value as string}\n                      onChange={(e) => onChange(e.target.value)}\n                    />\n                  )}\n                />\n              </Box>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    // onClick={onSubmit}\n                    >\n                    認証を完了する\n                </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"/customer/sign_up\" variant=\"body2\">\n                    {/* まだアカウントをお持ちでない方はこちらへ */}\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </Box>\n        </div>\n        </Paper>\n      </Container>\n    </Box>\n    </>\n  );\n}\n\nexport default Confirmation;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/record/record_confirm.jsx",["461","462","463"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport axios from 'axios'\nimport { selectTrainerHeaders } from '../../../slices/trainer';\nimport { useSelector } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  // ロード\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: '#4DA7F0',\n    '&:hover': {\n      backgroundColor: '#4DA7F0',\n    },\n  },\n  buttonProgress: {\n    color: '#4DA7F0',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport default function RecordConfirm(props) {\n    console.log({props})\n    const history = useHistory();\n    const record = props.location.record\n    const data = props.location.data\n    const message = props.location.message\n    const classes = useStyles();\n    const trainerHeaders = useSelector(selectTrainerHeaders);\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n\n    function showDate(time){\n        const date = new Date(`${time}`);\n        return(<>\n            {date.getMonth() + 1}月{date.getDate()}日<br/>\n            {date.getHours()}:{date.getMinutes()}〜\n        </>)\n    }\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function handleSubmit(){\n        if (!loading) {\n            setSuccess(false);\n            setLoading(true);\n        }\n       const url = `/create/record/session_menues/appointment/${record.id}`\n        axios.post( url, \n            {customer_record_session_menu: {\n                apo: record,\n                data: data,\n                message: message,\n            }\n        }, trainerHeaders)\n        .then(function (response) {\n            setSuccess(true);\n            setLoading(false);\n            console.log({response})\n            history.push(`/`);\n        })\n        .catch(function (response) {\n            setLoading(false);\n            console.log(\"error\", {response})\n        })\n    }\n    return(<>  \n        <div>\n            <Paper variant=\"outlined\" style={{padding: 5, margin: 10, textAlign: 'center'}}>\n                内容を確認してください\n            </Paper>\n           <Paper variant=\"outlined\"style={{padding: 10, margin: 5}}>\n\n            <Paper variant=\"outlined\" style={{padding: 5,backgroundColor: '#b2d2f8',  margin: 0, textAlign: 'left', fontSize: '0.7em'}}>\n                <Grid container style={{fontWeight: 500}}>\n                    <Grid item xs={4} >\n                        顧客名\n                    </Grid>\n                    <Grid item xs={4}>\n                        日時\n                    </Grid>\n                    <Grid item xs={4}>\n                        メニュー\n                    </Grid>\n                </Grid>\n            </Paper>\n\n            <Paper variant=\"outlined\" style={{ marginTop: 10, marginBottom: 10, paddingLeft: 5}}>\n                <Grid container  style={{fontWeight: 500,overflowWrap: 'break-word'}}>\n                    <Grid item xs={4} style={{marginTop: 'auto', marginBottom: 'auto'}}>\n                            {record.first_name_kanji}{record.last_name_kanji}様\n                    </Grid>\n                    <Grid item xs={4} style={{marginTop: 'auto'}}>\n                        { showDate(record.appointment_time) }\n                    </Grid>\n                    <Grid item xs={4} style={{marginTop: 'auto',marginBottom: 'auto'}}>\n                            {record.fitness_name}\n                    </Grid>\n                </Grid>\n            </Paper>\n\n            <Paper variant=\"outlined\" style={{padding: 5,backgroundColor: '#b2d2f8',  margin: 0, textAlign: 'left', fontSize: '0.7em'}}>\n                <Grid container style={{fontWeight: 500}}>\n                    <Grid item xs={5} >\n                        内容\n                    </Grid>\n                    <Grid item xs={3}>\n                        カテゴリー\n                    </Grid>\n                    <Grid item xs={2}>\n                        総回数\n                    </Grid>\n                    <Grid item xs={2}>\n                        重量\n                    </Grid>\n                </Grid>\n            </Paper>\n            {data?(<>\n                {data.map((d, index) => (<>\n                  <Grid key={index} container style={{fontWeight: 500,marginBottom: 10, marginTop: 3}}>\n                    <Grid item xs={5} >\n                        {d.data.name}\n                    </Grid>\n                    <Grid item xs={3}>\n                        {d.data.fitness_second_name}\n                    </Grid>\n                    <Grid item xs={2}>\n                    {d.data.set? (<>\n                        {d.time}回\n                    </>):(<></>)}\n                    </Grid>\n                    <Grid item xs={2}>\n                    {d.data.weight? (<>\n                        {d.weight}kg\n                    </>):(<></>)}\n                    </Grid>\n                </Grid>\n                    <hr/>\n                </>))}\n            </>):(<></>)}\n\n            <Paper variant=\"outlined\" style={{padding: 5,backgroundColor: '#b2d2f8',  margin: 0, textAlign: 'left', fontSize: '0.7em', fontWeight: 500}}>\n                コメント\n            </Paper>\n\n            <TextField\n                id=\"outlined-multiline-static\"\n                label=\"コメント\"\n                multiline\n                disabled\n                style={{width: '100%', color: '#4DA7F0', marginTop: 10}}\n                rows={4}\n                defaultValue={message}\n                variant=\"outlined\"\n            />\n            <Button style={{margin: 5, backgroundColor: '#4DA7F0', color: 'white', fontWeight: '500', width: '100%'}}\n                    onClick={handleClickOpen}\n            >\n                カルテを発行する\n            </Button>\n            </Paper>\n\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogContent style={{height: 'auto'}}>\n            <div style={{fontSize: 17, fontWeight: 600, textAlign: 'center', marginTop: 30, marginBottom: 20 }}>内容に間違いはありませんか？</div>\n            <DialogContentText id=\"alert-dialog-description\">\n                カルテがお客様に送信されます。<br/>\n                内容に間違いがなければ発行を完了させてください。\n            </DialogContentText>\n            <hr/>\n            <Grid container spacing={3} style={{paddingTop: 10}}>\n                <Grid item xs={6}>\n                    <div className=\"button_cancel\" onClick={handleClose}>\n                        戻る\n                    </div>\n                </Grid>\n                <Grid item xs={6}>\n                {loading || success? (\n                        <div \n                            className=\"button_submit\"\n                            onClick={handleSubmit}\n                            style={{backgroundColor: 'silver'}}\n                        >\n                            発行する\n                        </div>\n                    ):(\n                        <div \n                            className=\"button_submit\"\n                            onClick={handleSubmit}\n                        >\n                            発行する\n                        </div>\n                    )}\n                    {loading && <CircularProgress size={50} className={classes.buttonProgress} />}\n                </Grid>\n            </Grid>\n            </DialogContent>\n        </Dialog>\n        </div>\n    </>)\n}\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/slices/admin.ts",[],"/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/sign_up.js",["464"],"/* eslint-disable react/prop-types */\nimport React , { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fab from '@material-ui/core/Fab';\nimport CheckIcon from '@material-ui/icons/Check';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Room\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: '#4DA7F0',\n    '&:hover': {\n      backgroundColor: '#4DA7F0',\n    },\n  },\n  submitButtonSuccess: {\n    backgroundColor: 'silver',\n    '&:hover': {\n      backgroundColor: 'silver',\n    },\n  },\n  fabProgress: {\n    color: '#4DA7F0',\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: '#4DA7F0',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nfunction SignUp() {\n    const [companyId, setCompanyId] = React.useState();\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"ka.baseball1997@gmail.com\");\n    const [password, setPassword] = useState(\"gonza1026\");\n    const [password_confirmation, setPasswordConfirmation] = useState(\"gonza1026\");\n    const history = useHistory();\n    const { handleSubmit } = useForm();\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const timer = React.useRef();\n    const [open, setOpen] = React.useState(false);\n    const [name, setName] = useState({first_name_kanji: \"\", last_name_kanji: \"\", first_name_kana: \"\",last_name_kana: \"\"});\n\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n\n    React.useEffect(() => {\n      axios.get('/customer/get_company_id')\n      .then(function(res) {\n          setCompanyId(res.data.id)\n      })\n      return () => {\n        clearTimeout(timer.current);\n      };\n    }, []);\n\n    function onSubmit() {\n      const url = `/companies/${ companyId }/v1/customer_auth`\n      if (!loading) {\n        setSuccess(false);\n        setLoading(true);\n      }\n      axios.post( url, {\n          first_name_kana: name.first_name_kana,\n          last_name_kana: name.last_name_kana,\n          first_name_kanji: name.first_name_kanji,\n          last_name_kanji: name.last_name_kanji,\n          email: email,\n          password: password,\n          password_confirmation: password_confirmation\n      })\n      .then(function (response) {\n          setSuccess(true);\n          setLoading(false);\n          setOpen(true);\n          console.log(response.data.data)\n          history.push(`/`)\n      }).catch(function (response) {\n          setLoading(false);\n          console.log({response})\n      })\n    }\n    const handleEMailChange = (e) => {\n        setEmail(e.target.value);\n    };\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    };\n    const handlePasswordConfirmationChange = (e) => {\n        setPasswordConfirmation(e.target.value);\n    };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <div className={classes.wrapper}>\n          <Fab\n            aria-label=\"save\"\n            color=\"primary\"\n            className={buttonClassname}\n          >\n            {success ? <CheckIcon /> : <LockOutlinedIcon/>}\n          </Fab>\n          {loading && <CircularProgress size={68} className={classes.fabProgress} />}\n        </div>\n        <Typography component=\"h1\" variant=\"h5\">\n          新規登録\n        </Typography>\n        {password && password_confirmation && password != password_confirmation?(\n            <span style={{color: 'red'}}>※パスワードと確認用のパスワードが異なります</span>\n          ):<></>\n        }\n        <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\n        \n          <Grid container spacing={2}>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"firstnamekanji\"\n                onChange={(e) => setName((prev) => ({...prev, first_name_kanji: e.target.value}))}\n                label=\"姓\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"lastNamekanji\"\n                label=\"名\"\n                onChange={(e) => setName((prev) => ({...prev, last_name_kanji: e.target.value}))}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"firstnamekana\"\n                onChange={(e) => setName((prev) => ({...prev, first_name_kana: e.target.value}))}\n                label=\"せい(かな)\"\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"lastName\"\n                label=\"めい(かな)\"\n                onChange={(e) => setName((prev) => ({...prev, last_name_kana: e.target.value}))}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"email\"\n                label=\"メールアドレスを入力してください\"\n                value={email}\n                name=\"email\"\n                onChange={ handleEMailChange }\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"password\"\n                label=\"パスワードを入力してください\"\n                value={password}\n                type=\"password\"\n                id=\"password\"\n                onChange={handlePasswordChange}\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"password\"\n                label=\"再度パスワードを入力してください\"\n                value={password_confirmation}\n                type=\"password\"\n                id=\"password\"\n                onChange={handlePasswordConfirmationChange}\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n          </Grid>\n          {name.first_name_kanji && name.last_name_kanji  && name.first_name_kana  && name.last_name_kana && \n            email && password && password_confirmation &&\n            password == password_confirmation? (<>\n            <div className={classes.wrapper}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n                className={buttonClassname}\n                disabled={loading || success}\n              >\n                新規登録する\n              </Button>\n              {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </div>\n          </>):(<>\n          <div className={classes.wrapper}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              fullWidth\n              className={buttonClassname}\n              disabled\n            >\n              新規登録する\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          </div>\n          </>)}\n\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/customer/log_in\" variant=\"body2\">\n                すでにアカウントをお持ちの方はこちらへ\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        style={{textAlign: 'center'}}\n      ><br/>\n      <Fab\n        aria-label=\"save\"\n        color=\"primary\"\n        className={buttonClassname}\n        style={{ margin: '0 auto'}}\n        >\n          <CheckIcon/>\n        </Fab>\n        <DialogTitle id=\"alert-dialog-title\">\n        認証メールを送信しました！\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            ご登録されたメールアドレス宛に認証メールを送信しました。<br/>\n            添付されているリンクから、認証を完了させてください。\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            閉じる\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n\nexport default SignUp;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_individual_info/customer_individual_info.jsx",["465"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CustomerConditions from './customer_condition';\nimport CustomerJobs from './customer_jobs';\nimport CustomerInterests from  './customer_interests';\nimport { useHistory } from 'react-router-dom';\nimport {selectCustomerHeaders} from '../../../slices/customer'\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios'\nimport { setCurrentCustomerInfo, setCurrentCustomerInterests} from '../../../slices/customer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n    backgroundColor: 'silver',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['身長・体重', 'ご職業', '趣味'];\n}\n\nfunction getStepContent(step, setCustomerStatus) {\n  switch (step) {\n    case 0:\n        return <CustomerConditions setCustomerStatus={setCustomerStatus}/>;\n    case 1:\n      return <CustomerJobs setCustomerStatus={setCustomerStatus}/>;\n    case 2:\n      return <CustomerInterests setCustomerStatus={setCustomerStatus}/>;\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function CreateCustomerIndividualInfo() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState(new Set());\n  const steps = getSteps();\n  const dispatch = useDispatch();\n  const customerHeaders = useSelector(selectCustomerHeaders);\n  const [customerStatus, setCustomerStatus] = React.useState({condition: {weight: null, height: null}, jobs: {}, interests: []});\n\n  const totalSteps = () => {\n    return getSteps().length;\n  };\n\n  const completedSteps = () => {\n    return completed.size;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const handleNext = () => {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? \n          steps.findIndex((step, i) => !completed.has(i))\n        : activeStep + 1;\n\n    setActiveStep(newActiveStep);\n  };\n\n\n  const handleComplete = () => {\n    const newCompleted = new Set(completed);\n    newCompleted.add(activeStep);\n    setCompleted(newCompleted);\n    if (completed.size !== totalSteps()) {\n      handleNext();\n    }\n    if (completedSteps() === totalSteps() - 1){\n      const url = `/customer_individual_infos`\n      axios.put(url, customerStatus, customerHeaders)\n      .then(function (response) {\n        console.log(\"success\", {response})\n        dispatch(setCurrentCustomerInfo(response.data.data));\n        dispatch(setCurrentCustomerInterests(response.data.interests));\n        history.push('/');\n      }).catch(function (response) {\n        console.log(\"error\", {response})\n      })\n    }\n  };\n\n  function isStepComplete(step) {\n    return completed.has(step);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const buttonProps = {};\n          return (\n            <Step key={label} {...stepProps}>\n              <StepButton\n                completed={isStepComplete(index)}\n                {...buttonProps}\n              >\n                {/* {label} */}\n              </StepButton>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {allStepsCompleted() ? (\n          <div>\n            <Typography className={classes.instructions}>\n                {/* <Evaluation /> */}\n                ご回答ありがとうございました！\n            </Typography>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep, setCustomerStatus)}</Typography>\n            <div style={{textAlign: 'center'}}>\n\n              {activeStep !== steps.length &&\n                (completed.has(activeStep) ? (\n                  <Typography variant=\"caption\" className={classes.completed}>\n                    ステップ {activeStep + 1} 完了！\n                  </Typography>\n                ) : (\n                   <Button variant=\"contained\" style={{width: '80%'}} color=\"primary\" onClick={handleComplete}>\n                    {completedSteps() === totalSteps() - 1 ? '完了する' : '次へ進む'}\n                  </Button>\n                ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/root.js",["466","467","468","469","470"],"/* eslint-disable react/prop-types */\nimport React  from 'react';\nimport { useSelector } from 'react-redux';\nimport Container from '@material-ui/core/Container';\nimport { selectCurrentAdmin } from '../slices/admin';\nimport { selectCurrentTrainer} from '../slices/trainer';\nimport { selectCurrentCustomer, selectCustomerHeaders, customerRemove, selectCurrentCustomerStatus} from '../slices/customer';\nimport { setCustomerRecords, customerRecordRemove, getCustomerRecords } from '../slices/customer_record';\nimport RoomPlusBox from './customers/room_plus'\nimport ShiftNew  from './trainers/shifts/shift_new';\nimport Evaluation from './customers/evaluation'\n\nexport default function Root() {\n  const currentAdmin = useSelector(selectCurrentAdmin);\n  const currentTrainer = useSelector(selectCurrentTrainer);\n  const currentCustomer = useSelector(selectCurrentCustomer);\n  const customerRecords = useSelector(getCustomerRecords);\n  const customerStatus = useSelector(selectCurrentCustomerStatus);\n\n  console.log({customerStatus})\n  const today = new Date()\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {currentTrainer? (\n        <ShiftNew year={today.getFullYear()} month={today.getMonth()} />\n      ):(<></>)}\n      {/* ルームプラスに入っているお客様 */}\n      {customerStatus?.room_plus? (\n        <RoomPlusBox/>\n      ):(<></>)}\n\n      {currentCustomer? (\n        <>\n        {customerRecords? (\n          <Evaluation/>\n        ):(<></>)}\n        </>\n      ):(<></>)}\n\n\n         {currentAdmin?.id ? (\n              <div>企業ID:{currentAdmin.company_id}</div>\n            ) : (\n              <>\n              </>\n            )}\n    </Container>\n  );\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/check_trainer_menues.jsx",["471","472"],"/* eslint-disable react/prop-types */\nimport React  from 'react';\nimport Chip from '@material-ui/core/Chip';\n\nfunction CheckMenu(props){\n    const [value, setValue] = React.useState(false) \n\n    function handleValueChange(){\n        if(value){\n            //削除\n            const deletedIDs = props.trainerMenues.filter((m) => {\n                return m.name != props.menu.name;\n            });\n            props.setTrainerMenues(deletedIDs)\n        }else{\n            // 追加\n            const newIDs =  props.trainerMenues.splice(-1, 0, props.menu);\n            props.setTrainerMenues((prev) => [...prev, ...newIDs])\n        }\n        setValue(!value);\n    }\n    return(\n        <>\n        {\n            value?\n            (<Chip\n                key={props.menu.id}\n                label={ props.menu.name }\n                clickable\n                color=\"primary\"\n                onClick={ handleValueChange }\n                style={{margin: 8}}\n            />)\n            :\n            (<Chip\n                key={props.menu.id}\n                label={ props.menu.name }\n                clickable\n                color=\"primary\"\n                variant=\"outlined\"\n                style={{backgroundColor: 'white',margin: 8}}\n                onClick={ handleValueChange }\n            />)\n        }\n        </>\n    );\n}\n\nexport default function CheckTrainerMenues(props){\n    return(\n        <>\n          {props.allFitnesses.map((menu, index) => (\n                <>\n                    <CheckMenu menu={menu} key={index} trainerMenues={props.trainerMenues} setTrainerMenues={props.setTrainerMenues}/>\n                </>\n            ))}\n        </>\n    )\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_info/create_customer_info.jsx",["473","474"],"/* eslint-disable react/prop-types */\nimport React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport BirthDay from './customer_birthday';\nimport Address from './customer_address';\nimport { useHistory } from 'react-router-dom';\nimport { selectCustomerHeaders} from '../../../slices/customer'\nimport { setCurrentCustomerInfo} from '../../../slices/customer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n    backgroundColor: 'silver',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['性別を選択', '生年月日を選択', '住所を入力', 'ご連絡先'];\n}\n\nfunction getStepContent(step, setCustomerInfo, setButton) {\n  switch (step) {\n    case 0:\n      return <Gender setCustomerInfo={setCustomerInfo} setButton={setButton}/>;\n    case 1:\n      return <BirthDay setCustomerInfo={setCustomerInfo} setButton={setButton}/>;\n    case 2:\n      return <Address setCustomerInfo={setCustomerInfo} setButton={setButton}/>;\n    case 3:\n      return <PhoneNumber setCustomerInfo={setCustomerInfo} setButton={setButton}/>;\n    default:\n      return 'Unknown step';\n  }\n}\n\nfunction Gender(props) {\n    const handleChange = (event) => {\n        props.setCustomerInfo((prev) => ({...prev, gender: event.target.value}))\n        props.setButton(true)\n    };\n    \n    return(\n        <div style={{margin: 'auto 0', textAlign: 'center'}}>\n        <FormControl component=\"fieldset\">\n        <div className=\"customer_info_tag\">性別を教えてください</div>\n        <RadioGroup aria-label=\"gender\" name=\"gender1\"  onChange={handleChange}>\n            <FormControlLabel value='女性' control={<Radio style={{backgroundColor: \"white\", padding: 0}}/>} label=\"&nbsp;&nbsp;&nbsp;&nbsp;女性\" />\n            <FormControlLabel value='男性' control={<Radio style={{backgroundColor: \"white\", padding: 0}}/>} label=\"&nbsp;&nbsp;&nbsp;&nbsp;男性\" />\n            <FormControlLabel value='どちらでもない' control={<Radio style={{backgroundColor: \"white\", padding: 0}}/>} label=\"&nbsp;&nbsp;&nbsp;&nbsp;どちらでもない\" />\n        </RadioGroup>\n        </FormControl>\n        </div>\n    );\n}\n\nfunction PhoneNumber(props) {\n    const [phoneNumber, setPhoneNumber] = React.useState('');\n    const [phoneNumberE, setPhoneNumberE] = React.useState('');\n    const handlePhoneNumber = (event) => {\n        setPhoneNumber(event.target.value);\n    };\n    const handlePhoneNumberE = (event) => {\n        setPhoneNumberE(event.target.value);\n    };\n    useEffect(()=>{\n      props.setCustomerInfo((prev) => ({...prev, phoneNumber: {nomal: phoneNumber,emergency: phoneNumberE}}))\n    },[phoneNumber, phoneNumberE])\n\n    return(\n        <>\n        <Grid container alignItems=\"center\" justify=\"center\">\n          <Grid item xs={9}>\n              <div className=\"customer_info_tag\">連絡先を教えてください</div>\n              通常時<br/>\n              <TextField\n                  style={{width: '100%', backgroundColor: \"white\"}}\n                  id=\"outlined-size-small\"\n                  placeholder=\"入力してください(ハイフンなし)\"\n                  value={phoneNumber}\n                  variant=\"outlined\"\n                  size=\"large\"\n                  onChange={handlePhoneNumber}\n              /><br/>\n              緊急時（通常時とは異なるもの)\n              <TextField\n                  style={{width: '100%', backgroundColor: \"white\"}}\n                  id=\"outlined-size-small\"\n                  placeholder=\"入力してください(ハイフンなし)\"\n                  value={phoneNumberE}\n                  variant=\"outlined\"\n                  size=\"large\"\n                  onChange={handlePhoneNumberE}\n              />\n          </Grid>   \n        </Grid>\n        </>\n    );\n}\n\nexport default function CreateCustomerInfo() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState(new Set());\n  const steps = getSteps();\n  const [open, setOpen] = React.useState(true);\n  const [customerInfo, setCustomerInfo] = React.useState({gender: \"\", birthday: null, address: {}, phoneNumber: {}});\n  // eslint-disable-next-line no-unused-vars\n  const [button, setButton] = React.useState(false);\n  const customerHeaders = useSelector(selectCustomerHeaders);\n\n  const totalSteps = () => {\n    return getSteps().length;\n  };\n  const completedSteps = () => {\n    return completed.size;\n  };\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n  const handleNext = () => {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? \n          steps.findIndex((step, i) => !completed.has(i))\n        : activeStep + 1;\n\n    setActiveStep(newActiveStep);\n  };\n  // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n  const handleSkip = () => {\n    setOpen(false);\n    history.push('/');\n  }\n\n  const handleComplete = () => {\n    const newCompleted = new Set(completed);\n    newCompleted.add(activeStep);\n    setCompleted(newCompleted);\n    if (completed.size !== totalSteps()) {\n      handleNext();\n    }\n    // 最終ステップ完了時\n    if (completedSteps() === totalSteps() - 1){\n      const url = `/customer_infos`\n      axios.put(url, customerInfo, customerHeaders)\n      .then(function (response) {\n        console.log({response})\n        dispatch(setCurrentCustomerInfo(response.data.data));\n      }).catch(function (response) {\n        console.log({response})\n      })\n      // TODO::ページ遷移&post\n    }\n  };\n\n  function isStepComplete(step) {\n    return completed.has(step);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const buttonProps = {};\n          return (\n            <Step key={label} {...stepProps}>\n              <StepButton\n                completed={isStepComplete(index)}\n                {...buttonProps}\n              >\n              </StepButton>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {allStepsCompleted() ? (\n          <Dialog\n              open={open}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n          >\n              <DialogTitle id=\"alert-dialog-title\">\n                  プロフィールを充足しましょう！\n              </DialogTitle>\n              <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                  次に、トレーナーとのコミュニケーションを円滑にするために、\n                  4つの質問に答えてあなたのプロフィールを作成しましょう！\n              </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n              <Button onClick={handleSkip} color=\"secondary\">\n                  スキップ\n              </Button>\n              <Button  color=\"primary\" autoFocus>\n                  <Link color=\"inherit\" href=\"/customer_info_indivi/new\">このまま進む</Link>\n              </Button>\n              </DialogActions>\n          </Dialog>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep, setCustomerInfo, setButton)}</Typography>\n            <div style={{textAlign: 'center'}}>\n\n              {activeStep !== steps.length &&\n                (completed.has(activeStep) ? (\n                  <Typography variant=\"caption\" className={classes.completed}>\n                    ステップ {activeStep + 1} 完了！\n                  </Typography>\n                ) : (\n                  <Button variant=\"contained\" style={{width: '80%'}} color=\"primary\" onClick={handleComplete}>\n                    {completedSteps() === totalSteps() - 1 ? '完了する' : '次へ進む'}\n                  </Button>\n                ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/slices/trainer.ts",[],"/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_interests_edit.jsx",["475","476","477"],"/* eslint-disable react/prop-types */\nimport React , { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '20%',\n    color: '#555555',\n    backgroundColor: 'white',\n    textAlign: 'center',\n  },\n  checked: {\n    marginRight: theme.spacing(1),\n    backgroundColor: 'silver',\n  },\n  chip: {\n    justifyContent: 'center',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nfunction SetChipEdit({thisInterest, setInterestIDs, interestIDs}) {\n    const [value, setValue] = React.useState(false)\n\n    useEffect(()=>{\n        interestIDs.includes(thisInterest.id)? setValue(true) :setValue(false);\n    },[])\n\n    function handleValueChange(){\n        if(value){\n            //  console.log(\"AAAAAAAAAAAAAAAA\")\n            const deletedIDs = interestIDs.filter((ID) => {\n                return ID != thisInterest.id;\n            });\n            setInterestIDs(deletedIDs)\n        }else{\n            // console.log(\"AAAAAAAAAAAAAAAA\")\n            setInterestIDs((prev) => [...prev, thisInterest.id])\n            // setUpdateInterestsIDs(interestIDs)\n        }\n        setValue(!value);\n    }\n    return(\n        <>\n        {\n            value?\n            (<Chip\n                key={thisInterest.id}\n                label={ thisInterest.name }\n                clickable\n                color=\"primary\"\n                onClick={ handleValueChange }\n            />)\n            :\n            (<Chip\n                key={thisInterest.id}\n                label={ thisInterest.name }\n                clickable\n                color=\"primary\"\n                variant=\"outlined\"\n                style={{backgroundColor: 'white'}}\n                onClick={ handleValueChange }\n            />)\n        }\n        </>\n    );\n}\n\n\nexport default function CustomerInterestsEdit({interestIDs, setInterestIDs, setUpdateInterestsIDs}) {\n    const url = '/customer_info/intarests_new'\n    const [allInterests, setAllInterests] = React.useState([])\n    const classes = useStyles();\n\n    useEffect(()=>{\n        axios.get(url)\n        .then(function(res) {\n            setAllInterests(res.data.intarests)\n        })\n        .catch(function(error) {\n            console.log({error})\n        });\n     },[interestIDs])\n\n    const select_interests = allInterests.length ?  \n        allInterests.map((interest,index) =>\n        <>\n\n            <SetChipEdit key={index} thisInterest={interest} setInterestIDs={setInterestIDs} interestIDs={interestIDs} />\n        </>\n    )\n    : \n        <></>\n\n    return (\n        <>\n        <Grid container alignItems=\"center\" justify=\"center\">\n        <Grid item xs={11}>\n            <div className=\"customer_info_tag\">関心のある分野を選んでください</div>\n            <div className={classes.chip}>\n             { select_interests }\n            </div>\n        </Grid>   \n        </Grid>\n        </>\n    );\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/my_page_interests_chips.jsx",["478","479","480","481"],"/* eslint-disable react/prop-types */\nimport React, {  useState, useEffect } from \"react\"\nimport Chip from '@material-ui/core/Chip';\n\nexport default function InterestChips({interests}){\n    const InterestsChips = interests.length ?  \n        interests.map((interest) =>\n        <>\n        <Chip\n            key={interest.id}\n            label={ interest.name }\n            style={{margin: 2}}\n            color=\"primary\"\n        />\n        </>\n    )\n    : \n        <></>\n    return(\n        <> \n            { InterestsChips }\n        </>\n    )\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/store.ts",[],"/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/applications/footer.js",["482","483","484","485"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Link from '@material-ui/core/Link';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Grid from '@material-ui/core/Grid';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport {selectCurrentCustomer, selectCustomerHeaders, customerRemove, selectCurrentCustomerStatus} from '../../slices/customer'\nimport {selectCurrentAdmin} from '../../slices/admin'\nimport {selectCurrentTrainer} from '../../slices/trainer'\nimport {selectCurrentMasterAdmin} from '../../slices/master_admin'\nimport { useSelector } from 'react-redux';\nimport PortraitIcon from '@material-ui/icons/Portrait';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport DehazeIcon from '@material-ui/icons/Dehaze';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    color: 'white',\n    // height: 140,  \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Footer() {\n  // console.log({props})\n  const classes = useStyles();\n  const currentCustomer = useSelector(selectCurrentCustomer);\n  const currentAdmin = useSelector(selectCurrentAdmin);\n  const currentTrainer = useSelector(selectCurrentTrainer);\n  const currentMasterAdmin = useSelector(selectCurrentMasterAdmin);\n  const customerStatus = useSelector(selectCurrentCustomerStatus);\n  const today = new Date\n  console.log({currentCustomer})\n\n  return (\n    <div className={classes.root}>\n       {currentCustomer? (\n            <>\n              <AppBar position=\"static\" style={{backgroundColor: 'white'}}>\n                <Toolbar>\n                <Grid container spacing={6} style={{textAlign: 'center'}}>\n                    <Grid item xs={4}>\n                        <Link href=\"/\">\n                            <HomeIcon style={{color: 'black', fontSize: '2.5em'}}/>\n                        </Link>\n                    </Grid>\n                    {customerStatus?.paid? (\n                        <Grid item xs={4}>\n                            <Link href={`/customer/${currentCustomer.id}/calendar_new`}>\n                                <CalendarTodayIcon  style={{color: 'black', fontSize: '2.5em'}} />\n                            </Link>\n                        </Grid>\n                    ):(\n                        <Grid item xs={4}>\n                            <CalendarTodayIcon  style={{color: 'grey', fontSize: '2.5em'}} />\n                        </Grid>\n                    )}\n                    <Grid item xs={4} >\n                        <Link href={`/customer/my_page/${currentCustomer.id}`}>\n                            <PermIdentityIcon  style={{color: 'black', fontSize: '2.5em'}} />\n                        </Link>\n                    </Grid>\n                </Grid>\n                </Toolbar>\n              </AppBar>\n            </>\n        ) : currentTrainer?.id ? (\n            <>\n              <AppBar position=\"static\" style={{backgroundColor: 'white'}}>\n                <Toolbar>\n                <Grid container spacing={6} style={{textAlign: 'center'}}>\n                    <Grid item xs={3}>\n                        <Link href={`/admin/company_id/${currentTrainer.company_id}/year/${today.getFullYear()}/month/${today.getMonth() + 1}/day/${today.getDate()}`}>\n                            <HomeIcon style={{color: 'black', fontSize: '2.5em'}}/>\n                        </Link>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Link href=\"/trainers/customer_session_records\">\n                            <DehazeIcon  style={{color: 'black', fontSize: '2.5em'}} />\n                        </Link>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Link href=\"/customer_all\">\n                            <PortraitIcon  style={{color: 'black', fontSize: '2.5em'}} />\n                        </Link>\n                    </Grid>\n                    <Grid item xs={3} >\n                        <Link href={`/trainer/${currentTrainer.id}`}>\n                            <PermIdentityIcon  style={{color: 'black', fontSize: '2.5em'}} />\n                        </Link>\n                    </Grid>\n                </Grid>\n                </Toolbar>\n              </AppBar>\n            </>\n         ) : currentAdmin?.id ? (\n            <>\n              <AppBar position=\"static\" style={{backgroundColor: 'white'}}>\n                <Toolbar>\n                <Grid container spacing={6} style={{textAlign: 'center'}}>\n                    <Grid item xs={3}>\n                        <Link href={`/admin/company_id/${currentAdmin.company_id}/year/${today.getFullYear()}/month/${today.getMonth() + 1}/day/${today.getDate()}`}>\n                            <HomeIcon style={{color: 'black', fontSize: '2.5em'}}/>\n                        </Link>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Link href=\"/customer_all\">\n                            <PortraitIcon  style={{color: 'black', fontSize: '2.5em'}} />\n                        </Link>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Link href=\"/admin_menues\">\n                            <AppsIcon style={{color: 'black', fontSize: '2.5em'}} />\n                        </Link>\n                    </Grid>\n                    <Grid item xs={3} >\n                        <Link href=\"/\">\n                            <PermIdentityIcon  style={{color: 'black', fontSize: '2.5em'}} />\n                        </Link>\n                    </Grid>\n                </Grid>\n                </Toolbar>\n              </AppBar>\n            </>\n        ): currentMasterAdmin?.id ? (\n            <>\n              <AppBar position=\"static\" style={{backgroundColor: 'white'}}>\n                <Toolbar>\n                <Grid container spacing={6} style={{textAlign: 'center'}}>\n                    <Grid item xs={3}>\n                        <Link href={`/master_admin`}>\n                            <HomeIcon style={{color: 'black', fontSize: '2.5em'}}/>\n                        </Link>\n                    </Grid>\n                    {/* <Grid item xs={3}>\n                        <Link href=\"/customer_all\">\n                            <PortraitIcon  style={{color: 'black', fontSize: '2.5em'}} />\n                        </Link>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Link href=\"/admin_menues\">\n                            <AppsIcon style={{color: 'black', fontSize: '2.5em'}} />\n                        </Link>\n                    </Grid>\n                    <Grid item xs={3} >\n                        <Link href=\"/\">\n                            <PermIdentityIcon  style={{color: 'black', fontSize: '2.5em'}} />\n                        </Link>\n                    </Grid> */}\n                </Grid>\n                </Toolbar>\n              </AppBar>\n            </>\n        ):(\n          <></>\n        )}\n    </div>\n  );\n}\n\n// // state\n// const mapStateToProps = state => ({ auths: state.auths })\n// // 関数\n// const mapDispachToProps = ({ checkAuth, signOut })\n// // reduxのstateと関数を使えるように、propsで使えるようになる\n// export default connect(mapStateToProps, mapDispachToProps)(Footer)\n\nexport default Footer","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/appointments/select_date.js",["486","487"],"/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { useHistory} from 'react-router-dom';\nimport Button from '@material-ui/core/Button'\nimport { useForm } from \"react-hook-form\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst SelectDate = (props) => {\n    console.log(\"SelectDate\", {props})\n    const store_id = props.match.params.store_id\n    const customer_menu_id = props.match.params.customer_menu_id\n    const [value, onChange] = useState(new Date());\n    const history = useHistory();\n    const onSubmit = (data) => console.log(data);\n    const { handleSubmit } = useForm();\n    return (\n        <>\n        <br />\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <div style={{textAlign: 'center', marginTop: 100}}>\n                <Calendar\n                    locale=\"ja-JP\"\n                    onChange={onChange}\n                    value={value}\n                    className=\"calendar\"\n                />\n\n                <Button \n                    variant=\"contained\" \n                    size='large' \n                    color=\"secondary\"\n                    style={{width: '95%', marginTop: 30, marginRight: 'auto', marginLeft: 'auto'}} \n                    onClick = {() => \n                        history.push({\n                            pathname: [`/customer/${props.match.params.customer_id}/appointments/new/${store_id}/${customer_menu_id}/${value.getFullYear()}/${value.getMonth() + 1}/${value.getDate()}`],\n                            // state: { store: props.location.state.store, customer_menu: props.location.state.customer_menu}\n                            state: props.location.state\n                    })}>\n                    時間を選ぶ\n                </Button>\n            </div>\n\n        </form>\n    </>\n    );\n  };\n//   props.location.state\n//   store\n//   customer_menu\nexport default SelectDate;\n\n\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/master_admins/create_companies.js",["488"],"/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport axios from 'axios'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport {  makeStyles } from '@material-ui/core/styles';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction CreateCompany() {\n    const url = `/companies`\n    const classes = useStyles();\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [telFirst, setTelFirst] = useState(\"\");\n    const [telSecond, setTelSecond] = useState(\"\");\n    const [telThird, setTelThird] = useState(\"\");\n    const history = useHistory();\n    const { handleSubmit } = useForm();\n\n    function onSubmit() {\n        console.log(\"onSubmit\")\n        const tel = `${telFirst}-${telSecond}-${telThird}`\n        axios.post( url, {\n            name: name,\n            address: address,\n            tel: tel\n        })\n        .then(function (response) {\n            console.log(response);\n            if (response.status==200) {\n                console.log(response.data);\n                history.push(`/master_admin`)\n            } else {\n               console.log(response);\n            }\n        })\n    }\n\n    const handleNameChange = (e) => {\n        setName(e.target.value);\n    };\n    const handleAddressChange = (e) => {\n        setAddress(e.target.value);\n    };\n    const handleTelFirstChange = (e) => {\n        setTelFirst(e.target.value);\n    };\n    const handleTelSecondChange = (e) => {\n        setTelSecond(e.target.value);\n    };\n    const handlesetTelThirdChange = (e) => {\n        setTelThird(e.target.value);\n    };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          企業新規発行\n        </Typography>\n\n        <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"name\"\n                label=\"会社名を入力してください\"\n                name=\"name\"\n                onChange={ handleNameChange }\n                autoComplete=\"name\"\n              />\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"address\"\n                label=\"住所を入力してください\"\n                type=\"address\"\n                id=\"address\"\n                onChange={handleAddressChange}\n                autoComplete=\"current-address\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"firstname\"\n                placeholder=\"012\"\n                // label=\"電話番号\"\n                onChange={handleTelFirstChange}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"lastName\"\n                // label=\"345\"\n                placeholder=\"012\"\n                name=\"lastName\"\n                onChange={handleTelSecondChange}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"lastName\"\n                // label=\"678\"\n                placeholder=\"012\"\n                name=\"lastName\"\n                onChange={handlesetTelThirdChange}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            企業を追加する\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default CreateCompany;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/appointment_records/new.js",["489","490"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    // minWidth: 275,\n    width: '90%',\n    margin: '0 auto',\n    // margin: 'auto 0',\n    // textAlign: 'center'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst AppointmentRecordNew = (props) => {\n    console.log({props})\n    const classes = useStyles();\n    const history = useHistory();\n\n    const response = props.location.state.response\n    const time = props.location.state.time\n\n    function handleDataCreate() {\n      const url = `/customer/${ response.customer_id }/appointment/${ response.id }/create_customer_record`\n      axios.post(url)\n        .then(function (response) {\n            if (response.status==200) {\n                history.push(`/customer_record/${response.data.id}/new`)\n            } else {\n               console.log(response);\n            }\n      })\n    }\n\n    return (\n        <div style={{marginTop: 30}}>\n          <Card className={classes.root}>\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\" style={{fontSize: '1.0em'}}>\n                 { response.first_name + response.last_name}様の\n                 { response.fitness_name }のフィードバックを作成しますか？\n              </Typography>\n              <hr/>\n              時間: {time[0][0]}:{time[0][1]} 〜 {time[1][0]}:{time[1][1]}<br/>\n              予約時内容: { response.fitness_name }\n              <Typography variant=\"body2\" component=\"p\">\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button \n                  style={{width: '100%', margin: '0 auto',textAlign: 'center',fontSize: '0.9em'}} \n                  variant=\"contained\" \n                  size='large' \n                  color=\"secondary\"\n                  onClick={() => handleDataCreate()}>\n                ここまま進む\n              </Button>\n            </CardActions>\n          </Card>\n        </div>\n  );\n}\n\nexport default AppointmentRecordNew;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/slices/customer.ts",[],"/Users/katoatsushi/Desktop/room-app/room-frontend/src/slices/master_admin.ts",[],"/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/admin_top.jsx",["491","492"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport ScheduleCheck from './admin_schedule_cehck'\nimport Paper from '@material-ui/core/Paper';\nimport {selectCurrentAdmin} from '../../slices/admin'\nimport {selectCurrentTrainer} from '../../slices/trainer'\nimport { useSelector } from 'react-redux';\n\nexport default function AdminTop(props){\n    const currentAdmin = useSelector(selectCurrentAdmin);\n    const currentTrainer = useSelector(selectCurrentTrainer);\n    console.log(\"AdminTop\", {props})\n    const params = props.match.params\n    const day_info = {year: params.year, month: params.month, day: params.day}\n\n    return (\n        <>\n            {\n                (() => {\n                if (currentAdmin) {\n                    const company_id = currentAdmin.company_id\n                    return(\n                        <>\n                            <Paper style={{textAlign: 'center', padding: 20}}>本日のスケジュール</Paper>\n                            <ScheduleCheck company_id={company_id} day={day_info}/>\n                        </>\n                    );\n                } else if (currentTrainer) {\n                    const company_id = currentTrainer.company_id\n                    return (\n                        <>\n                            <Paper style={{textAlign: 'center', padding: 20}}>本日のスケジュール</Paper>\n                            <ScheduleCheck company_id={company_id} day={day_info}/>\n                        </>\n                    );\n                }\n                })()\n            }\n        </>\n    )\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/edit_profile/edit_my_profile.jsx",["493","494"],"/* eslint-disable react/prop-types */\nimport React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { BrowserRouter as useHistory } from 'react-router-dom';\nimport {  selectTrainerHeaders } from '../../../slices/trainer';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios'\nimport InputName from './input_name'\nimport TrainerBirthDay from './trainer_birthday'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n    backgroundColor: 'silver',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['性別を選択', '生年月日を選択', '住所を入力', 'ご連絡先'];\n}\n\nfunction getStepContent(step, setTrainerInfo, setButton) {\n  switch (step) {\n    case 0:\n      return <InputName setTrainerInfo={setTrainerInfo} setButton={setButton}/>;\n    case 1:\n      return <Gender setTrainerInfo={setTrainerInfo} setButton={setButton}/>;\n    case 2:\n      return <TrainerBirthDay setTrainerInfo={setTrainerInfo} setButton={setButton}/>;\n    case 3:\n      return <PhoneNumber setTrainerInfo={setTrainerInfo} setButton={setButton}/>;\n    default:\n      return 'Unknown step';\n  }\n}\n\nfunction Gender(props) {\n    const handleChange = (event) => {\n        props.setTrainerInfo((prev) => ({...prev, gender: event.target.value}))\n        props.setButton(true)\n    };\n    \n    return(\n        <div style={{margin: 'auto 0', textAlign: 'center'}}>\n        <FormControl component=\"fieldset\">\n        <div className=\"customer_info_tag\">性別を教えてください</div>\n        <RadioGroup aria-label=\"gender\" name=\"gender1\"  onChange={handleChange}>\n            <FormControlLabel value='女性' control={<Radio style={{backgroundColor: \"white\", padding: 0}}/>} label=\"&nbsp;&nbsp;&nbsp;&nbsp;女性\" />\n            <FormControlLabel value='男性' control={<Radio style={{backgroundColor: \"white\", padding: 0}}/>} label=\"&nbsp;&nbsp;&nbsp;&nbsp;男性\" />\n            <FormControlLabel value='どちらでもない' control={<Radio style={{backgroundColor: \"white\", padding: 0}}/>} label=\"&nbsp;&nbsp;&nbsp;&nbsp;どちらでもない\" />\n        </RadioGroup>\n        </FormControl>\n        </div>\n    );\n}\n\nfunction PhoneNumber(props) {\n    const [phoneNumber, setPhoneNumber] = React.useState('');\n    const [phoneNumberE, setPhoneNumberE] = React.useState('');\n    const handlePhoneNumber = (event) => {\n        setPhoneNumber(event.target.value);\n    };\n    const handlePhoneNumberE = (event) => {\n        setPhoneNumberE(event.target.value);\n    };\n    useEffect(()=>{\n      props.setTrainerInfo((prev) => ({...prev, phoneNumber: {nomal: phoneNumber,emergency: phoneNumberE}}))\n    },[phoneNumber, phoneNumberE])\n\n    return(\n        <>\n        <Grid container alignItems=\"center\" justify=\"center\">\n          <Grid item xs={9}>\n              <div className=\"customer_info_tag\">連絡先を教えてください</div>\n              通常時<br/>\n              <TextField\n                  style={{width: '100%', backgroundColor: \"white\"}}\n                  id=\"outlined-size-small\"\n                  placeholder=\"入力してください(ハイフンなし)\"\n                  value={phoneNumber}\n                  variant=\"outlined\"\n                  size=\"large\"\n                  onChange={handlePhoneNumber}\n              /><br/>\n              緊急時（通常時とは異なるもの)\n              <TextField\n                  style={{width: '100%', backgroundColor: \"white\"}}\n                  id=\"outlined-size-small\"\n                  placeholder=\"入力してください(ハイフンなし)\"\n                  value={phoneNumberE}\n                  variant=\"outlined\"\n                  size=\"large\"\n                  onChange={handlePhoneNumberE}\n              />\n          </Grid>   \n        </Grid>\n        </>\n    );\n}\n\nexport default function EditMyProfile() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [completed, setCompleted] = React.useState(new Set());\n    const steps = getSteps();\n    // const [open, setOpen] = React.useState(true);\n    const [trainerInfo, setTrainerInfo] = React.useState(\n              {name: {first_name_kanji: \"\", last_name_kanji: \"\", first_name_kana: \"\", last_name_kana: \"\"}, \n              gender: \"\", birthday: null, phoneNumber: {}});\n    // eslint-disable-next-line no-unused-vars\n    const [button, setButton] = React.useState(false);\n    const trainerHeaders = useSelector(selectTrainerHeaders);\n\n  console.log({trainerInfo})\n\n  const totalSteps = () => {\n    return getSteps().length;\n  };\n  const completedSteps = () => {\n    return completed.size;\n  };\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n  const handleNext = () => {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? \n          steps.findIndex((step, i) => !completed.has(i))\n        : activeStep + 1;\n\n    setActiveStep(newActiveStep);\n  };\n  // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n  // const handleSkip = () => {\n  //   setOpen(false);\n  //   history.push('/');\n  // }\n\n  const handleComplete = () => {\n    const newCompleted = new Set(completed);\n    newCompleted.add(activeStep);\n    setCompleted(newCompleted);\n    if (completed.size !== totalSteps()) {\n      handleNext();\n    }\n    // 最終ステップ完了時\n    if (completedSteps() === totalSteps() - 1){\n      const url = `/trainer/update/myself`\n      axios.put(url, trainerInfo, trainerHeaders)\n      .then(function (response) {\n        console.log({response})\n      }).catch(function (response) {\n        console.log({response})\n      })\n      // TODO::ページ遷移&post\n    }\n  };\n\n\n  function isStepComplete(step) {\n    return completed.has(step);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const buttonProps = {};\n          return (\n            <Step key={label} {...stepProps}>\n              <StepButton\n                completed={isStepComplete(index)}\n                {...buttonProps}\n              >\n              </StepButton>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {allStepsCompleted() ? (\n          <Dialog\n              open={open}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n          >\n              <DialogTitle id=\"alert-dialog-title\">\n                  アカウント登録が完了しました！\n              </DialogTitle>\n              <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                アカウントの登録が完了しました！<br/>\n                サービスを利用してみましょう！\n              </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n              <Grid container spacing={3} style={{fontWeight: 500,overflowWrap: 'break-word'}}>\n                <Grid item xs={1}/>\n                  <Grid item xs={10} style={{marginTop: 'auto', marginBottom: 'auto'}}>\n                    {/* <Button  color=\"primary\" autoFocus>\n                        <Link color=\"inherit\" href=\"/customer_info_indivi/new\">\n                          完了\n                        </Link>\n                    </Button> */}\n                    <div className=\"trainer_sign_up\" onClick = {() => history.push(`/`)}>\n                        完了\n                    </div>\n                  </Grid>\n                <Grid item xs={1}/>\n              </Grid>\n              {/* <Button onClick={handleSkip} color=\"secondary\">\n                  スキップ\n              </Button> */}\n              </DialogActions>\n          </Dialog>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep, setTrainerInfo, setButton)}</Typography>\n            <div style={{textAlign: 'center'}}>\n\n              {activeStep !== steps.length &&\n                (completed.has(activeStep) ? (\n                  <Typography variant=\"caption\" className={classes.completed}>\n                    ステップ {activeStep + 1} 完了！\n                  </Typography>\n                ) : (\n                  <Button variant=\"contained\" style={{width: '80%'}} color=\"primary\" onClick={handleComplete}>\n                    {completedSteps() === totalSteps() - 1 ? '完了する' : '次へ進む'}\n                  </Button>\n                ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/record/set_times_weight.jsx",["495","496","497","498"],"/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction InputTimesWeight({data, setSubmitData, submitData}){\n    function handleTimeChange(e){\n        const changeTime = submitData.map((sd) => {\n            if(sd.data.id == data.data.id){\n                return {data: sd.data, time: e.target.value, weight: sd.value}\n            }else{\n                return sd\n            }\n        });\n        // eslint-disable-next-line no-unused-vars\n        setSubmitData((prev) => changeTime)\n    }\n\n    function handleWeightChange(e){\n         const changeWeight = submitData.map((sd) => {\n            if(sd.data.id == data.data.id){\n                return {data: sd.data, time: sd.time, weight: e.target.value}\n            }else{\n                return sd\n            }\n        });\n        // eslint-disable-next-line no-unused-vars\n        setSubmitData((prev) => changeWeight)\n    }\n\n    return(\n        <Grid container  style={{fontWeight: 500, marginBottom: 10, marginTop: 3}}>\n            <Grid item xs={5} >\n                {data.data.name}\n            </Grid>\n            <Grid item xs={3}>\n                {data.data.fitness_second_name}\n            </Grid>\n            <Grid item xs={2}>\n            {data.data.set? (<>\n                <input type=\"number\" autoFocus required style={{width: '60%'}} onChange={handleTimeChange}/><span style={{fontSize: 5}}>回</span>\n            </>):(<></>)}\n            </Grid>\n            <Grid item xs={2}>\n            {data.data.weight? (<>\n                <input type=\"number\" autoFocus required style={{width: '60%'}} onChange={handleWeightChange}/><span style={{fontSize: 5}}>kg</span>\n            </>):(<></>)}\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default function SetTimesWeight(props) {\n    const classes = useStyles();\n    const [ submitData, setSubmitData ] = React.useState([]);\n    const [ message, setMessage ] = React.useState(\"\");\n    const allData = props.location.data\n    const history = useHistory();\n    console.log({props})\n    useEffect(()=>{\n        if (allData){\n            var DataInit = allData.map(function(d){\n                return {data: d, time: null, weight: null}\n            })\n        }else{\n            DataInit = []\n        }\n        setSubmitData(DataInit)\n    },[])\n\n    function handleMessageChange(e){\n        setMessage(e.target.value);\n    }\n    console.log({submitData})\n\n    return (<>\n        <div className={classes.root}>\n            <Paper variant=\"outlined\" style={{padding: 5, margin: 10, textAlign: 'center'}}>\n                カルテを発行する\n            </Paper>\n           <Paper variant=\"outlined\"style={{padding: 10, margin: 5}}>\n            <span className=\"karute_text\">内容を選んでください</span>\n            <Paper variant=\"outlined\" style={{padding: 5,backgroundColor: '#CCCCCC',  margin: 0, textAlign: 'left', fontSize: '0.7em'}}>\n                <Grid container style={{fontWeight: 500}}>\n                    <Grid item xs={5} >\n                        内容\n                    </Grid>\n                    <Grid item xs={3}>\n                        カテゴリー\n                    </Grid>\n                    <Grid item xs={2}>\n                        総回数\n                    </Grid>\n                    <Grid item xs={2}>\n                        重量\n                    </Grid>\n                </Grid>\n            </Paper>\n\n            {submitData?(<>\n                {submitData.map((data, index) => (<>\n                    <InputTimesWeight key={index} data={data} setSubmitData={setSubmitData} submitData={submitData}/>\n                    <hr/>\n                </>))}\n            </>):(<></>)}\n            <Paper variant=\"outlined\" style={{padding: 5,backgroundColor: '#CCCCCC',  margin: 0, textAlign: 'left', fontSize: '0.7em', fontWeight: 500}}>\n                コメント\n            </Paper>\n\n            <TextField\n                id=\"outlined-multiline-static\"\n                label=\"コメント\"\n                multiline\n                style={{width: '100%', color: '#4DA7F0', marginTop: 10}}\n                rows={4}\n                // defaultValue=\"Default Value\"\n                onChange={handleMessageChange}\n                variant=\"outlined\"\n            />\n            <div style={{textAlign: 'right', marginLeft: 'auto', marginRight: 'auto',}}>\n                <Button style={{marginTop: 10, backgroundColor: '#4DA7F0', color: 'white', fontWeight: '500', width: '100%'}}\n                    onClick = {() => \n                        history.push({\n                            pathname: [`/trainers/record/confirm`],\n                            record: props.location.record,\n                            message: message,\n                            data: submitData })}\n                >\n                    カルテを発行する\n                </Button>\n            </div>\n            </Paper>\n        </div>\n    </>)\n}\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_individual_info/customer_condition.jsx",["499","500"],"/* eslint-disable react/prop-types */\nimport React , { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(1),\n  },\n  textField: {\n    width: '25ch',\n  },\n}));\n\nfunction CustomerConditions(props) {\n    const classes = useStyles();\n    const [weight, setWeight] = React.useState()\n    const [height, setHeight] = React.useState()\n    function handleHeightChange(e){\n      setHeight(e.target.value);\n    }\n    function handleWeightChange(e){\n      setWeight(e.target.value);\n    }\n\n    useEffect(()=>{\n      props.setCustomerStatus((prev) => ({...prev, condition: {weight: weight, height: height}}))\n    },[weight, height])\n\n    return (\n        <>\n        <Grid container alignItems=\"center\" justify=\"center\">\n        <Grid item xs={9}>\n            <div className=\"customer_info_tag\">身長・体重を教えてください</div>\n            <FormControl className={clsx( classes.withoutLabel, classes.textField)}>\n            <div className=\"customer_info_tag\">身長(現在)</div>\n            <Input\n                id=\"standard-adornment-height\"\n                value={height}\n                onChange={handleHeightChange}\n                type=\"number\"\n                endAdornment={<InputAdornment position=\"end\">cm</InputAdornment>}\n                aria-describedby=\"standard-weight-helper-text\"\n                inputProps={{\n                'aria-label': 'height',\n                }}\n            />\n            </FormControl>\n            <FormControl className={clsx( classes.withoutLabel, classes.textField)}>\n            <div className=\"customer_info_tag\">体重(現在)</div>\n            <Input\n                id=\"standard-adornment-weight\"\n                value={weight}\n                onChange={handleWeightChange}\n                type=\"number\"\n                endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n                aria-describedby=\"standard-weight-helper-text\"\n                inputProps={{\n                'aria-label': 'weight',\n                }}\n            />\n            </FormControl>\n            <br/>\n            {/* <Link href=\"/customer_info/interests\">\n                次へ\n            </Link> */}\n        </Grid>   \n        </Grid>\n        </>\n    );\n}\n\nexport default CustomerConditions;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/inputFile.jsx",["501","502","503"],"/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\nconst Label = styled.label`\n    background-color: #4DA7F0;\n    border-radius: 10px;\n    text-align: center;\n    color: white;\n    width: 100%;\n    padding: 5px 20px;\n  お好きにどうぞ\n`;\nconst Input = styled.input`\n  display: none;\n`;\nconst onChange = (event, cb, setFileName) => {\n  cb(event);\n  const targetName = event.target.files.item(0).name;\n  setFileName(targetName);\n};\n\nconst InputFile = props => {\n  // eslint-disable-next-line no-unused-vars\n  const [filename, setFileName] = useState('選択されていません');\n  if (props.type !== 'file') return <p>Input type must be file</p>;\n  return (\n    <Wrapper>\n      <Label>\n        プロフィール写真を変更\n        <Input\n          {...props}\n          accept=\"image/*\"\n          onChange={e => onChange(e, props.onChange, setFileName)}\n        />\n      </Label>\n      {/* <FileName>{filename}</FileName> */}\n    </Wrapper>\n  );\n};\n\nexport default InputFile;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_info/customer_address.jsx",["504","505","506"],"/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport axios  from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nfunction Address(props) {\n  const [postalCodeA, setPostalCodeA] = React.useState('');\n  const [postalCodeB, setPostalCodeB] = React.useState('');\n  const [prefecture, setPrefecture] = React.useState('');\n  const [city, setCity] = React.useState('');\n  const [town, setTown] = React.useState('');\n  // eslint-disable-next-line no-unused-vars\n  const [addressDetail, setAddressDetail] = React.useState('');\n\n  async function handleAddressSearch(){\n      let url = 'https://apis.postcode-jp.com/api/v4/postcodes/'\n      url = url + postalCodeA + postalCodeB\n      let result = await axios.get(url, {headers: {apiKey: '8ugJdI2RobrvZIcBIZ9GNNNEwtRc5tbbx5PaLMi'}});\n      if(result.data){\n        setPrefecture(result.data[0].pref)\n        setCity(result.data[0].city)\n        setTown(result.data[0].town)\n      }\n  }\n  useEffect(()=>{\n    props.setCustomerInfo((prev) => ({...prev, address: {postalCode: postalCodeA + postalCodeB, address: prefecture + city + town + addressDetail}}))\n  },[postalCodeA, postalCodeB, prefecture, city, town, addressDetail])\n\n  function PostalFirst(e) {\n    setPostalCodeA(e.target.value);\n  }\n  function PostalLast(e) {\n    setPostalCodeB(e.target.value);\n  }\n  function handleSetPrefecture(e) {\n    setPrefecture(e.target.value);\n  }\n  function handleSetCity(e) {\n    setCity(e.target.value);\n  }\n  function handleSetTown(e) {\n    setTown(e.target.value);\n  }\n  return(\n      <>\n       <Grid container alignItems=\"center\" justify=\"center\">\n        <Grid item xs={8}>\n        <div className=\"customer_info_tag\">住所を教えてください</div>\n        <div>\n          <TextField\n            style={{width: '30%', textAlign: 'center',backgroundColor: \"white\"}}\n            id=\"outlined-size-small\"\n            value={postalCodeA}\n            variant=\"outlined\"\n            size=\"small\"\n            onChange={PostalFirst}\n          />\n          _\n          <TextField\n            style={{width: '40%', textAlign: 'center',backgroundColor: \"white\"}}\n            id=\"outlined-size-small\"\n            value={postalCodeB}\n            variant=\"outlined\"\n            size=\"small\"\n            onChange={PostalLast}\n          />\n        </div>\n        <Button variant=\"contained\" onClick={handleAddressSearch} size=\"small\">\n          住所を検索する\n        </Button>\n        <div>\n          <br/>\n          <TextField\n            label=\"都道府県\"\n            style={{width: '80%', textAlign: 'center', backgroundColor: \"white\"}}\n            id=\"outlined-size-small\"\n            value={ prefecture }\n            onChange={ handleSetPrefecture }\n            variant=\"outlined\"\n            size=\"small\"\n          />\n          <br/><br/>\n          <TextField\n            label=\"市区町村\"\n            style={{width: '80%', textAlign: 'center', backgroundColor: \"white\"}}\n            id=\"outlined-size-small\"\n            value={ city }\n            onChange={ handleSetCity }\n            variant=\"outlined\"\n            size=\"small\"\n          />\n          <br/><br/>\n          <TextField\n            label=\"番地・マンション名\"\n            style={{width: '100%', textAlign: 'center', backgroundColor: \"white\"}}\n            id=\"outlined-size-small\"\n            value={town}\n            onChange={ handleSetTown }\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </div>\n        </Grid>   \n      </Grid>\n      </>\n  )\n}\nexport default Address;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/shifts/text_field.jsx",["507","508"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nexport default function FormattedInputs(props) {\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState(false);\n    const handleChange = (event) => {\n        setChecked(event.target.checked);\n        props.setButton((prev)=> (prev, true))\n        if(event.target.checked){\n            props.setShift((prev)=>{ prev[props.date][\"start\"] = [7,30]\n                return {...prev}\n            });\n            props.setShift((prev)=>{ prev[props.date][\"end\"] = [17, 30]\n                return {...prev}\n            });\n        }else{\n            props.setShift((prev)=>{ prev[props.date][\"start\"] = null\n                return {...prev}\n            });\n            props.setShift((prev)=>{ prev[props.date][\"end\"] = null\n                return {...prev}\n            });   \n        }\n    };\n\n    function handleTimeStartChange(e){\n        console.log(e.target.value)\n        const times = e.target.value.split(':');\n        const times_array = [Number(times[0]),Number(times[1])]\n        props.setShift((prev)=>{ prev[props.date][\"start\"] = times_array\n            return {...prev}\n        });\n    }\n    function handleTimeEndChange(e){\n        console.log(e.target.value)\n        const times = e.target.value.split(':');\n        const times_array = [Number(times[0]),Number(times[1])]\n        props.setShift((prev)=>{ prev[props.date][\"end\"] = times_array\n            return {...prev}\n        });\n    }\n  return (\n    <>\n    <Grid item xs={2} style={{paddingBottom: 0, marginBottom: 0}}>\n      <Checkbox\n        checked={checked}\n        onChange={handleChange}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n    </Grid>\n    <Grid item xs={2} style={{paddingBottom: 0, marginBottom: 0}}>\n    <div style={{marginTop: 5}}>{props.date}日</div>\n    </Grid>\n    <Grid item xs={8} style={{paddingBottom: 0, marginBottom: 0}}>\n    {checked? (\n        <>\n            <TextField\n                id=\"time\"\n                type=\"time\"\n                defaultValue=\"07:30\"\n                className={classes.textField}\n                onChange={handleTimeStartChange}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                inputProps={{\n                    step: 300, // 5 min\n                }}\n                // style={{display: 'inline-block'}}\n                style={{display: 'inline-block'}}\n            />\n            <TextField\n                id=\"time\"\n                type=\"time\"\n                defaultValue=\"17:30\"\n                className={classes.textField}\n                onChange={handleTimeEndChange}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                inputProps={{\n                    step: 300, // 5 min\n                }}\n                // style={{display: 'inline-block'}}\n                style={{display: 'inline-block'}}\n            />\n      </>\n    ):(\n        <>\n            <TextField\n                id=\"time\"\n                type=\"time\"\n                defaultValue=\"07:30\"\n                className={classes.textField}\n                onChange={handleTimeStartChange}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                disabled\n                inputProps={{\n                    step: 300, // 5 min\n                }}\n                style={{display: 'inline-block'}}\n            />\n            <TextField\n                id=\"time\"\n                type=\"time\"\n                defaultValue=\"17:30\"\n                className={classes.textField}\n                onChange={handleTimeEndChange}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                disabled\n                inputProps={{\n                    step: 300, // 5 min\n                }}\n                style={{display: 'inline-block'}}\n            />\n        </>\n    )}\n\n    </Grid>\n    </>\n  );\n}\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/masked_text_field_for_trainer_shift.jsx",["509","510"],"/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/admins/customer_set_info_dialog.jsx",["511","512"],"/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport axios from 'axios';\nimport { selectAdminHeaders} from '../../slices/admin'\nimport { useSelector} from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function CustomerSetInfoDialog({customer, setAllCustomers}) {\n    const classes = useStyles();\n    const adminHeaders = useSelector(selectAdminHeaders);\n    const [change, setChange] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setChange(true);\n    };\n\n    const [paid, setPaid] = React.useState();\n    const handlePaidChange = (event) => {\n        setPaid(event.target.value);\n        if (event.target.value){\n            setCurrency(0);\n            setCurrency(false);\n        }\n        setChange(true);\n    };\n    const [roomPlus, setRoomPlus] = React.useState();\n    const handleRoomPlusChange = (event) => {\n        setRoomPlus(event.target.value);\n        setChange(true);\n    };\n    const [currency, setCurrency] = React.useState();\n    const handleCurrencyChange = (event) => {\n        setCurrency(event.target.value);\n        setChange(true);\n    };\n    const numbers = [ 4,8,12,16,20,24,28 ];\n\n    useEffect(()=>{\n        if(customer.room_plus){\n            setRoomPlus('true');\n        }else{  \n            setRoomPlus('false');\n        }\n        if(customer.paid){\n            setPaid('true');\n        }else{  \n            setPaid('false');\n        }\n    },[])\n\n    function handleUpdateSubmit(){\n        const url = `/customer_statuses/${customer.id}`\n        axios.put(url, {paid: paid,room_plus: roomPlus, dozen_sessions: false, numbers_of_contractnt: currency}, adminHeaders)\n        .then(res => {\n            handleClose();\n            console.log({res})\n            setAllCustomers((prev) => prev.map((p) => {\n                if(p.id == res.data.id) {\n                    p = res.data\n                }\n                return p\n                })\n            );\n        })\n        .catch(error => {\n            console.log({error})\n        });\n    }\n  return (\n    <div>\n        {customer.paid ? (\n        <>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n                有料会員\n                {customer.room_plus ? <div style={{fontSize: 15}}>プラス</div> : <></>}\n                &nbsp;{customer.numbers_of_contractnt}回/月\n            </Button>\n        </>\n        ) : (\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\n            無料会員\n        </Button>\n        )} \n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">会員情報を変更する</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            氏名:{customer.first_name} {customer.last_name} / {customer.age}歳 / {customer.sex}\n          </DialogContentText>\n          <DialogContentText>\n            メールアドレス:{customer.email}\n          </DialogContentText>\n        <hr/>\n        <FormControl component=\"paid\">\n            <FormLabel component=\"paid\">会員状況</FormLabel>\n            <RadioGroup\n                value={paid}\n                onChange={handlePaidChange}\n            >\n                <FormControlLabel control={<Radio />} label=\"有料会員\" value={'true'}/>\n                <FormControlLabel control={<Radio />} label=\"無料会員\" value={'false'}/>\n            </RadioGroup>\n        </FormControl><hr/>\n        {paid==\"true\" ? (\n            <>\n            <FormControl component=\"fieldset\">\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                <div>\n                    <FormLabel component=\"legend\">月あたりの予約可能数を変更</FormLabel>\n                    <TextField\n                    id=\"filled-select-currency\"\n                    select\n                    label=\"選択してください\"\n                    defaultValue={customer.numbers_of_contractnt}\n                    onChange={handleCurrencyChange}\n                    variant=\"filled\"\n                    >\n                    {numbers.map((n, index) => (\n                        <MenuItem key={index} value={n}>\n                            {n}回/月\n                        </MenuItem>\n                    ))}\n                    </TextField>\n                </div>\n                </form>\n            </FormControl><hr/>\n            </>\n        ) : (\n            <></>\n        )} \n\n        <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">ルームプラス</FormLabel>\n            <RadioGroup\n                aria-label=\"gender\"\n                name=\"customer_nfo\"\n                value={roomPlus}\n                onChange={handleRoomPlusChange}\n            >\n                <FormControlLabel value='true' control={<Radio />} label=\"はい\" />\n                <FormControlLabel value='false' control={<Radio />} label=\"いいえ\" />\n            </RadioGroup>\n        </FormControl>\n\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose}>戻る</Button>\n            {change ? (\n                <Button variant=\"contained\" onClick={handleUpdateSubmit} color=\"secondary\">\n                    変更する\n                </Button>\n            ) : (\n                <Button variant=\"contained\" disabled>\n                    変更する\n                </Button>\n            )} \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/edit_profile/input_name.jsx",["513","514"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nexport default function InputName(props) {\n    console.log({props})\n    function handleName_A(e){\n        console.log({e})\n        props.setTrainerInfo((prev) =>  ({...prev, name: {\n                    first_name_kanji: e.target.value, \n                    last_name_kanji:  prev.name.last_name_kanji,\n                    first_name_kana: prev.name.first_name_kana,\n                    last_name_kana: prev.name.last_name_kana\n                }}))\n    }\n    function handleName_B(e){\n        console.log({e})\n        props.setTrainerInfo((prev) =>  ({...prev, name: {\n                    first_name_kanji: prev.name.first_name_kanji,\n                    last_name_kanji:  e.target.value,\n                    first_name_kana: prev.name.first_name_kana,\n                    last_name_kana: prev.name.last_name_kana\n                }}))\n    }\n    function handleName_C(e){\n        console.log({e})\n        props.setTrainerInfo((prev) =>  ({...prev, name: {\n                    first_name_kanji: prev.name.first_name_kanji,\n                    last_name_kanji:  prev.name.last_name_kanji,\n                    first_name_kana: e.target.value,\n                    last_name_kana: prev.name.last_name_kana\n                }}))\n    }\n    function handleName_D(e){\n        console.log({e})\n        props.setTrainerInfo((prev) =>  ({...prev, name: {\n                    first_name_kanji: prev.name.first_name_kanji,\n                    last_name_kanji:  prev.name.last_name_kanji,\n                    first_name_kana: prev.name.first_name_kana,\n                    last_name_kana: e.target.value\n                }}))\n    }\n    return(<>\n        <div className=\"trainer_name_input_label\">お名前を入力してください</div>\n        <Grid container spacing={3} style={{fontWeight: 500,overflowWrap: 'break-word', paddingLeft: 10, paddingRight: 10, marginBottom: 50}}>\n            <Grid item xs={6} style={{marginTop: 'auto', marginBottom: 'auto'}}>\n                <TextField id=\"outlined-basic\" onChange={handleName_A} label=\"姓\" variant=\"outlined\" style={{ backgroundColor: 'white'}}/>\n            </Grid>\n            <Grid item xs={6} style={{marginTop: 'auto', marginBottom: 'auto'}}>\n                <TextField id=\"outlined-basic\" onChange={handleName_B }label=\"名\" variant=\"outlined\" style={{ backgroundColor: 'white'}}/>\n            </Grid>\n            <Grid item xs={6} style={{marginTop: 'auto', marginBottom: 'auto'}}>\n                <TextField id=\"outlined-basic\" onChange={handleName_C} label=\"せい\" variant=\"outlined\" style={{ backgroundColor: 'white'}}/>\n            </Grid>\n            <Grid item xs={6} style={{marginTop: 'auto', marginBottom: 'auto'}}>\n                <TextField id=\"outlined-basic\" onChange={handleName_D}  label=\"めい\" variant=\"outlined\" style={{ backgroundColor: 'white'}}/>\n            </Grid>\n        </Grid>\n    </>)\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/edit_profile/trainer_birthday.jsx",["515","516"],"/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nexport default function TrainerBirthDay(props) {\n  const [year, setYear] = React.useState(1990);\n  const [month, setMonth] = React.useState(6);\n  const [day, setDay] = React.useState(1);\n  const [yearOpen, setYearOpen] = React.useState(false);\n  const [monthOpen, setMonthOpen] = React.useState(false);\n  const [dayOpen, setDayOpen] = React.useState(false);\n\n  useEffect(()=>{\n    const date = new Date(year, month - 1, day).toLocaleString({ timeZone: 'Asia/Tokyo' });\n    props.setTrainerInfo((prev) => ({...prev, birthday: date}))\n  },[year, month, day])\n  \n\n  const handleYearChange = (event) => {\n    setYear(event.target.value);\n  };\n  const handleYearClose = () => {\n    setYearOpen(false);\n  };\n  const handleYearOpen = () => {\n    setYearOpen(true);\n  };\n  const handleMonthChange = (event) => {\n    setMonth(event.target.value);\n  };\n  const handleMonthClose = () => {\n    setMonthOpen(false);\n  };\n  const handleMonthOpen = () => {\n    setMonthOpen(true);\n  };\n    const handleDayChange = (event) => {\n    setDay(event.target.value);\n  };\n  const handleDayClose = () => {\n    setDayOpen(false);\n  };\n  const handleDayOpen = () => {\n    setDayOpen(true);\n  };\n\n\n  const today =  new Date\n  const old_year =  today.getFullYear() - 100\n  const years = [...Array(100)].map((_, i) => i + old_year)\n  const months = [...Array(12)].map((_, i) => i + 1)\n  const month_a = [1,3,5,7,8,10,12]\n  let days = [...Array(31)].map((_, i) => i + 1)\n  if(month_a.indexOf(month) != -1){\n    days = [...Array(31)].map((_, i) => i + 1)\n  }else if(month == 2&&year%4 == 0){\n    days = [...Array(28)].map((_, i) => i + 1)\n  }else{\n    days = [...Array(30)].map((_, i) => i + 1)\n  }\n\n  const years_box =  years.map((year,index) =>\n    <MenuItem key={index} value={year}>{year}</MenuItem>\n  );\n  const months_box =  months.map((month,index) =>\n    <MenuItem key={index} value={month}>{month}</MenuItem>\n  );\n  const days_box = days.map((day,index) =>\n    <MenuItem key={index} value={day}>{day}</MenuItem>\n  );\n  return (\n    <div style={{margin: 'auto 0', textAlign: 'center'}}>\n    <div className=\"customer_info_tag\">生年月日を教えてください</div>\n      <FormControl>\n        <InputLabel id=\"demo-controlled-open-select-label\">年</InputLabel>\n        <Select\n          defaultValue = { 1990 }\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={yearOpen}\n          onClose={handleYearClose}\n          onOpen={handleYearOpen}\n          // value={year}\n          onChange={handleYearChange}\n        >\n          { years_box }\n        </Select>\n      </FormControl>\n      <FormControl>\n        <InputLabel id=\"demo-controlled-open-select-label\">月</InputLabel>\n        <Select\n          defaultValue = { 6 }\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={monthOpen}\n          onClose={handleMonthClose}\n          onOpen={handleMonthOpen}\n          // value={month}\n          onChange={handleMonthChange}\n        >\n          { months_box }\n        </Select>\n      </FormControl>\n      <FormControl>\n        <InputLabel id=\"demo-controlled-open-select-label\">日</InputLabel>\n        <Select\n          defaultValue = { 15 }\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={dayOpen}\n          onClose={handleDayClose}\n          onOpen={handleDayOpen}\n          value={day}\n          onChange={handleDayChange}\n        >\n          { days_box }\n        </Select>\n      </FormControl>\n    </div>\n  );\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/customer_individual_info/customer_jobs.jsx",["517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533"],"/* eslint-disable react/prop-types */\nimport React , { useEffect, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport { BrowserRouter as Router, Route, Switch, useParams, useHistory, useLocation, } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from '@material-ui/core/Select';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport axios from 'axios'\n\nfunction CustomerJobs(props) {\n    const url = '/customer_info/jobs_new'\n    const [jobs, setJobs] = React.useState([])\n    const [selectJob, setSelectJob] = React.useState()\n\n    useEffect(()=>{\n        axios.get(url)\n        .then(function(res) {\n            setJobs(res.data.jobs)\n        })\n        .catch(function(error) {\n            console.log({error})\n        });\n        props.setCustomerStatus((prev) => ({...prev, jobs: selectJob}))\n    },[selectJob])\n\n\n    const select_jobs = jobs.map((job,index) =>\n        // TODO\n        <FormControlLabel \n            key={index} \n            value={job.name}\n            label= { job.name }\n            onClick={()=>handleJobChange(job)} \n            control={<Radio/>} \n        />\n    );\n\n    function handleJobChange(e){\n        console.log({e})\n        setSelectJob(e);\n    }\n\n    return (\n        <>  \n        <div className=\"customer_info_tag\" style={{textAlign: 'center'}}>ご職業を教えてください</div>\n        <div className=\"chose_jobs\">\n            <Grid container alignItems=\"center\" justify=\"center\">\n                <Grid item xs={9}>\n                    <FormControl component=\"fieldset\">\n                        <RadioGroup value={selectJob} aria-label=\"gender\" name=\"customized-radios\">\n                            { select_jobs }\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>   \n            </Grid>\n        </div>\n        </>\n    );\n}\n\nexport default CustomerJobs;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/login.tsx",["534","535","536","537","538","539","540","541","542","543","544","545","546","547","548"],"/* eslint-disable react/prop-types */\nimport React , { useEffect, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { Controller, useForm, SubmitHandler } from 'react-hook-form';\nimport axios, { AxiosError } from 'axios';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { BrowserRouter as Router, Route, Switch, useParams, useHistory, useLocation, } from 'react-router-dom';\nimport clsx from 'clsx';\nimport {\n  ISignInFormValues,\n  ISignInSuccessResponse,\n  IErrorResponse,\n  IServerMessages,\n} from '../../interfaces';\n// import { setHeaders, setCurrentCustomer } from '../../slices/customer';\nimport {setCurrentCustomer, setCurrentCustomerInfo, setCurrentCustomerStatus, setCurrentCustomerInterests, setHeaders} from  '../../slices/customer';\nimport selectCurrentCustomer from '../../slices/customer';\nimport { setCustomerRecords, customerRecordRemove, getCustomerRecords } from '../../slices/customer_record';\nimport Paper from '@material-ui/core/Paper';\nimport errorMessages from '../../constants/errorMessages.json';\nimport { useSelector } from 'react-redux';\nimport CustomizedSnackbars from './login_snackbar'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  // ロード\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: '#4DA7F0',\n    '&:hover': {\n      backgroundColor: '#4DA7F0',\n    },\n  },\n  buttonProgress: {\n    color: '#4DA7F0',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport default function LogIn() {\n    const url = `/v1/customer_auth/sign_in`\n    const get_customer_datas_url = `/customer/after/sign_in`\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { control, errors, handleSubmit } = useForm<ISignInFormValues>();\n    const [serverMessages, setServerMessages] = useState<IServerMessages>();\n    const customerRecords = useSelector(getCustomerRecords);\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n    const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n\n    const onSubmit = (data: SubmitHandler<ISignInFormValues>) => {\n      setSnackbarOpen(false)\n      if (!loading) {\n        setSuccess(false);\n        setLoading(true);\n      }\n      axios\n      .post<ISignInSuccessResponse>(url, data)\n      .then((res) => {\n        setSuccess(true);\n        setLoading(false);\n        dispatch(setCurrentCustomer(res.data.data));\n        dispatch(setHeaders(res.headers));\n        // お客様の詳細情報を入手\n        axios.get(get_customer_datas_url, {headers: res.headers} )\n        .then(function(response) {\n          // TODO::トレーナーを評価するものを取得\n          console.log(\"成功\",{response})\n          dispatch(setCurrentCustomerInfo(response.data.customer_info));\n          dispatch(setCurrentCustomerStatus(response.data.customer_status));\n          dispatch(setCurrentCustomerInterests(response.data.customer_interests));\n          if(response.data.evaluations.length){\n            dispatch(setCustomerRecords(response.data.evaluations));\n            history.push('/');\n            // history.push(`/customer_evaluation_data/${res.data.data.id}`);\n          }else{\n            console.log(\"現在返すべきトレーナーの評価はありません\")\n            history.push('/');\n          }\n        })\n        .catch(function(error) {\n          console.log({error})\n        });\n        // history.push('/');\n      })\n      .catch((err: AxiosError<IErrorResponse>) => {\n        console.log({err})\n        if(err.response){\n          if(err.response.status){\n            console.log(err.response.status)\n            setSnackbarOpen(true)\n          }\n        }\n        setLoading(false);\n        setServerMessages({\n          severity: 'error',\n          alerts: err.response?.data.errors || [],\n        });\n      });\n  };\n\n  return (\n    <>\n    {snackbarOpen?(\n      <CustomizedSnackbars/>\n    ):(<></>)}\n    <Box my={5}>\n      <Container maxWidth=\"xs\">\n        <Paper>\n        <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n          <Box p={2}>\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>\n              ログイン\n            </Typography>\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n              <Box mb={2}>\n                <Controller\n                  name=\"email\"\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: {\n                      value: true,\n                      message:\n                        errorMessages.email.text + errorMessages.required,\n                    },\n                    maxLength: {\n                      value: errorMessages.email.maxLength,\n                      message:\n                        errorMessages.email.text +\n                        errorMessages.is +\n                        String(errorMessages.email.maxLength) +\n                        errorMessages.maxLength,\n                    },\n                  }}\n                  render={({ ref, value, onChange }, { invalid }) => (\n                    <TextField\n                      variant=\"outlined\"\n                      label=\"メールアドレス\"\n                      error={invalid}\n                      // disabled={loading}\n                      fullWidth\n                      inputRef={ref}\n                      value={value as string}\n                      onChange={(e) => onChange(e.target.value)}\n                    />\n                  )}\n                />\n              </Box>\n              <Box mb={2}>\n                <Controller\n                  name=\"password\"\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: {\n                      value: true,\n                      message:\n                        errorMessages.password.text + errorMessages.required,\n                    },\n                    maxLength: {\n                      value: errorMessages.password.maxLength,\n                      message:\n                        errorMessages.password.text +\n                        errorMessages.is +\n                        String(errorMessages.password.maxLength) +\n                        errorMessages.maxLength,\n                    },\n                  }}\n                  render={({ ref, value, onChange }, { invalid }) => (\n                    <TextField\n                      type=\"password\"\n                      variant=\"outlined\"\n                      label=\"パスワード\"\n                      error={invalid}\n                      // disabled={loading}\n                      fullWidth\n                      inputRef={ref}\n                      value={value as string}\n                      onChange={(e) => onChange(e.target.value)}\n                    />\n                  )}\n                />\n              </Box>\n              <div className={classes.wrapper}>\n              <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  className={buttonClassname}\n                  disabled={loading || success}\n              >\n                ログインする\n              </Button>\n              {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n              </div>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"/customer/sign_up\" variant=\"body2\">\n                    {/* まだアカウントをお持ちでない方はこちらへ */}\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </Box>\n        </div>\n        </Paper>\n      </Container>\n    </Box>\n    </>\n  );\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/master_admins/login.tsx",["549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567"],"/* eslint-disable react/prop-types */\nimport React , { useEffect, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { Controller, useForm, SubmitHandler } from 'react-hook-form';\nimport axios, { AxiosError } from 'axios';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { BrowserRouter as Router, Route, Switch, useParams, useHistory, useLocation, } from 'react-router-dom';\nimport clsx from 'clsx';\nimport {\n  ISignInFormValues,\n  ISignInSuccessAdminResponse,\n  IErrorResponse,\n  IServerMessages,\n} from '../../interfaces';\nimport { setHeaders, setCurrentMasterAdmin } from '../../slices/master_admin';\nimport Paper from '@material-ui/core/Paper';\nimport errorMessages from '../../constants/errorMessages.json';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: '#4DA7F0',\n    '&:hover': {\n      backgroundColor: '#4DA7F0',\n    },\n  },\n  buttonProgress: {\n    color: '#4DA7F0',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function MasterAdminLogIn() {\n    const url = `/v1/master_admin_auth/sign_in`\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { control, errors, handleSubmit } = useForm<ISignInFormValues>();\n    const [serverMessages, setServerMessages] = useState<IServerMessages>();\n    const [snackOpen, setSnackOpen] = React.useState(false);\n    const [errorMessage, setErrorMessage] = React.useState();\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n\n    const handleSnackbarClick = () => {\n      setSnackOpen(true);\n    };\n    const handleSnackbarClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n      setSnackOpen(false);\n    };\n    const onSubmit = (data: SubmitHandler<ISignInFormValues>) => {\n      console.log({data})\n      if (!loading) {\n        setSuccess(false);\n        setLoading(true);\n      }\n      axios\n      .post<ISignInSuccessAdminResponse>(url, data)\n      .then((res) => {\n        setSuccess(true);\n        setLoading(false);\n        console.log(\"マスタ　管理者\",{res})\n        dispatch(setCurrentMasterAdmin(res.data.data));\n        dispatch(setHeaders(res.headers));\n        history.push('/');\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log({err})\n      });\n  };\n\n  return (\n    <>\n    <Box my={5}>\n      <Container maxWidth=\"xs\">\n        <Paper>\n        <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n          <Box p={2}>\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>\n                マスタ管理者ログイン\n            </Typography>\n            {/* <ServerAlert serverMessages={serverMessages} /> */}\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n              <Box mb={2}>\n                <Controller\n                  name=\"email\"\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: {\n                      value: true,\n                      message:\n                        errorMessages.email.text + errorMessages.required,\n                    },\n                    maxLength: {\n                      value: errorMessages.email.maxLength,\n                      message:\n                        errorMessages.email.text +\n                        errorMessages.is +\n                        String(errorMessages.email.maxLength) +\n                        errorMessages.maxLength,\n                    },\n                  }}\n                  render={({ ref, value, onChange }, { invalid }) => (\n                    <TextField\n                      variant=\"outlined\"\n                      label=\"メールアドレス\"\n                      error={invalid}\n                      // disabled={loading}\n                      fullWidth\n                      inputRef={ref}\n                      value={value as string}\n                      onChange={(e) => onChange(e.target.value)}\n                    />\n                  )}\n                />\n              </Box>\n              <Box mb={2}>\n                <Controller\n                  name=\"password\"\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: {\n                      value: true,\n                      message:\n                        errorMessages.password.text + errorMessages.required,\n                    },\n                    maxLength: {\n                      value: errorMessages.password.maxLength,\n                      message:\n                        errorMessages.password.text +\n                        errorMessages.is +\n                        String(errorMessages.password.maxLength) +\n                        errorMessages.maxLength,\n                    },\n                  }}\n                  render={({ ref, value, onChange }, { invalid }) => (\n                    <TextField\n                      type=\"password\"\n                      variant=\"outlined\"\n                      label=\"パスワード\"\n                      error={invalid}\n                      // disabled={loading}\n                      fullWidth\n                      inputRef={ref}\n                      value={value as string}\n                      onChange={(e) => onChange(e.target.value)}\n                    />\n                  )}\n                />\n              </Box>\n              <div className={classes.wrapper}>\n              <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  className={buttonClassname}\n                  disabled={loading || success}\n              >\n                ログインする\n              </Button>\n              {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n              </div>\n            </form>\n          </Box>\n        </div>\n        </Paper>\n      </Container>\n      {/* 追加 */}\n      <Snackbar  anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={snackOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\n        <Alert severity=\"error\" onClose={handleSnackbarClose}>{errorMessage}</Alert>\n      </Snackbar>\n      {/* 追加 */}\n    </Box>\n    </>\n  );\n}","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/trainers/login.tsx",["568","569","570","571","572","573","574","575","576","577","578","579","580","581"],"/* eslint-disable react/prop-types */\nimport React , { useEffect, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { Controller, useForm, SubmitHandler } from 'react-hook-form';\nimport axios, { AxiosError } from 'axios';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { BrowserRouter as Router, Route, Switch, useParams, useHistory, useLocation, } from 'react-router-dom';\nimport {\n  ISignInFormValues,\n  ISignInSuccessTrainerResponse,\n  IErrorResponse,\n  IServerMessages,\n} from '../../interfaces';\nimport { setHeaders, setCurrentTrainer } from '../../slices/trainer';\nimport Paper from '@material-ui/core/Paper';\nimport errorMessages from '../../constants/errorMessages.json';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction TrainerLogIn() {\n    const url = `/v1/trainer_auth/sign_in`\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { control, errors, handleSubmit } = useForm<ISignInFormValues>();\n    const [serverMessages, setServerMessages] = useState<IServerMessages>();\n\n    const onSubmit = (data: SubmitHandler<ISignInFormValues>) => {\n      // setLoading(true);\n      console.log({data})\n      axios\n      .post<ISignInSuccessTrainerResponse>(url, data)\n      .then((res) => {\n        console.log(\"trainer\", {res})\n        dispatch(setCurrentTrainer(res.data.data));\n        dispatch(setHeaders(res.headers));\n        history.push('/');\n      })\n      .catch((err: AxiosError<IErrorResponse>) => {\n        console.log(\"トレーナーログインエラー\")\n        setServerMessages({\n          severity: 'error',\n          alerts: err.response?.data.errors || [],\n        });\n      });\n  };\n\n  return (\n    <>\n    <Box my={5}>\n      <Container maxWidth=\"xs\">\n        <Paper>\n        <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n          <Box p={2}>\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>\n              トレーナーログイン\n            </Typography>\n            {/* <ServerAlert serverMessages={serverMessages} /> */}\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n              <Box mb={2}>\n                <Controller\n                  name=\"email\"\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: {\n                      value: true,\n                      message:\n                        errorMessages.email.text + errorMessages.required,\n                    },\n                    maxLength: {\n                      value: errorMessages.email.maxLength,\n                      message:\n                        errorMessages.email.text +\n                        errorMessages.is +\n                        String(errorMessages.email.maxLength) +\n                        errorMessages.maxLength,\n                    },\n                  }}\n                  render={({ ref, value, onChange }, { invalid }) => (\n                    <TextField\n                      variant=\"outlined\"\n                      label=\"メールアドレス\"\n                      error={invalid}\n                      // disabled={loading}\n                      fullWidth\n                      inputRef={ref}\n                      value={value as string}\n                      onChange={(e) => onChange(e.target.value)}\n                    />\n                  )}\n                />\n              </Box>\n              <Box mb={2}>\n                <Controller\n                  name=\"password\"\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: {\n                      value: true,\n                      message:\n                        errorMessages.password.text + errorMessages.required,\n                    },\n                    maxLength: {\n                      value: errorMessages.password.maxLength,\n                      message:\n                        errorMessages.password.text +\n                        errorMessages.is +\n                        String(errorMessages.password.maxLength) +\n                        errorMessages.maxLength,\n                    },\n                  }}\n                  render={({ ref, value, onChange }, { invalid }) => (\n                    <TextField\n                      type=\"password\"\n                      variant=\"outlined\"\n                      label=\"パスワード\"\n                      error={invalid}\n                      // disabled={loading}\n                      fullWidth\n                      inputRef={ref}\n                      value={value as string}\n                      onChange={(e) => onChange(e.target.value)}\n                    />\n                  )}\n                />\n                {/* <ErrorMessage\n                  errors={errors}\n                  name=\"password\"\n                  render={({ message }) => (\n                    <Alert severity=\"error\">{message}</Alert>\n                  )}\n                /> */}\n              </Box>\n              {/* <LoadingButton loading={loading} primary=\"SignIn\" /> */}\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                ログインする\n              </Button>\n            </form>\n          </Box>\n        </div>\n        </Paper>\n      </Container>\n    </Box>\n    </>\n  );\n}\n\nexport default TrainerLogIn;","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/applications/sign_in.jsx",["582","583","584","585"],"/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/evaluation.jsx",["586","587","588","589","590","591","592","593","594","595","596"],"/* eslint-disable react/prop-types */\nimport React,{ useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport axios, { AxiosError } from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Controller, useForm, SubmitHandler } from 'react-hook-form';\nimport { setCustomerRecords, customerRecordRemove, getCustomerRecords } from '../../slices/customer_record';\nimport { selectCurrentCustomer, selectCustomerHeaders, customerRemove } from '../../slices/customer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Rating from '@material-ui/lab/Rating';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '80%',\n    color: '#555555',\n    backgroundColor: 'white',\n    borderColor: '#4DA7F0',\n    textAlign: 'center',\n    // display: 'flex',\n    // alignItems: 'center',\n  },\n  checked: {\n    marginRight: theme.spacing(1),\n    backgroundColor: 'silver',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: '#4DA7F0',\n    '&:hover': {\n      backgroundColor: '#4DA7F0',\n    },\n  },\n  buttonProgress: {\n    color: '#4DA7F0',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nfunction RecordDialog({session}) {\n    const [open, setOpen] = useState(true);\n    const [value, setValue] = React.useState(0);\n    const [food, setFood] = React.useState(0);\n    const dispatch = useDispatch();\n    const customerHeader = useSelector(selectCustomerHeaders);\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const menues = session.menues\n    const classes = useStyles();\n    const show_menues = menues.map((menu,index) =>\n        <div key={index}>・{menu.fitness_name}/{menu.fitness_third_name}:{menu.weight}Kg×{menu.time}回</div>\n    );\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n    function handleSubmit(e) {\n        console.log({e})\n        if (!loading) {\n            setSuccess(false);\n            setLoading(true);\n        }\n        const url = `/evaluations`\n        axios.post( url, {\n            trainer_id:  e.trainer_id,\n            customer_id: e.customer_id,\n            customer_record_id: e.id,\n            food_score: food,\n            trainer_score: value\n        },customerHeader )\n        .then(function (response) {\n            console.log({response})\n            setSuccess(true);\n            setLoading(false);\n            setOpen(false);\n            if(response.data.evaluations.length){\n                dispatch(setCustomerRecords(response.data.evaluations));\n            }else{\n                dispatch(customerRecordRemove());\n            }\n        })\n        .catch(function (response) {\n            dispatch(customerRemove());\n            dispatch(customerRecordRemove());\n            setLoading(false);\n            console.log(response.data);\n        })\n    }\n    return(\n        <>\n            <Dialog\n                open={open}\n                // onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n            <Card className={ classes.root } variant=\"outlined\">\n            <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom style={{textAlign: 'center'}}>\n                    トレーナーからのフィードバック<br/>\n                    <div style={{textAlign: 'left'}}>{ session.month }/{ session.day }\n                     担当: トレーナー名\n                    </div>\n                </Typography>\n                <Typography color=\"textSecondary\" gutterBottom >\n\n                <Accordion>\n                    <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                    >\n                    <Typography >セッション詳細</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                    <Typography style={{textAlign: 'left', fontSize: '0.8em'}}>\n                        { show_menues }\n                    </Typography>\n                    </AccordionDetails>\n                </Accordion>\n\n                </Typography>\n                <Typography  style={{fontSize: 15}}>\n                    セッションはいかがでしたか？\n                </Typography>\n                <Typography  color=\"textSecondary\">\n                    <Rating\n                        name=\"simple-controlled-session\"\n                        size=\"large\"\n                        value={ value }\n                        onChange={(event, newValue) => {\n                            setValue(newValue);\n                        }}\n                    />\n                </Typography>\n                <Typography style={{fontSize: 15}}>\n                食事はいかがでしたか？\n                </Typography>\n                <Typography  color=\"textSecondary\">\n                    <Rating\n                        name=\"simple-controlled-food\"\n                        size=\"large\"\n                        food={ food }\n                        onChange={(event, newValue) => {\n                            setFood(newValue);\n                        }}\n                    />\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                <br/>\n                </Typography>\n            </CardContent>\n            <CardActions>\n                {\n                    value==0||food==0?\n                    (<Button variant=\"contained\" style={{width: '90%', marginRight: 'auto', marginLeft: 'auto'}} disabled>\n                        送信\n                        </Button>)\n                    :\n                    (<>\n                        {/* <div className={classes.wrapper}> */}\n                            <Button size=\"large\" color=\"secondary\" \n                                style={{width: '90%', marginRight: 'auto', marginLeft: 'auto'}} \n                                onClick={() => handleSubmit(session)} variant=\"contained\"\n                                disabled={loading || success}\n                            >\n                                送信\n                            </Button>\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        {/* </div> */}\n                    </>)\n                }\n            </CardActions>\n            </Card>\n            </Dialog>\n        </>);\n}\n\n\nexport default function Evaluation(props) {\n    const classes = useStyles();\n    const customerRecords = useSelector(getCustomerRecords);\n    function CustomerRecordsDialog() {\n        if (customerRecords){\n            if(customerRecords.length){\n                console.log({customerRecords})\n                const this_session = customerRecords.slice(-1)[0]\n                return (\n                    <RecordDialog session={ this_session } />\n                )\n            }\n        }\n    }\n    return (\n    <div>\n        <CustomerRecordsDialog/>\n    </div>\n    );\n}\n","/Users/katoatsushi/Desktop/room-app/room-frontend/src/components/customers/login_snackbar.jsx",["597","598","599","600","601"],"import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomizedSnackbars(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n            メールアドレスとパスワードの組み合わせが違います\n        </Alert>\n      </Snackbar>\n      {/* <Alert severity=\"error\">This is an error message!</Alert>\n      <Alert severity=\"warning\">This is a warning message!</Alert>\n      <Alert severity=\"info\">This is an information message!</Alert>\n      <Alert severity=\"success\">This is a success message!</Alert> */}\n    </div>\n  );\n}\n",{"ruleId":"602","severity":1,"message":"603","line":42,"column":1,"nodeType":"604","messageId":"605","endLine":42,"endColumn":18},{"ruleId":"606","severity":1,"message":"607","line":94,"column":15,"nodeType":"608","messageId":"609","endLine":94,"endColumn":18},{"ruleId":"602","severity":1,"message":"603","line":96,"column":16,"nodeType":"604","messageId":"605","endLine":96,"endColumn":46},{"ruleId":"602","severity":1,"message":"603","line":149,"column":16,"nodeType":"604","messageId":"605","endLine":149,"endColumn":38},{"ruleId":"606","severity":1,"message":"610","line":153,"column":12,"nodeType":"608","messageId":"609","endLine":153,"endColumn":23},{"ruleId":"606","severity":1,"message":"611","line":2,"column":18,"nodeType":"608","messageId":"609","endLine":2,"endColumn":27},{"ruleId":"606","severity":1,"message":"612","line":5,"column":8,"nodeType":"608","messageId":"609","endLine":5,"endColumn":19},{"ruleId":"606","severity":1,"message":"613","line":8,"column":8,"nodeType":"608","messageId":"609","endLine":8,"endColumn":24},{"ruleId":"606","severity":1,"message":"614","line":9,"column":8,"nodeType":"608","messageId":"609","endLine":9,"endColumn":16},{"ruleId":"606","severity":1,"message":"615","line":10,"column":8,"nodeType":"608","messageId":"609","endLine":10,"endColumn":12},{"ruleId":"606","severity":1,"message":"616","line":11,"column":8,"nodeType":"608","messageId":"609","endLine":11,"endColumn":12},{"ruleId":"606","severity":1,"message":"617","line":14,"column":17,"nodeType":"608","messageId":"609","endLine":14,"endColumn":27},{"ruleId":"606","severity":1,"message":"618","line":19,"column":27,"nodeType":"608","messageId":"609","endLine":19,"endColumn":33},{"ruleId":"606","severity":1,"message":"619","line":19,"column":35,"nodeType":"608","messageId":"609","endLine":19,"endColumn":40},{"ruleId":"606","severity":1,"message":"620","line":19,"column":42,"nodeType":"608","messageId":"609","endLine":19,"endColumn":48},{"ruleId":"606","severity":1,"message":"621","line":19,"column":50,"nodeType":"608","messageId":"609","endLine":19,"endColumn":59},{"ruleId":"606","severity":1,"message":"622","line":19,"column":73,"nodeType":"608","messageId":"609","endLine":19,"endColumn":84},{"ruleId":"606","severity":1,"message":"623","line":24,"column":3,"nodeType":"608","messageId":"609","endLine":24,"endColumn":17},{"ruleId":"602","severity":1,"message":"603","line":80,"column":16,"nodeType":"604","messageId":"605","endLine":80,"endColumn":37},{"ruleId":"606","severity":1,"message":"624","line":85,"column":22,"nodeType":"608","messageId":"609","endLine":85,"endColumn":28},{"ruleId":"606","severity":1,"message":"625","line":86,"column":12,"nodeType":"608","messageId":"609","endLine":86,"endColumn":26},{"ruleId":"606","severity":1,"message":"626","line":86,"column":28,"nodeType":"608","messageId":"609","endLine":86,"endColumn":45},{"ruleId":"606","severity":1,"message":"627","line":88,"column":26,"nodeType":"608","messageId":"609","endLine":88,"endColumn":41},{"ruleId":"606","severity":1,"message":"628","line":95,"column":11,"nodeType":"608","messageId":"609","endLine":95,"endColumn":30},{"ruleId":"606","severity":1,"message":"629","line":6,"column":23,"nodeType":"608","messageId":"609","endLine":6,"endColumn":34},{"ruleId":"606","severity":1,"message":"630","line":31,"column":33,"nodeType":"608","messageId":"609","endLine":31,"endColumn":54},{"ruleId":"606","severity":1,"message":"631","line":31,"column":56,"nodeType":"608","messageId":"609","endLine":31,"endColumn":70},{"ruleId":"602","severity":1,"message":"603","line":86,"column":16,"nodeType":"604","messageId":"605","endLine":86,"endColumn":45},{"ruleId":"606","severity":1,"message":"632","line":96,"column":12,"nodeType":"608","messageId":"609","endLine":96,"endColumn":19},{"ruleId":"606","severity":1,"message":"633","line":103,"column":11,"nodeType":"608","messageId":"609","endLine":103,"endColumn":18},{"ruleId":"606","severity":1,"message":"634","line":106,"column":11,"nodeType":"608","messageId":"609","endLine":106,"endColumn":23},{"ruleId":"602","severity":1,"message":"603","line":34,"column":16,"nodeType":"604","messageId":"605","endLine":34,"endColumn":101},{"ruleId":"602","severity":1,"message":"635","line":34,"column":45,"nodeType":"636","messageId":"637","endLine":34,"endColumn":100},{"ruleId":"606","severity":1,"message":"638","line":17,"column":8,"nodeType":"608","messageId":"609","endLine":17,"endColumn":20},{"ruleId":"602","severity":1,"message":"603","line":67,"column":16,"nodeType":"604","messageId":"605","endLine":67,"endColumn":148},{"ruleId":"602","severity":1,"message":"635","line":67,"column":44,"nodeType":"636","messageId":"637","endLine":67,"endColumn":147},{"ruleId":"602","severity":1,"message":"603","line":41,"column":24,"nodeType":"639","messageId":"605","endLine":41,"endColumn":34},{"ruleId":"602","severity":1,"message":"640","line":41,"column":25,"nodeType":"608","messageId":"641","endLine":41,"endColumn":30},{"ruleId":"606","severity":1,"message":"642","line":45,"column":13,"nodeType":"608","messageId":"609","endLine":45,"endColumn":21},{"ruleId":"606","severity":1,"message":"643","line":50,"column":12,"nodeType":"608","messageId":"609","endLine":50,"endColumn":19},{"ruleId":"602","severity":1,"message":"603","line":11,"column":16,"nodeType":"604","messageId":"605","endLine":11,"endColumn":40},{"ruleId":"602","severity":1,"message":"640","line":11,"column":34,"nodeType":"608","messageId":"641","endLine":11,"endColumn":39},{"ruleId":"602","severity":1,"message":"603","line":8,"column":16,"nodeType":"604","messageId":"605","endLine":8,"endColumn":40},{"ruleId":"602","severity":1,"message":"640","line":8,"column":34,"nodeType":"608","messageId":"641","endLine":8,"endColumn":39},{"ruleId":"606","severity":1,"message":"629","line":10,"column":23,"nodeType":"608","messageId":"609","endLine":10,"endColumn":34},{"ruleId":"606","severity":1,"message":"644","line":16,"column":10,"nodeType":"608","messageId":"609","endLine":16,"endColumn":34},{"ruleId":"606","severity":1,"message":"645","line":16,"column":62,"nodeType":"608","messageId":"609","endLine":16,"endColumn":79},{"ruleId":"602","severity":1,"message":"603","line":75,"column":1,"nodeType":"604","messageId":"605","endLine":75,"endColumn":28},{"ruleId":"602","severity":1,"message":"640","line":75,"column":22,"nodeType":"608","messageId":"641","endLine":75,"endColumn":27},{"ruleId":"606","severity":1,"message":"646","line":96,"column":13,"nodeType":"608","messageId":"609","endLine":96,"endColumn":26},{"ruleId":"602","severity":1,"message":"603","line":38,"column":16,"nodeType":"604","messageId":"605","endLine":38,"endColumn":46},{"ruleId":"602","severity":1,"message":"640","line":38,"column":40,"nodeType":"608","messageId":"641","endLine":38,"endColumn":45},{"ruleId":"602","severity":1,"message":"603","line":28,"column":16,"nodeType":"604","messageId":"605","endLine":28,"endColumn":45},{"ruleId":"602","severity":1,"message":"640","line":28,"column":39,"nodeType":"608","messageId":"641","endLine":28,"endColumn":44},{"ruleId":"606","severity":1,"message":"647","line":35,"column":9,"nodeType":"608","messageId":"609","endLine":35,"endColumn":30},{"ruleId":"602","severity":1,"message":"603","line":51,"column":16,"nodeType":"604","messageId":"605","endLine":51,"endColumn":36},{"ruleId":"606","severity":1,"message":"648","line":4,"column":10,"nodeType":"608","messageId":"609","endLine":4,"endColumn":23},{"ruleId":"606","severity":1,"message":"649","line":10,"column":10,"nodeType":"608","messageId":"609","endLine":10,"endColumn":21},{"ruleId":"606","severity":1,"message":"650","line":16,"column":7,"nodeType":"608","messageId":"609","endLine":16,"endColumn":15},{"ruleId":"602","severity":1,"message":"603","line":63,"column":16,"nodeType":"604","messageId":"605","endLine":63,"endColumn":46},{"ruleId":"602","severity":1,"message":"640","line":63,"column":40,"nodeType":"608","messageId":"641","endLine":63,"endColumn":45},{"ruleId":"606","severity":1,"message":"651","line":74,"column":9,"nodeType":"608","messageId":"609","endLine":74,"endColumn":14},{"ruleId":"606","severity":1,"message":"652","line":85,"column":10,"nodeType":"608","messageId":"609","endLine":85,"endColumn":28},{"ruleId":"606","severity":1,"message":"653","line":60,"column":40,"nodeType":"608","messageId":"609","endLine":60,"endColumn":45},{"ruleId":"606","severity":1,"message":"654","line":60,"column":47,"nodeType":"608","messageId":"609","endLine":60,"endColumn":53},{"ruleId":"602","severity":1,"message":"603","line":78,"column":16,"nodeType":"604","messageId":"605","endLine":78,"endColumn":46},{"ruleId":"602","severity":1,"message":"640","line":78,"column":40,"nodeType":"608","messageId":"641","endLine":78,"endColumn":45},{"ruleId":"602","severity":1,"message":"603","line":8,"column":16,"nodeType":"604","messageId":"605","endLine":8,"endColumn":36},{"ruleId":"602","severity":1,"message":"603","line":19,"column":16,"nodeType":"604","messageId":"605","endLine":19,"endColumn":38},{"ruleId":"602","severity":1,"message":"603","line":42,"column":16,"nodeType":"604","messageId":"605","endLine":42,"endColumn":66},{"ruleId":"602","severity":1,"message":"635","line":42,"column":39,"nodeType":"636","messageId":"637","endLine":42,"endColumn":65},{"ruleId":"606","severity":1,"message":"655","line":116,"column":14,"nodeType":"608","messageId":"609","endLine":116,"endColumn":29},{"ruleId":"606","severity":1,"message":"656","line":124,"column":34,"nodeType":"608","messageId":"609","endLine":124,"endColumn":38},{"ruleId":"602","severity":1,"message":"603","line":77,"column":1,"nodeType":"604","messageId":"605","endLine":77,"endColumn":25},{"ruleId":"602","severity":1,"message":"603","line":154,"column":16,"nodeType":"604","messageId":"605","endLine":154,"endColumn":39},{"ruleId":"602","severity":1,"message":"603","line":32,"column":38,"nodeType":"639","messageId":"605","endLine":32,"endColumn":48},{"ruleId":"602","severity":1,"message":"640","line":32,"column":39,"nodeType":"608","messageId":"641","endLine":32,"endColumn":44},{"ruleId":"602","severity":1,"message":"603","line":53,"column":28,"nodeType":"639","messageId":"605","endLine":53,"endColumn":38},{"ruleId":"602","severity":1,"message":"640","line":53,"column":29,"nodeType":"608","messageId":"641","endLine":53,"endColumn":34},{"ruleId":"606","severity":1,"message":"657","line":62,"column":11,"nodeType":"608","messageId":"609","endLine":62,"endColumn":26},{"ruleId":"602","severity":1,"message":"603","line":16,"column":28,"nodeType":"639","messageId":"605","endLine":16,"endColumn":38},{"ruleId":"602","severity":1,"message":"640","line":16,"column":29,"nodeType":"608","messageId":"641","endLine":16,"endColumn":34},{"ruleId":"602","severity":1,"message":"603","line":107,"column":16,"nodeType":"604","messageId":"605","endLine":107,"endColumn":44},{"ruleId":"602","severity":1,"message":"640","line":107,"column":38,"nodeType":"608","messageId":"641","endLine":107,"endColumn":43},{"ruleId":"606","severity":1,"message":"658","line":48,"column":40,"nodeType":"608","messageId":"609","endLine":48,"endColumn":44},{"ruleId":"606","severity":1,"message":"658","line":59,"column":40,"nodeType":"608","messageId":"609","endLine":59,"endColumn":44},{"ruleId":"602","severity":1,"message":"603","line":90,"column":16,"nodeType":"604","messageId":"605","endLine":90,"endColumn":49},{"ruleId":"602","severity":1,"message":"640","line":90,"column":43,"nodeType":"608","messageId":"641","endLine":90,"endColumn":48},{"ruleId":"606","severity":1,"message":"651","line":98,"column":13,"nodeType":"608","messageId":"609","endLine":98,"endColumn":18},{"ruleId":"606","severity":1,"message":"615","line":15,"column":10,"nodeType":"608","messageId":"609","endLine":15,"endColumn":14},{"ruleId":"602","severity":1,"message":"603","line":17,"column":24,"nodeType":"639","messageId":"605","endLine":17,"endColumn":29},{"ruleId":"602","severity":1,"message":"603","line":65,"column":16,"nodeType":"604","messageId":"605","endLine":65,"endColumn":44},{"ruleId":"606","severity":1,"message":"659","line":132,"column":14,"nodeType":"608","messageId":"609","endLine":132,"endColumn":20},{"ruleId":"606","severity":1,"message":"658","line":63,"column":30,"nodeType":"608","messageId":"609","endLine":63,"endColumn":34},{"ruleId":"606","severity":1,"message":"658","line":69,"column":30,"nodeType":"608","messageId":"609","endLine":69,"endColumn":34},{"ruleId":"602","severity":1,"message":"603","line":81,"column":16,"nodeType":"604","messageId":"605","endLine":81,"endColumn":51},{"ruleId":"602","severity":1,"message":"640","line":81,"column":45,"nodeType":"608","messageId":"641","endLine":81,"endColumn":50},{"ruleId":"606","severity":1,"message":"657","line":89,"column":11,"nodeType":"608","messageId":"609","endLine":89,"endColumn":26},{"ruleId":"602","severity":1,"message":"603","line":14,"column":16,"nodeType":"604","messageId":"605","endLine":14,"endColumn":42},{"ruleId":"602","severity":1,"message":"640","line":14,"column":36,"nodeType":"608","messageId":"641","endLine":14,"endColumn":41},{"ruleId":"606","severity":1,"message":"611","line":2,"column":18,"nodeType":"608","messageId":"609","endLine":2,"endColumn":27},{"ruleId":"606","severity":1,"message":"618","line":16,"column":27,"nodeType":"608","messageId":"609","endLine":16,"endColumn":33},{"ruleId":"606","severity":1,"message":"619","line":16,"column":35,"nodeType":"608","messageId":"609","endLine":16,"endColumn":40},{"ruleId":"606","severity":1,"message":"620","line":16,"column":42,"nodeType":"608","messageId":"609","endLine":16,"endColumn":48},{"ruleId":"606","severity":1,"message":"621","line":16,"column":50,"nodeType":"608","messageId":"609","endLine":16,"endColumn":59},{"ruleId":"606","severity":1,"message":"622","line":16,"column":73,"nodeType":"608","messageId":"609","endLine":16,"endColumn":84},{"ruleId":"602","severity":1,"message":"603","line":47,"column":1,"nodeType":"604","messageId":"605","endLine":47,"endColumn":29},{"ruleId":"602","severity":1,"message":"640","line":47,"column":23,"nodeType":"608","messageId":"641","endLine":47,"endColumn":28},{"ruleId":"606","severity":1,"message":"624","line":51,"column":22,"nodeType":"608","messageId":"609","endLine":51,"endColumn":28},{"ruleId":"606","severity":1,"message":"625","line":52,"column":12,"nodeType":"608","messageId":"609","endLine":52,"endColumn":26},{"ruleId":"606","severity":1,"message":"660","line":62,"column":16,"nodeType":"608","messageId":"609","endLine":62,"endColumn":19},{"ruleId":"602","severity":1,"message":"603","line":50,"column":16,"nodeType":"604","messageId":"605","endLine":50,"endColumn":45},{"ruleId":"602","severity":1,"message":"640","line":50,"column":39,"nodeType":"608","messageId":"641","endLine":50,"endColumn":44},{"ruleId":"606","severity":1,"message":"657","line":60,"column":11,"nodeType":"608","messageId":"609","endLine":60,"endColumn":26},{"ruleId":"602","severity":1,"message":"603","line":95,"column":1,"nodeType":"604","messageId":"605","endLine":95,"endColumn":18},{"ruleId":"602","severity":1,"message":"603","line":55,"column":16,"nodeType":"604","messageId":"605","endLine":55,"endColumn":55},{"ruleId":"606","severity":1,"message":"630","line":7,"column":33,"nodeType":"608","messageId":"609","endLine":7,"endColumn":54},{"ruleId":"606","severity":1,"message":"631","line":7,"column":56,"nodeType":"608","messageId":"609","endLine":7,"endColumn":70},{"ruleId":"606","severity":1,"message":"661","line":8,"column":10,"nodeType":"608","messageId":"609","endLine":8,"endColumn":28},{"ruleId":"606","severity":1,"message":"662","line":8,"column":30,"nodeType":"608","messageId":"609","endLine":8,"endColumn":50},{"ruleId":"602","severity":1,"message":"603","line":13,"column":16,"nodeType":"604","messageId":"605","endLine":13,"endColumn":31},{"ruleId":"602","severity":1,"message":"603","line":49,"column":16,"nodeType":"604","messageId":"605","endLine":49,"endColumn":50},{"ruleId":"602","severity":1,"message":"640","line":49,"column":44,"nodeType":"608","messageId":"641","endLine":49,"endColumn":49},{"ruleId":"602","severity":1,"message":"603","line":132,"column":16,"nodeType":"604","messageId":"605","endLine":132,"endColumn":45},{"ruleId":"606","severity":1,"message":"663","line":142,"column":10,"nodeType":"608","messageId":"609","endLine":142,"endColumn":16},{"ruleId":"602","severity":1,"message":"603","line":75,"column":16,"nodeType":"604","messageId":"605","endLine":75,"endColumn":100},{"ruleId":"602","severity":1,"message":"635","line":75,"column":47,"nodeType":"636","messageId":"637","endLine":75,"endColumn":99},{"ruleId":"606","severity":1,"message":"664","line":75,"column":77,"nodeType":"608","messageId":"609","endLine":75,"endColumn":98},{"ruleId":"606","severity":1,"message":"665","line":2,"column":18,"nodeType":"608","messageId":"609","endLine":2,"endColumn":26},{"ruleId":"606","severity":1,"message":"611","line":2,"column":28,"nodeType":"608","messageId":"609","endLine":2,"endColumn":37},{"ruleId":"602","severity":1,"message":"603","line":5,"column":16,"nodeType":"604","messageId":"605","endLine":5,"endColumn":51},{"ruleId":"602","severity":1,"message":"635","line":5,"column":39,"nodeType":"636","messageId":"637","endLine":5,"endColumn":50},{"ruleId":"606","severity":1,"message":"666","line":10,"column":8,"nodeType":"608","messageId":"609","endLine":10,"endColumn":25},{"ruleId":"606","severity":1,"message":"630","line":12,"column":32,"nodeType":"608","messageId":"609","endLine":12,"endColumn":53},{"ruleId":"606","severity":1,"message":"631","line":12,"column":55,"nodeType":"608","messageId":"609","endLine":12,"endColumn":69},{"ruleId":"602","severity":1,"message":"603","line":39,"column":1,"nodeType":"604","messageId":"605","endLine":39,"endColumn":18},{"ruleId":"602","severity":1,"message":"603","line":9,"column":20,"nodeType":"639","messageId":"605","endLine":9,"endColumn":30},{"ruleId":"602","severity":1,"message":"640","line":9,"column":21,"nodeType":"608","messageId":"641","endLine":9,"endColumn":26},{"ruleId":"602","severity":1,"message":"603","line":36,"column":1,"nodeType":"604","messageId":"605","endLine":36,"endColumn":25},{"ruleId":"602","severity":1,"message":"603","line":33,"column":30,"nodeType":"639","messageId":"605","endLine":33,"endColumn":40},{"ruleId":"602","severity":1,"message":"640","line":33,"column":31,"nodeType":"608","messageId":"641","endLine":33,"endColumn":36},{"ruleId":"602","severity":1,"message":"603","line":9,"column":16,"nodeType":"604","messageId":"605","endLine":9,"endColumn":40},{"ruleId":"602","severity":1,"message":"640","line":9,"column":34,"nodeType":"608","messageId":"641","endLine":9,"endColumn":39},{"ruleId":"602","severity":1,"message":"603","line":130,"column":16,"nodeType":"604","messageId":"605","endLine":130,"endColumn":40},{"ruleId":"606","severity":1,"message":"663","line":141,"column":12,"nodeType":"608","messageId":"609","endLine":141,"endColumn":18},{"ruleId":"606","severity":1,"message":"658","line":33,"column":24,"nodeType":"608","messageId":"609","endLine":33,"endColumn":28},{"ruleId":"606","severity":1,"message":"658","line":45,"column":24,"nodeType":"608","messageId":"609","endLine":45,"endColumn":28},{"ruleId":"602","severity":1,"message":"603","line":70,"column":16,"nodeType":"604","messageId":"605","endLine":70,"endColumn":46},{"ruleId":"602","severity":1,"message":"640","line":70,"column":40,"nodeType":"608","messageId":"641","endLine":70,"endColumn":45},{"ruleId":"602","severity":1,"message":"603","line":26,"column":1,"nodeType":"604","messageId":"605","endLine":26,"endColumn":35},{"ruleId":"602","severity":1,"message":"640","line":26,"column":29,"nodeType":"608","messageId":"641","endLine":26,"endColumn":34},{"ruleId":"602","severity":1,"message":"603","line":26,"column":19,"nodeType":"639","messageId":"605","endLine":26,"endColumn":27},{"ruleId":"602","severity":1,"message":"640","line":26,"column":19,"nodeType":"608","messageId":"641","endLine":26,"endColumn":24},{"ruleId":"606","severity":1,"message":"667","line":28,"column":10,"nodeType":"608","messageId":"609","endLine":28,"endColumn":18},{"ruleId":"602","severity":1,"message":"603","line":8,"column":1,"nodeType":"604","messageId":"605","endLine":8,"endColumn":24},{"ruleId":"602","severity":1,"message":"640","line":8,"column":18,"nodeType":"608","messageId":"641","endLine":8,"endColumn":23},{"ruleId":"606","severity":1,"message":"668","line":15,"column":25,"nodeType":"608","messageId":"609","endLine":15,"endColumn":41},{"ruleId":"602","severity":1,"message":"603","line":20,"column":16,"nodeType":"604","messageId":"605","endLine":20,"endColumn":47},{"ruleId":"602","severity":1,"message":"640","line":20,"column":41,"nodeType":"608","messageId":"641","endLine":20,"endColumn":46},{"ruleId":"669","severity":2,"message":"670","line":4,"column":8,"nodeType":"608","messageId":"609","endLine":4,"endColumn":20},{"ruleId":"669","severity":2,"message":"671","line":8,"column":8,"nodeType":"608","messageId":"609","endLine":8,"endColumn":17},{"ruleId":"602","severity":1,"message":"603","line":30,"column":16,"nodeType":"604","messageId":"605","endLine":30,"endColumn":75},{"ruleId":"602","severity":1,"message":"635","line":30,"column":47,"nodeType":"636","messageId":"637","endLine":30,"endColumn":74},{"ruleId":"602","severity":1,"message":"603","line":6,"column":16,"nodeType":"604","messageId":"605","endLine":6,"endColumn":41},{"ruleId":"602","severity":1,"message":"640","line":6,"column":35,"nodeType":"608","messageId":"641","endLine":6,"endColumn":40},{"ruleId":"602","severity":1,"message":"603","line":8,"column":16,"nodeType":"604","messageId":"605","endLine":8,"endColumn":47},{"ruleId":"602","severity":1,"message":"640","line":8,"column":41,"nodeType":"608","messageId":"641","endLine":8,"endColumn":46},{"ruleId":"606","severity":1,"message":"665","line":2,"column":29,"nodeType":"608","messageId":"609","endLine":2,"endColumn":37},{"ruleId":"606","severity":1,"message":"672","line":3,"column":8,"nodeType":"608","messageId":"609","endLine":3,"endColumn":14},{"ruleId":"606","severity":1,"message":"673","line":4,"column":8,"nodeType":"608","messageId":"609","endLine":4,"endColumn":14},{"ruleId":"606","severity":1,"message":"615","line":5,"column":8,"nodeType":"608","messageId":"609","endLine":5,"endColumn":12},{"ruleId":"606","severity":1,"message":"674","line":7,"column":8,"nodeType":"608","messageId":"609","endLine":7,"endColumn":11},{"ruleId":"606","severity":1,"message":"675","line":8,"column":8,"nodeType":"608","messageId":"609","endLine":8,"endColumn":17},{"ruleId":"606","severity":1,"message":"618","line":9,"column":27,"nodeType":"608","messageId":"609","endLine":9,"endColumn":33},{"ruleId":"606","severity":1,"message":"619","line":9,"column":35,"nodeType":"608","messageId":"609","endLine":9,"endColumn":40},{"ruleId":"606","severity":1,"message":"620","line":9,"column":42,"nodeType":"608","messageId":"609","endLine":9,"endColumn":48},{"ruleId":"606","severity":1,"message":"621","line":9,"column":50,"nodeType":"608","messageId":"609","endLine":9,"endColumn":59},{"ruleId":"606","severity":1,"message":"676","line":9,"column":61,"nodeType":"608","messageId":"609","endLine":9,"endColumn":71},{"ruleId":"606","severity":1,"message":"622","line":9,"column":73,"nodeType":"608","messageId":"609","endLine":9,"endColumn":84},{"ruleId":"606","severity":1,"message":"677","line":10,"column":8,"nodeType":"608","messageId":"609","endLine":10,"endColumn":13},{"ruleId":"606","severity":1,"message":"678","line":13,"column":8,"nodeType":"608","messageId":"609","endLine":13,"endColumn":17},{"ruleId":"606","severity":1,"message":"679","line":14,"column":8,"nodeType":"608","messageId":"609","endLine":14,"endColumn":14},{"ruleId":"602","severity":1,"message":"603","line":19,"column":1,"nodeType":"604","messageId":"605","endLine":19,"endColumn":29},{"ruleId":"602","severity":1,"message":"640","line":19,"column":23,"nodeType":"608","messageId":"641","endLine":19,"endColumn":28},{"ruleId":"606","severity":1,"message":"611","line":2,"column":18,"nodeType":"608","messageId":"609","endLine":2,"endColumn":27},{"ruleId":"606","severity":1,"message":"612","line":5,"column":8,"nodeType":"608","messageId":"609","endLine":5,"endColumn":19},{"ruleId":"606","severity":1,"message":"613","line":8,"column":8,"nodeType":"608","messageId":"609","endLine":8,"endColumn":24},{"ruleId":"606","severity":1,"message":"614","line":9,"column":8,"nodeType":"608","messageId":"609","endLine":9,"endColumn":16},{"ruleId":"606","severity":1,"message":"618","line":20,"column":27,"nodeType":"608","messageId":"609","endLine":20,"endColumn":33},{"ruleId":"606","severity":1,"message":"619","line":20,"column":35,"nodeType":"608","messageId":"609","endLine":20,"endColumn":40},{"ruleId":"606","severity":1,"message":"620","line":20,"column":42,"nodeType":"608","messageId":"609","endLine":20,"endColumn":48},{"ruleId":"606","severity":1,"message":"621","line":20,"column":50,"nodeType":"608","messageId":"609","endLine":20,"endColumn":59},{"ruleId":"606","severity":1,"message":"622","line":20,"column":73,"nodeType":"608","messageId":"609","endLine":20,"endColumn":84},{"ruleId":"606","severity":1,"message":"680","line":30,"column":8,"nodeType":"608","messageId":"609","endLine":30,"endColumn":29},{"ruleId":"606","severity":1,"message":"662","line":31,"column":30,"nodeType":"608","messageId":"609","endLine":31,"endColumn":50},{"ruleId":"602","severity":1,"message":"603","line":80,"column":16,"nodeType":"604","messageId":"605","endLine":80,"endColumn":32},{"ruleId":"606","severity":1,"message":"624","line":86,"column":22,"nodeType":"608","messageId":"609","endLine":86,"endColumn":28},{"ruleId":"606","severity":1,"message":"625","line":87,"column":12,"nodeType":"608","messageId":"609","endLine":87,"endColumn":26},{"ruleId":"606","severity":1,"message":"681","line":88,"column":11,"nodeType":"608","messageId":"609","endLine":88,"endColumn":26},{"ruleId":"606","severity":1,"message":"611","line":2,"column":18,"nodeType":"608","messageId":"609","endLine":2,"endColumn":27},{"ruleId":"606","severity":1,"message":"612","line":5,"column":8,"nodeType":"608","messageId":"609","endLine":5,"endColumn":19},{"ruleId":"606","severity":1,"message":"613","line":8,"column":8,"nodeType":"608","messageId":"609","endLine":8,"endColumn":24},{"ruleId":"606","severity":1,"message":"614","line":9,"column":8,"nodeType":"608","messageId":"609","endLine":9,"endColumn":16},{"ruleId":"606","severity":1,"message":"615","line":10,"column":8,"nodeType":"608","messageId":"609","endLine":10,"endColumn":12},{"ruleId":"606","severity":1,"message":"616","line":11,"column":8,"nodeType":"608","messageId":"609","endLine":11,"endColumn":12},{"ruleId":"606","severity":1,"message":"617","line":14,"column":17,"nodeType":"608","messageId":"609","endLine":14,"endColumn":27},{"ruleId":"606","severity":1,"message":"618","line":19,"column":27,"nodeType":"608","messageId":"609","endLine":19,"endColumn":33},{"ruleId":"606","severity":1,"message":"619","line":19,"column":35,"nodeType":"608","messageId":"609","endLine":19,"endColumn":40},{"ruleId":"606","severity":1,"message":"620","line":19,"column":42,"nodeType":"608","messageId":"609","endLine":19,"endColumn":48},{"ruleId":"606","severity":1,"message":"621","line":19,"column":50,"nodeType":"608","messageId":"609","endLine":19,"endColumn":59},{"ruleId":"606","severity":1,"message":"622","line":19,"column":73,"nodeType":"608","messageId":"609","endLine":19,"endColumn":84},{"ruleId":"606","severity":1,"message":"623","line":24,"column":3,"nodeType":"608","messageId":"609","endLine":24,"endColumn":17},{"ruleId":"602","severity":1,"message":"603","line":80,"column":16,"nodeType":"604","messageId":"605","endLine":80,"endColumn":43},{"ruleId":"606","severity":1,"message":"624","line":85,"column":22,"nodeType":"608","messageId":"609","endLine":85,"endColumn":28},{"ruleId":"606","severity":1,"message":"625","line":86,"column":12,"nodeType":"608","messageId":"609","endLine":86,"endColumn":26},{"ruleId":"606","severity":1,"message":"626","line":86,"column":28,"nodeType":"608","messageId":"609","endLine":86,"endColumn":45},{"ruleId":"606","severity":1,"message":"627","line":88,"column":26,"nodeType":"608","messageId":"609","endLine":88,"endColumn":41},{"ruleId":"606","severity":1,"message":"628","line":95,"column":11,"nodeType":"608","messageId":"609","endLine":95,"endColumn":30},{"ruleId":"606","severity":1,"message":"611","line":2,"column":18,"nodeType":"608","messageId":"609","endLine":2,"endColumn":27},{"ruleId":"606","severity":1,"message":"612","line":5,"column":8,"nodeType":"608","messageId":"609","endLine":5,"endColumn":19},{"ruleId":"606","severity":1,"message":"613","line":8,"column":8,"nodeType":"608","messageId":"609","endLine":8,"endColumn":24},{"ruleId":"606","severity":1,"message":"614","line":9,"column":8,"nodeType":"608","messageId":"609","endLine":9,"endColumn":16},{"ruleId":"606","severity":1,"message":"615","line":10,"column":8,"nodeType":"608","messageId":"609","endLine":10,"endColumn":12},{"ruleId":"606","severity":1,"message":"616","line":11,"column":8,"nodeType":"608","messageId":"609","endLine":11,"endColumn":12},{"ruleId":"606","severity":1,"message":"618","line":19,"column":27,"nodeType":"608","messageId":"609","endLine":19,"endColumn":33},{"ruleId":"606","severity":1,"message":"619","line":19,"column":35,"nodeType":"608","messageId":"609","endLine":19,"endColumn":40},{"ruleId":"606","severity":1,"message":"620","line":19,"column":42,"nodeType":"608","messageId":"609","endLine":19,"endColumn":48},{"ruleId":"606","severity":1,"message":"621","line":19,"column":50,"nodeType":"608","messageId":"609","endLine":19,"endColumn":59},{"ruleId":"606","severity":1,"message":"622","line":19,"column":73,"nodeType":"608","messageId":"609","endLine":19,"endColumn":84},{"ruleId":"602","severity":1,"message":"603","line":50,"column":1,"nodeType":"604","messageId":"605","endLine":50,"endColumn":24},{"ruleId":"606","severity":1,"message":"624","line":55,"column":22,"nodeType":"608","messageId":"609","endLine":55,"endColumn":28},{"ruleId":"606","severity":1,"message":"625","line":56,"column":12,"nodeType":"608","messageId":"609","endLine":56,"endColumn":26},{"ruleId":"606","severity":1,"message":"611","line":1,"column":18,"nodeType":"608","messageId":"609","endLine":1,"endColumn":27},{"ruleId":"606","severity":1,"message":"665","line":1,"column":29,"nodeType":"608","messageId":"609","endLine":1,"endColumn":37},{"ruleId":"602","severity":1,"message":"603","line":17,"column":16,"nodeType":"604","messageId":"605","endLine":17,"endColumn":46},{"ruleId":"602","severity":1,"message":"682","line":17,"column":32,"nodeType":"608","messageId":"641","endLine":17,"endColumn":45},{"ruleId":"606","severity":1,"message":"617","line":5,"column":17,"nodeType":"608","messageId":"609","endLine":5,"endColumn":27},{"ruleId":"606","severity":1,"message":"683","line":11,"column":10,"nodeType":"608","messageId":"609","endLine":11,"endColumn":20},{"ruleId":"606","severity":1,"message":"684","line":11,"column":22,"nodeType":"608","messageId":"609","endLine":11,"endColumn":29},{"ruleId":"606","severity":1,"message":"685","line":11,"column":31,"nodeType":"608","messageId":"609","endLine":11,"endColumn":44},{"ruleId":"606","severity":1,"message":"680","line":13,"column":10,"nodeType":"608","messageId":"609","endLine":13,"endColumn":31},{"ruleId":"606","severity":1,"message":"686","line":63,"column":11,"nodeType":"608","messageId":"609","endLine":63,"endColumn":22},{"ruleId":"606","severity":1,"message":"657","line":73,"column":11,"nodeType":"608","messageId":"609","endLine":73,"endColumn":26},{"ruleId":"602","severity":1,"message":"603","line":199,"column":16,"nodeType":"604","messageId":"605","endLine":199,"endColumn":42},{"ruleId":"602","severity":1,"message":"640","line":199,"column":36,"nodeType":"608","messageId":"641","endLine":199,"endColumn":41},{"ruleId":"606","severity":1,"message":"687","line":199,"column":36,"nodeType":"608","messageId":"609","endLine":199,"endColumn":41},{"ruleId":"606","severity":1,"message":"688","line":200,"column":11,"nodeType":"608","messageId":"609","endLine":200,"endColumn":18},{"ruleId":"606","severity":1,"message":"611","line":1,"column":17,"nodeType":"608","messageId":"609","endLine":1,"endColumn":26},{"ruleId":"606","severity":1,"message":"673","line":2,"column":8,"nodeType":"608","messageId":"609","endLine":2,"endColumn":14},{"ruleId":"602","severity":1,"message":"603","line":20,"column":16,"nodeType":"604","messageId":"605","endLine":20,"endColumn":51},{"ruleId":"602","severity":1,"message":"640","line":20,"column":45,"nodeType":"608","messageId":"641","endLine":20,"endColumn":50},{"ruleId":"606","severity":1,"message":"687","line":20,"column":45,"nodeType":"608","messageId":"609","endLine":20,"endColumn":50},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","@typescript-eslint/no-unused-vars","'err' is defined but never used.","Identifier","unusedVar","'selectStore' is assigned a value but never used.","'useEffect' is defined but never used.","'CssBaseline' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'AxiosError' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'useParams' is defined but never used.","'useLocation' is defined but never used.","'IErrorResponse' is defined but never used.","'errors' is assigned a value but never used.","'serverMessages' is assigned a value but never used.","'setServerMessages' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'handleSnackbarClick' is assigned a value but never used.","'useDispatch' is defined but never used.","'selectCustomerHeaders' is defined but never used.","'customerRemove' is defined but never used.","'checked' is assigned a value but never used.","'history' is assigned a value but never used.","'handleChange' is assigned a value but never used.","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","'NativeSelect' is defined but never used.","ArrowFunctionExpression","Argument 'props' should be typed.","missingArgType","'appoDate' is assigned a value but never used.","'success' is assigned a value but never used.","'selectCurrentMasterAdmin' is defined but never used.","'masterAdminRemove' is defined but never used.","'header_tokens' is assigned a value but never used.","'handleClickAvatarOpen' is assigned a value but never used.","'ThemeProvider' is defined but never used.","'createStore' is defined but never used.","'enhancer' is assigned a value but never used.","'index' is assigned a value but never used.","'updateInterestsIDs' is assigned a value but never used.","'index' is defined but never used.","'values' is defined but never used.","'handleClickOpen' is defined but never used.","'time' is defined but never used.","'buttonClassname' is assigned a value but never used.","'prev' is defined but never used.","'SeeLog' is defined but never used.","'res' is defined but never used.","'setCustomerRecords' is defined but never used.","'customerRecordRemove' is defined but never used.","'button' is assigned a value but never used.","'setUpdateInterestsIDs' is defined but never used.","'useState' is defined but never used.","'NotificationsIcon' is defined but never used.","'filename' is assigned a value but never used.","'setAddressDetail' is assigned a value but never used.","no-unused-vars","'NumberFormat' is defined but never used.","'TextField' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'useHistory' is defined but never used.","'Paper' is defined but never used.","'FormLabel' is defined but never used.","'Select' is defined but never used.","'selectCurrentCustomer' is defined but never used.","'customerRecords' is assigned a value but never used.","Argument 'setSubmitData' should be typed.","'Controller' is defined but never used.","'useForm' is defined but never used.","'SubmitHandler' is defined but never used.","'handleClose' is assigned a value but never used.","'props' is defined but never used.","'classes' is assigned a value but never used."]